{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-\\.]+"},"docs":[{"location":"","text":"Open Network Operating System (ONOS) \u00b5ONOS is a code-name for the next generation architecture of ONOS - an open-source SDN control and configuration platform. The \u00b5ONOS architecture is: Natively based on new generation of control and configuration interfaces and standards, e.g. P4/P4Runtime , gNMI/OpenConfig , gNOI Provides basis for zero-touch operations support Implemented in systems-level languages - primarily Go, some C/C++ as necessary Modular and based on established and efficient polyglot interface mechanism - gRPC Composed as a set of micro-services and deployable on cloud and data-center infrastructures - Kubernetes Highly available, dynamically scalable and high performance in terms of throughput (control/config ops/sec) and latency for implementing control-loops Available in ready-to-deploy form with a set of tools required for sustained operation, e.g. Docker images, Helm charts, monitoring and troubleshooting tools, etc. \u00b5ONOS is based on our 5+ years of experience building and deploying ONOS which has been a leader in the SDN control plane space when it comes to high availability, performance and scalability. The platform enables comprehensive set of network operations: Configuration, monitoring and maintenance of network devices for zero touch operation Configuration and programming of the forwarding plane structure (forwarding pipelines specified in P4) Validation of network topology and of forwarding plane behaviour Efficient collection of fine-grained network performance metrics (INT) \u00b5ONOS Deployment Architecture Additional Resources Talks at ONF Connect 2019 \u00b5ONOS Project Overview \u00b5ONOS for Developers Device Configuration in \u00b5ONOS","title":"ONOS"},{"location":"#open-network-operating-system-onos","text":"\u00b5ONOS is a code-name for the next generation architecture of ONOS - an open-source SDN control and configuration platform. The \u00b5ONOS architecture is: Natively based on new generation of control and configuration interfaces and standards, e.g. P4/P4Runtime , gNMI/OpenConfig , gNOI Provides basis for zero-touch operations support Implemented in systems-level languages - primarily Go, some C/C++ as necessary Modular and based on established and efficient polyglot interface mechanism - gRPC Composed as a set of micro-services and deployable on cloud and data-center infrastructures - Kubernetes Highly available, dynamically scalable and high performance in terms of throughput (control/config ops/sec) and latency for implementing control-loops Available in ready-to-deploy form with a set of tools required for sustained operation, e.g. Docker images, Helm charts, monitoring and troubleshooting tools, etc. \u00b5ONOS is based on our 5+ years of experience building and deploying ONOS which has been a leader in the SDN control plane space when it comes to high availability, performance and scalability. The platform enables comprehensive set of network operations: Configuration, monitoring and maintenance of network devices for zero touch operation Configuration and programming of the forwarding plane structure (forwarding pipelines specified in P4) Validation of network topology and of forwarding plane behaviour Efficient collection of fine-grained network performance metrics (INT)","title":"Open Network Operating System (ONOS)"},{"location":"#onos-deployment-architecture","text":"","title":"\u00b5ONOS Deployment Architecture"},{"location":"#additional-resources","text":"","title":"Additional Resources"},{"location":"#talks-at-onf-connect-2019","text":"\u00b5ONOS Project Overview \u00b5ONOS for Developers Device Configuration in \u00b5ONOS","title":"Talks at ONF Connect 2019"},{"location":"onos-cli/docs/deployment/","text":"Deploying onos-cli with Helm This guide deploys onos-cli through it's Helm chart assumes you have a Kubernetes cluster running with an atomix controller deployed in a namespace. onos-cli Helm chart is based on Helm 3.0 version, with no need for the Tiller pod to be present. If you don't have a cluster running and want to try on your local machine please follow first the Kubernetes setup steps outlined in deploy with Helm . The following steps assume you have the setup outlined in that page, including the micro-onos namespace configured. Installing the Chart To install the chart in the micro-onos namespace run from the root directory of the onos-helm-charts repo the command: helm install -n micro-onos onos-cli onos-cli The output should be: NAME: onos-cli LAST DEPLOYED: Tue Nov 26 13 :31:42 2019 NAMESPACE: default STATUS: deployed REVISION: 1 TEST SUITE: None helm install assigns a unique name to the chart and displays all the k8s resources that were created by it. To list the charts that are installed and view their statuses, run helm ls : helm ls NAME REVISION UPDATED STATUS CHART APP VERSION NAMESPACE ... onos-cli 1 Tue May 14 18 :56:39 2019 DEPLOYED onos-cli-0.0.1 0 .0.1 default Installing the chart in a different namespace. Issue the helm install command substituting micro-onos with your namespace. helm install -n <your_name_space> onos-cli onos-cli Installing the chart with debug. onos-cli offers the capability to open a debug port (4000) to the image. To enable the debug capabilities please set the debug flag to true in values.yaml or pass it to helm install helm install -n micro-onos onos-cli onos-cli --set debug = true Troubleshoot If your chart does not install or the pod is not running for some reason and/or you modified values Helm offers two flags to help you debug your chart: --dry-run check the chart without actually installing the pod. --debug prints out more information about your chart helm install -n micro-onos onos-cli --debug --dry-run onos-cli/ Also to verify how template values are expanded, run: helm install template onos-gui Uninstalling the chart. To remove the onos-cli pod issue helm delete -n micro-onos onos-cli Pod Information To view the pods that are deployed, run kubectl -n micro-onos get pods . Getting access to the onos-cli console To gain acess to the onos-cli console and be able of issuing the different cli commands the following command is need: kubectl -n micro-onos exec -it $( kubectl -n micro-onos get pods -l type = cli -o name ) -- /bin/sh At this point you can execute topo , config and all the other commands. For example: onos topo get devices","title":"How To Deploy with Helm"},{"location":"onos-cli/docs/deployment/#deploying-onos-cli-with-helm","text":"This guide deploys onos-cli through it's Helm chart assumes you have a Kubernetes cluster running with an atomix controller deployed in a namespace. onos-cli Helm chart is based on Helm 3.0 version, with no need for the Tiller pod to be present. If you don't have a cluster running and want to try on your local machine please follow first the Kubernetes setup steps outlined in deploy with Helm . The following steps assume you have the setup outlined in that page, including the micro-onos namespace configured.","title":"Deploying onos-cli with Helm"},{"location":"onos-cli/docs/deployment/#installing-the-chart","text":"To install the chart in the micro-onos namespace run from the root directory of the onos-helm-charts repo the command: helm install -n micro-onos onos-cli onos-cli The output should be: NAME: onos-cli LAST DEPLOYED: Tue Nov 26 13 :31:42 2019 NAMESPACE: default STATUS: deployed REVISION: 1 TEST SUITE: None helm install assigns a unique name to the chart and displays all the k8s resources that were created by it. To list the charts that are installed and view their statuses, run helm ls : helm ls NAME REVISION UPDATED STATUS CHART APP VERSION NAMESPACE ... onos-cli 1 Tue May 14 18 :56:39 2019 DEPLOYED onos-cli-0.0.1 0 .0.1 default","title":"Installing the Chart"},{"location":"onos-cli/docs/deployment/#installing-the-chart-in-a-different-namespace","text":"Issue the helm install command substituting micro-onos with your namespace. helm install -n <your_name_space> onos-cli onos-cli","title":"Installing the chart in a different namespace."},{"location":"onos-cli/docs/deployment/#installing-the-chart-with-debug","text":"onos-cli offers the capability to open a debug port (4000) to the image. To enable the debug capabilities please set the debug flag to true in values.yaml or pass it to helm install helm install -n micro-onos onos-cli onos-cli --set debug = true","title":"Installing the chart with debug."},{"location":"onos-cli/docs/deployment/#troubleshoot","text":"If your chart does not install or the pod is not running for some reason and/or you modified values Helm offers two flags to help you debug your chart: --dry-run check the chart without actually installing the pod. --debug prints out more information about your chart helm install -n micro-onos onos-cli --debug --dry-run onos-cli/ Also to verify how template values are expanded, run: helm install template onos-gui","title":"Troubleshoot"},{"location":"onos-cli/docs/deployment/#uninstalling-the-chart","text":"To remove the onos-cli pod issue helm delete -n micro-onos onos-cli","title":"Uninstalling the chart."},{"location":"onos-cli/docs/deployment/#pod-information","text":"To view the pods that are deployed, run kubectl -n micro-onos get pods .","title":"Pod Information"},{"location":"onos-cli/docs/deployment/#getting-access-to-the-onos-cli-console","text":"To gain acess to the onos-cli console and be able of issuing the different cli commands the following command is need: kubectl -n micro-onos exec -it $( kubectl -n micro-onos get pods -l type = cli -o name ) -- /bin/sh At this point you can execute topo , config and all the other commands. For example: onos topo get devices","title":"Getting access to the onos-cli console"},{"location":"onos-cli/docs/setup/","text":"How to install and run onos-cli? To install onos command line client, run the following command: > export GO111MODULE = on > go get github.com/onosproject/onos-cli/cmd/onos ONOS-CLI Auto Completion The onos client supports shell auto-completion for its various commands, sub-commands and flags. You can enable this feature for bash or zsh as follows: Bash Auto-Completion > eval \" $( onos completion bash ) \" After that, you should be able to use the TAB key to obtain suggestions for valid options. Zsh Auto-Completion > source < ( onos completion zsh ) Note : Note: We also recommend to add the output of the above commands to .bashrc or .zshrc . How to run onos client? After the above steps, if you run onos from command line interface, you should be able to see an output like this: > onos ONOS command line client Usage: onos [ command ] Available Commands: changes Lists records of configuration changes completion Generated bash or zsh auto-completion script config Read and update CLI configuration options configs Lists details of device configuration changes devices Manages inventory of network devices devicetree Lists devices and their configuration in tree format help Help about any command init Initialize the ONOS CLI configuration models Manages model plugins net-changes Lists network configuration changes rollback Rolls-back a network configuration change Flags: -a, --address string the controller address ( default \":5150\" ) -c, --certPath string path to client certificate ( default \"client1.crt\" ) --config string config file ( default: $HOME /.onos/config.yaml ) -h, --help help for onos -k, --keyPath string path to client private key ( default \"client1.key\" ) Use \"onos [command] --help\" for more information about a command.","title":"How To Install and Run CLI Subsystem?"},{"location":"onos-cli/docs/setup/#how-to-install-and-run-onos-cli","text":"To install onos command line client, run the following command: > export GO111MODULE = on > go get github.com/onosproject/onos-cli/cmd/onos","title":"How to install and run onos-cli?"},{"location":"onos-cli/docs/setup/#onos-cli-auto-completion","text":"The onos client supports shell auto-completion for its various commands, sub-commands and flags. You can enable this feature for bash or zsh as follows:","title":"ONOS-CLI Auto Completion"},{"location":"onos-cli/docs/setup/#bash-auto-completion","text":"> eval \" $( onos completion bash ) \" After that, you should be able to use the TAB key to obtain suggestions for valid options.","title":"Bash Auto-Completion"},{"location":"onos-cli/docs/setup/#zsh-auto-completion","text":"> source < ( onos completion zsh ) Note : Note: We also recommend to add the output of the above commands to .bashrc or .zshrc .","title":"Zsh Auto-Completion"},{"location":"onos-cli/docs/setup/#how-to-run-onos-client","text":"After the above steps, if you run onos from command line interface, you should be able to see an output like this: > onos ONOS command line client Usage: onos [ command ] Available Commands: changes Lists records of configuration changes completion Generated bash or zsh auto-completion script config Read and update CLI configuration options configs Lists details of device configuration changes devices Manages inventory of network devices devicetree Lists devices and their configuration in tree format help Help about any command init Initialize the ONOS CLI configuration models Manages model plugins net-changes Lists network configuration changes rollback Rolls-back a network configuration change Flags: -a, --address string the controller address ( default \":5150\" ) -c, --certPath string path to client certificate ( default \"client1.crt\" ) --config string config file ( default: $HOME /.onos/config.yaml ) -h, --help help for onos -k, --keyPath string path to client private key ( default \"client1.key\" ) Use \"onos [command] --help\" for more information about a command.","title":"How to run onos client?"},{"location":"onos-cli/docs/cli/onos/","text":"onos ONOS command line client Synopsis ONOS command line client Options -h, --help help for onos SEE ALSO onos completion - Generated bash or zsh auto-completion script onos config - ONOS configuration subsystem commands onos ransim - ONOS RAN Simulator subsystem commands onos ric - ONOS ric subsystem commands onos topo - ONOS topology subsystem commands onos ztp - ONOS zero-touch provisioning subsystem commands Auto generated by spf13/cobra on 7-Apr-2020","title":"ONOS CLI Commands"},{"location":"onos-cli/docs/cli/onos/#onos","text":"ONOS command line client","title":"onos"},{"location":"onos-cli/docs/cli/onos/#synopsis","text":"ONOS command line client","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos/#options","text":"-h, --help help for onos","title":"Options"},{"location":"onos-cli/docs/cli/onos/#see-also","text":"onos completion - Generated bash or zsh auto-completion script onos config - ONOS configuration subsystem commands onos ransim - ONOS RAN Simulator subsystem commands onos ric - ONOS ric subsystem commands onos topo - ONOS topology subsystem commands onos ztp - ONOS zero-touch provisioning subsystem commands","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_completion/","text":"onos completion Generated bash or zsh auto-completion script Synopsis Generated bash or zsh auto-completion script onos completion < shell > [ flags ] Examples For bash run the following command from the shell: eval $(onos completion bash). For zsh run the following command from the shell: source <(onos completion zsh). Options -h, --help help for completion SEE ALSO onos - ONOS command line client Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos completion"},{"location":"onos-cli/docs/cli/onos_completion/#onos-completion","text":"Generated bash or zsh auto-completion script","title":"onos completion"},{"location":"onos-cli/docs/cli/onos_completion/#synopsis","text":"Generated bash or zsh auto-completion script onos completion < shell > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_completion/#examples","text":"For bash run the following command from the shell: eval $(onos completion bash). For zsh run the following command from the shell: source <(onos completion zsh).","title":"Examples"},{"location":"onos-cli/docs/cli/onos_completion/#options","text":"-h, --help help for completion","title":"Options"},{"location":"onos-cli/docs/cli/onos_completion/#see-also","text":"onos - ONOS command line client","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_completion/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_config/","text":"onos config ONOS configuration subsystem commands Synopsis ONOS configuration subsystem commands Options -h, --help help for config --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos - ONOS command line client onos config add - Add a config resource onos config compact-changes - Takes a snapshot of network and device changes onos config config - Manage the CLI configuration onos config get - Get config resources onos config log - logging api commands onos config rollback - Rolls-back a network change onos config watch - Watch for updates to a config resource type Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos config"},{"location":"onos-cli/docs/cli/onos_config/#onos-config","text":"ONOS configuration subsystem commands","title":"onos config"},{"location":"onos-cli/docs/cli/onos_config/#synopsis","text":"ONOS configuration subsystem commands","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_config/#options","text":"-h, --help help for config --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options"},{"location":"onos-cli/docs/cli/onos_config/#see-also","text":"onos - ONOS command line client onos config add - Add a config resource onos config compact-changes - Takes a snapshot of network and device changes onos config config - Manage the CLI configuration onos config get - Get config resources onos config log - logging api commands onos config rollback - Rolls-back a network change onos config watch - Watch for updates to a config resource type","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_config/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_config_add/","text":"onos config add Add a config resource Synopsis Add a config resource Options -h, --help help for add Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos config - ONOS configuration subsystem commands onos config add plugin - Loads a new model plugin Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos config add"},{"location":"onos-cli/docs/cli/onos_config_add/#onos-config-add","text":"Add a config resource","title":"onos config add"},{"location":"onos-cli/docs/cli/onos_config_add/#synopsis","text":"Add a config resource","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_config_add/#options","text":"-h, --help help for add","title":"Options"},{"location":"onos-cli/docs/cli/onos_config_add/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_config_add/#see-also","text":"onos config - ONOS configuration subsystem commands onos config add plugin - Loads a new model plugin","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_config_add/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_config_add_plugin/","text":"onos config add plugin Loads a new model plugin Synopsis Loads a new model plugin onos config add plugin < plugin path and filename > [ flags ] Options -h, --help help for plugin Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos config add - Add a config resource Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos config add plugin"},{"location":"onos-cli/docs/cli/onos_config_add_plugin/#onos-config-add-plugin","text":"Loads a new model plugin","title":"onos config add plugin"},{"location":"onos-cli/docs/cli/onos_config_add_plugin/#synopsis","text":"Loads a new model plugin onos config add plugin < plugin path and filename > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_config_add_plugin/#options","text":"-h, --help help for plugin","title":"Options"},{"location":"onos-cli/docs/cli/onos_config_add_plugin/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_config_add_plugin/#see-also","text":"onos config add - Add a config resource","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_config_add_plugin/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_config_compact-changes/","text":"onos config compact-changes Takes a snapshot of network and device changes Synopsis Takes a snapshot of network and device changes onos config compact - changes [ flags ] Options -h, --help help for compact-changes -r, --retention-period duration the period for which to retain all changes Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos config - ONOS configuration subsystem commands Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos config compact changes"},{"location":"onos-cli/docs/cli/onos_config_compact-changes/#onos-config-compact-changes","text":"Takes a snapshot of network and device changes","title":"onos config compact-changes"},{"location":"onos-cli/docs/cli/onos_config_compact-changes/#synopsis","text":"Takes a snapshot of network and device changes onos config compact - changes [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_config_compact-changes/#options","text":"-h, --help help for compact-changes -r, --retention-period duration the period for which to retain all changes","title":"Options"},{"location":"onos-cli/docs/cli/onos_config_compact-changes/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_config_compact-changes/#see-also","text":"onos config - ONOS configuration subsystem commands","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_config_compact-changes/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_config_config/","text":"onos config config Manage the CLI configuration Synopsis Manage the CLI configuration Options -h, --help help for config Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos config - ONOS configuration subsystem commands onos config config delete - Delete CLI option value onos config config get - Get CLI option value onos config config init - Initialize the ransim CLI configuration onos config config set - Set CLI option value Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos config config"},{"location":"onos-cli/docs/cli/onos_config_config/#onos-config-config","text":"Manage the CLI configuration","title":"onos config config"},{"location":"onos-cli/docs/cli/onos_config_config/#synopsis","text":"Manage the CLI configuration","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_config_config/#options","text":"-h, --help help for config","title":"Options"},{"location":"onos-cli/docs/cli/onos_config_config/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_config_config/#see-also","text":"onos config - ONOS configuration subsystem commands onos config config delete - Delete CLI option value onos config config get - Get CLI option value onos config config init - Initialize the ransim CLI configuration onos config config set - Set CLI option value","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_config_config/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_config_config_delete/","text":"onos config config delete Delete CLI option value Synopsis Delete CLI option value onos config config delete < key > [ flags ] Options -h, --help help for delete Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos config config - Manage the CLI configuration Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos config config delete"},{"location":"onos-cli/docs/cli/onos_config_config_delete/#onos-config-config-delete","text":"Delete CLI option value","title":"onos config config delete"},{"location":"onos-cli/docs/cli/onos_config_config_delete/#synopsis","text":"Delete CLI option value onos config config delete < key > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_config_config_delete/#options","text":"-h, --help help for delete","title":"Options"},{"location":"onos-cli/docs/cli/onos_config_config_delete/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_config_config_delete/#see-also","text":"onos config config - Manage the CLI configuration","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_config_config_delete/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_config_config_get/","text":"onos config config get Get CLI option value Synopsis Get CLI option value onos config config get < key > [ flags ] Options -h, --help help for get Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos config config - Manage the CLI configuration Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos config config get"},{"location":"onos-cli/docs/cli/onos_config_config_get/#onos-config-config-get","text":"Get CLI option value","title":"onos config config get"},{"location":"onos-cli/docs/cli/onos_config_config_get/#synopsis","text":"Get CLI option value onos config config get < key > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_config_config_get/#options","text":"-h, --help help for get","title":"Options"},{"location":"onos-cli/docs/cli/onos_config_config_get/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_config_config_get/#see-also","text":"onos config config - Manage the CLI configuration","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_config_config_get/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_config_config_init/","text":"onos config config init Initialize the ransim CLI configuration Synopsis Initialize the ransim CLI configuration onos config config init [ flags ] Options -h, --help help for init Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos config config - Manage the CLI configuration Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos config config init"},{"location":"onos-cli/docs/cli/onos_config_config_init/#onos-config-config-init","text":"Initialize the ransim CLI configuration","title":"onos config config init"},{"location":"onos-cli/docs/cli/onos_config_config_init/#synopsis","text":"Initialize the ransim CLI configuration onos config config init [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_config_config_init/#options","text":"-h, --help help for init","title":"Options"},{"location":"onos-cli/docs/cli/onos_config_config_init/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_config_config_init/#see-also","text":"onos config config - Manage the CLI configuration","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_config_config_init/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_config_config_set/","text":"onos config config set Set CLI option value Synopsis Set CLI option value onos config config set < key > < value > [ flags ] Options -h, --help help for set Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos config config - Manage the CLI configuration Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos config config set"},{"location":"onos-cli/docs/cli/onos_config_config_set/#onos-config-config-set","text":"Set CLI option value","title":"onos config config set"},{"location":"onos-cli/docs/cli/onos_config_config_set/#synopsis","text":"Set CLI option value onos config config set < key > < value > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_config_config_set/#options","text":"-h, --help help for set","title":"Options"},{"location":"onos-cli/docs/cli/onos_config_config_set/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_config_config_set/#see-also","text":"onos config config - Manage the CLI configuration","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_config_config_set/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_config_get/","text":"onos config get Get config resources Synopsis Get config resources Options -h, --help help for get Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos config - ONOS configuration subsystem commands onos config get device-changes - List current changes on a device onos config get network-changes - List current network changes onos config get opstate - Get the Opstate cache for a device onos config get plugins - Lists the loaded model plugins onos config get snapshots - List snapshots Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos config get"},{"location":"onos-cli/docs/cli/onos_config_get/#onos-config-get","text":"Get config resources","title":"onos config get"},{"location":"onos-cli/docs/cli/onos_config_get/#synopsis","text":"Get config resources","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_config_get/#options","text":"-h, --help help for get","title":"Options"},{"location":"onos-cli/docs/cli/onos_config_get/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_config_get/#see-also","text":"onos config - ONOS configuration subsystem commands onos config get device-changes - List current changes on a device onos config get network-changes - List current network changes onos config get opstate - Get the Opstate cache for a device onos config get plugins - Lists the loaded model plugins onos config get snapshots - List snapshots","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_config_get/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_config_get_device-changes/","text":"onos config get device-changes List current changes on a device Synopsis List current changes on a device onos config get device - changes < deviceid > [ flags ] Options -h, --help help for device-changes --no-headers disables output headers -v, --version string device version Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos config get - Get config resources Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos config get device changes"},{"location":"onos-cli/docs/cli/onos_config_get_device-changes/#onos-config-get-device-changes","text":"List current changes on a device","title":"onos config get device-changes"},{"location":"onos-cli/docs/cli/onos_config_get_device-changes/#synopsis","text":"List current changes on a device onos config get device - changes < deviceid > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_config_get_device-changes/#options","text":"-h, --help help for device-changes --no-headers disables output headers -v, --version string device version","title":"Options"},{"location":"onos-cli/docs/cli/onos_config_get_device-changes/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_config_get_device-changes/#see-also","text":"onos config get - Get config resources","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_config_get_device-changes/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_config_get_network-changes/","text":"onos config get network-changes List current network changes Synopsis List current network changes onos config get network - changes [ changeId wildcard ] [ flags ] Options -h, --help help for network-changes --no-headers disables output headers -v, --verbose whether to print the change with verbose output Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos config get - Get config resources Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos config get network changes"},{"location":"onos-cli/docs/cli/onos_config_get_network-changes/#onos-config-get-network-changes","text":"List current network changes","title":"onos config get network-changes"},{"location":"onos-cli/docs/cli/onos_config_get_network-changes/#synopsis","text":"List current network changes onos config get network - changes [ changeId wildcard ] [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_config_get_network-changes/#options","text":"-h, --help help for network-changes --no-headers disables output headers -v, --verbose whether to print the change with verbose output","title":"Options"},{"location":"onos-cli/docs/cli/onos_config_get_network-changes/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_config_get_network-changes/#see-also","text":"onos config get - Get config resources","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_config_get_network-changes/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_config_get_opstate/","text":"onos config get opstate Get the Opstate cache for a device Synopsis Get the Opstate cache for a device onos config get opstate < deviceid > [ flags ] Options -h, --help help for opstate --no-headers disables output headers Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos config get - Get config resources Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos config get opstate"},{"location":"onos-cli/docs/cli/onos_config_get_opstate/#onos-config-get-opstate","text":"Get the Opstate cache for a device","title":"onos config get opstate"},{"location":"onos-cli/docs/cli/onos_config_get_opstate/#synopsis","text":"Get the Opstate cache for a device onos config get opstate < deviceid > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_config_get_opstate/#options","text":"-h, --help help for opstate --no-headers disables output headers","title":"Options"},{"location":"onos-cli/docs/cli/onos_config_get_opstate/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_config_get_opstate/#see-also","text":"onos config get - Get config resources","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_config_get_opstate/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_config_get_plugins/","text":"onos config get plugins Lists the loaded model plugins Synopsis Lists the loaded model plugins onos config get plugins [ flags ] Options -h, --help help for plugins -v, --verbose display verbose output Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos config get - Get config resources Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos config get plugins"},{"location":"onos-cli/docs/cli/onos_config_get_plugins/#onos-config-get-plugins","text":"Lists the loaded model plugins","title":"onos config get plugins"},{"location":"onos-cli/docs/cli/onos_config_get_plugins/#synopsis","text":"Lists the loaded model plugins onos config get plugins [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_config_get_plugins/#options","text":"-h, --help help for plugins -v, --verbose display verbose output","title":"Options"},{"location":"onos-cli/docs/cli/onos_config_get_plugins/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_config_get_plugins/#see-also","text":"onos config get - Get config resources","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_config_get_plugins/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_config_get_snapshots/","text":"onos config get snapshots List snapshots Synopsis List snapshots onos config get snapshots [ id wildcard ] [ flags ] Options -h, --help help for snapshots --no-headers disables output headers -v, --verbose whether to print the change with verbose output Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos config get - Get config resources Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos config get snapshots"},{"location":"onos-cli/docs/cli/onos_config_get_snapshots/#onos-config-get-snapshots","text":"List snapshots","title":"onos config get snapshots"},{"location":"onos-cli/docs/cli/onos_config_get_snapshots/#synopsis","text":"List snapshots onos config get snapshots [ id wildcard ] [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_config_get_snapshots/#options","text":"-h, --help help for snapshots --no-headers disables output headers -v, --verbose whether to print the change with verbose output","title":"Options"},{"location":"onos-cli/docs/cli/onos_config_get_snapshots/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_config_get_snapshots/#see-also","text":"onos config get - Get config resources","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_config_get_snapshots/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_config_log/","text":"onos config log logging api commands Synopsis logging api commands Options -h, --help help for log Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos config - ONOS configuration subsystem commands onos config log set - Sets a logger level or enable debug mode for logging package Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos config log"},{"location":"onos-cli/docs/cli/onos_config_log/#onos-config-log","text":"logging api commands","title":"onos config log"},{"location":"onos-cli/docs/cli/onos_config_log/#synopsis","text":"logging api commands","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_config_log/#options","text":"-h, --help help for log","title":"Options"},{"location":"onos-cli/docs/cli/onos_config_log/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_config_log/#see-also","text":"onos config - ONOS configuration subsystem commands onos config log set - Sets a logger level or enable debug mode for logging package","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_config_log/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_config_log_set/","text":"onos config log set Sets a logger level or enable debug mode for logging package Synopsis Sets a logger level or enable debug mode for logging package Options -h, --help help for set Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos config log - logging api commands onos config log set debug - enable/disable debug mode for logging package onos config log set level - Sets a level to a logger Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos config log set"},{"location":"onos-cli/docs/cli/onos_config_log_set/#onos-config-log-set","text":"Sets a logger level or enable debug mode for logging package","title":"onos config log set"},{"location":"onos-cli/docs/cli/onos_config_log_set/#synopsis","text":"Sets a logger level or enable debug mode for logging package","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_config_log_set/#options","text":"-h, --help help for set","title":"Options"},{"location":"onos-cli/docs/cli/onos_config_log_set/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_config_log_set/#see-also","text":"onos config log - logging api commands onos config log set debug - enable/disable debug mode for logging package onos config log set level - Sets a level to a logger","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_config_log_set/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_config_log_set_debug/","text":"onos config log set debug enable/disable debug mode for logging package Synopsis enable/disable debug mode for logging package onos config log set debug [ args ] [ flags ] Options -h, --help help for debug Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos config log set - Sets a logger level or enable debug mode for logging package Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos config log set debug"},{"location":"onos-cli/docs/cli/onos_config_log_set_debug/#onos-config-log-set-debug","text":"enable/disable debug mode for logging package","title":"onos config log set debug"},{"location":"onos-cli/docs/cli/onos_config_log_set_debug/#synopsis","text":"enable/disable debug mode for logging package onos config log set debug [ args ] [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_config_log_set_debug/#options","text":"-h, --help help for debug","title":"Options"},{"location":"onos-cli/docs/cli/onos_config_log_set_debug/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_config_log_set_debug/#see-also","text":"onos config log set - Sets a logger level or enable debug mode for logging package","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_config_log_set_debug/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_config_log_set_level/","text":"onos config log set level Sets a level to a logger Synopsis Sets a level to a logger onos config log set level [ args ] [ flags ] Options -h, --help help for level -l, --level string the logger level (default \"INFO\") Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos config log set - Sets a logger level or enable debug mode for logging package Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos config log set level"},{"location":"onos-cli/docs/cli/onos_config_log_set_level/#onos-config-log-set-level","text":"Sets a level to a logger","title":"onos config log set level"},{"location":"onos-cli/docs/cli/onos_config_log_set_level/#synopsis","text":"Sets a level to a logger onos config log set level [ args ] [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_config_log_set_level/#options","text":"-h, --help help for level -l, --level string the logger level (default \"INFO\")","title":"Options"},{"location":"onos-cli/docs/cli/onos_config_log_set_level/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_config_log_set_level/#see-also","text":"onos config log set - Sets a logger level or enable debug mode for logging package","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_config_log_set_level/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_config_rollback/","text":"onos config rollback Rolls-back a network change Synopsis Rolls-back a network change onos config rollback < changeId > [ flags ] Options -h, --help help for rollback Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos config - ONOS configuration subsystem commands Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos config rollback"},{"location":"onos-cli/docs/cli/onos_config_rollback/#onos-config-rollback","text":"Rolls-back a network change","title":"onos config rollback"},{"location":"onos-cli/docs/cli/onos_config_rollback/#synopsis","text":"Rolls-back a network change onos config rollback < changeId > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_config_rollback/#options","text":"-h, --help help for rollback","title":"Options"},{"location":"onos-cli/docs/cli/onos_config_rollback/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_config_rollback/#see-also","text":"onos config - ONOS configuration subsystem commands","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_config_rollback/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_config_snapshot/","text":"onos config snapshot Commands for managing snapshots Synopsis Commands for managing snapshots onos config snapshot [ flags ] Options -h, --help help for snapshot -v, --version string device version Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the onos-config service address (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos config - ONOS configuration subsystem commands Auto generated by spf13/cobra on 4-Jan-2020","title":"Onos config snapshot"},{"location":"onos-cli/docs/cli/onos_config_snapshot/#onos-config-snapshot","text":"Commands for managing snapshots","title":"onos config snapshot"},{"location":"onos-cli/docs/cli/onos_config_snapshot/#synopsis","text":"Commands for managing snapshots onos config snapshot [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_config_snapshot/#options","text":"-h, --help help for snapshot -v, --version string device version","title":"Options"},{"location":"onos-cli/docs/cli/onos_config_snapshot/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the onos-config service address (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_config_snapshot/#see-also","text":"onos config - ONOS configuration subsystem commands","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_config_snapshot/#auto-generated-by-spf13cobra-on-4-jan-2020","text":"","title":"Auto generated by spf13/cobra on 4-Jan-2020"},{"location":"onos-cli/docs/cli/onos_config_watch/","text":"onos config watch Watch for updates to a config resource type Synopsis Watch for updates to a config resource type Options -h, --help help for watch Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos config - ONOS configuration subsystem commands onos config watch device-changes - Watch for changes on a device with updates onos config watch network-changes - Watch for network changes with updates onos config watch opstate - Watch the Opstate cache for a device onos config watch snapshots - Watch for snapshots with updates Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos config watch"},{"location":"onos-cli/docs/cli/onos_config_watch/#onos-config-watch","text":"Watch for updates to a config resource type","title":"onos config watch"},{"location":"onos-cli/docs/cli/onos_config_watch/#synopsis","text":"Watch for updates to a config resource type","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_config_watch/#options","text":"-h, --help help for watch","title":"Options"},{"location":"onos-cli/docs/cli/onos_config_watch/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_config_watch/#see-also","text":"onos config - ONOS configuration subsystem commands onos config watch device-changes - Watch for changes on a device with updates onos config watch network-changes - Watch for network changes with updates onos config watch opstate - Watch the Opstate cache for a device onos config watch snapshots - Watch for snapshots with updates","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_config_watch/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_config_watch_device-changes/","text":"onos config watch device-changes Watch for changes on a device with updates Synopsis Watch for changes on a device with updates onos config watch device - changes < deviceid > [ flags ] Options -h, --help help for device-changes --no-headers disables output headers -v, --version string an optional version Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos config watch - Watch for updates to a config resource type Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos config watch device changes"},{"location":"onos-cli/docs/cli/onos_config_watch_device-changes/#onos-config-watch-device-changes","text":"Watch for changes on a device with updates","title":"onos config watch device-changes"},{"location":"onos-cli/docs/cli/onos_config_watch_device-changes/#synopsis","text":"Watch for changes on a device with updates onos config watch device - changes < deviceid > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_config_watch_device-changes/#options","text":"-h, --help help for device-changes --no-headers disables output headers -v, --version string an optional version","title":"Options"},{"location":"onos-cli/docs/cli/onos_config_watch_device-changes/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_config_watch_device-changes/#see-also","text":"onos config watch - Watch for updates to a config resource type","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_config_watch_device-changes/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_config_watch_network-changes/","text":"onos config watch network-changes Watch for network changes with updates Synopsis Watch for network changes with updates onos config watch network - changes [ changeId wildcard ] [ flags ] Options -h, --help help for network-changes --no-headers disables output headers -v, --verbose whether to print the change with verbose output Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos config watch - Watch for updates to a config resource type Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos config watch network changes"},{"location":"onos-cli/docs/cli/onos_config_watch_network-changes/#onos-config-watch-network-changes","text":"Watch for network changes with updates","title":"onos config watch network-changes"},{"location":"onos-cli/docs/cli/onos_config_watch_network-changes/#synopsis","text":"Watch for network changes with updates onos config watch network - changes [ changeId wildcard ] [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_config_watch_network-changes/#options","text":"-h, --help help for network-changes --no-headers disables output headers -v, --verbose whether to print the change with verbose output","title":"Options"},{"location":"onos-cli/docs/cli/onos_config_watch_network-changes/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_config_watch_network-changes/#see-also","text":"onos config watch - Watch for updates to a config resource type","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_config_watch_network-changes/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_config_watch_opstate/","text":"onos config watch opstate Watch the Opstate cache for a device Synopsis Watch the Opstate cache for a device onos config watch opstate < deviceid > [ flags ] Options -h, --help help for opstate --no-headers disables output headers Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos config watch - Watch for updates to a config resource type Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos config watch opstate"},{"location":"onos-cli/docs/cli/onos_config_watch_opstate/#onos-config-watch-opstate","text":"Watch the Opstate cache for a device","title":"onos config watch opstate"},{"location":"onos-cli/docs/cli/onos_config_watch_opstate/#synopsis","text":"Watch the Opstate cache for a device onos config watch opstate < deviceid > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_config_watch_opstate/#options","text":"-h, --help help for opstate --no-headers disables output headers","title":"Options"},{"location":"onos-cli/docs/cli/onos_config_watch_opstate/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_config_watch_opstate/#see-also","text":"onos config watch - Watch for updates to a config resource type","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_config_watch_opstate/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_config_watch_snapshots/","text":"onos config watch snapshots Watch for snapshots with updates Synopsis Watch for snapshots with updates onos config watch snapshots [ id wildcard ] [ flags ] Options -h, --help help for snapshots --no-headers disables output headers -v, --verbose whether to print the change with verbose output Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos config watch - Watch for updates to a config resource type Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos config watch snapshots"},{"location":"onos-cli/docs/cli/onos_config_watch_snapshots/#onos-config-watch-snapshots","text":"Watch for snapshots with updates","title":"onos config watch snapshots"},{"location":"onos-cli/docs/cli/onos_config_watch_snapshots/#synopsis","text":"Watch for snapshots with updates onos config watch snapshots [ id wildcard ] [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_config_watch_snapshots/#options","text":"-h, --help help for snapshots --no-headers disables output headers -v, --verbose whether to print the change with verbose output","title":"Options"},{"location":"onos-cli/docs/cli/onos_config_watch_snapshots/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-config:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_config_watch_snapshots/#see-also","text":"onos config watch - Watch for updates to a config resource type","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_config_watch_snapshots/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ransim/","text":"onos ransim ONOS RAN Simulator subsystem commands Synopsis ONOS RAN Simulator subsystem commands Options -h, --help help for ransim --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"ran-simulator:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos - ONOS command line client onos ransim config - Manage the CLI configuration onos ransim log - logging api commands onos ransim setnumues - Change the number of UEs in the RAN simulation Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ransim"},{"location":"onos-cli/docs/cli/onos_ransim/#onos-ransim","text":"ONOS RAN Simulator subsystem commands","title":"onos ransim"},{"location":"onos-cli/docs/cli/onos_ransim/#synopsis","text":"ONOS RAN Simulator subsystem commands","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ransim/#options","text":"-h, --help help for ransim --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"ran-simulator:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options"},{"location":"onos-cli/docs/cli/onos_ransim/#see-also","text":"onos - ONOS command line client onos ransim config - Manage the CLI configuration onos ransim log - logging api commands onos ransim setnumues - Change the number of UEs in the RAN simulation","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ransim/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ransim_config/","text":"onos ransim config Manage the CLI configuration Synopsis Manage the CLI configuration Options -h, --help help for config Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"ran-simulator:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ransim - ONOS RAN Simulator subsystem commands onos ransim config delete - Delete CLI option value onos ransim config get - Get CLI option value onos ransim config init - Initialize the ransim CLI configuration onos ransim config set - Set CLI option value Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ransim config"},{"location":"onos-cli/docs/cli/onos_ransim_config/#onos-ransim-config","text":"Manage the CLI configuration","title":"onos ransim config"},{"location":"onos-cli/docs/cli/onos_ransim_config/#synopsis","text":"Manage the CLI configuration","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ransim_config/#options","text":"-h, --help help for config","title":"Options"},{"location":"onos-cli/docs/cli/onos_ransim_config/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"ran-simulator:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ransim_config/#see-also","text":"onos ransim - ONOS RAN Simulator subsystem commands onos ransim config delete - Delete CLI option value onos ransim config get - Get CLI option value onos ransim config init - Initialize the ransim CLI configuration onos ransim config set - Set CLI option value","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ransim_config/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ransim_config_delete/","text":"onos ransim config delete Delete CLI option value Synopsis Delete CLI option value onos ransim config delete < key > [ flags ] Options -h, --help help for delete Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"ran-simulator:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ransim config - Manage the CLI configuration Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ransim config delete"},{"location":"onos-cli/docs/cli/onos_ransim_config_delete/#onos-ransim-config-delete","text":"Delete CLI option value","title":"onos ransim config delete"},{"location":"onos-cli/docs/cli/onos_ransim_config_delete/#synopsis","text":"Delete CLI option value onos ransim config delete < key > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ransim_config_delete/#options","text":"-h, --help help for delete","title":"Options"},{"location":"onos-cli/docs/cli/onos_ransim_config_delete/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"ran-simulator:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ransim_config_delete/#see-also","text":"onos ransim config - Manage the CLI configuration","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ransim_config_delete/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ransim_config_get/","text":"onos ransim config get Get CLI option value Synopsis Get CLI option value onos ransim config get < key > [ flags ] Options -h, --help help for get Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"ran-simulator:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ransim config - Manage the CLI configuration Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ransim config get"},{"location":"onos-cli/docs/cli/onos_ransim_config_get/#onos-ransim-config-get","text":"Get CLI option value","title":"onos ransim config get"},{"location":"onos-cli/docs/cli/onos_ransim_config_get/#synopsis","text":"Get CLI option value onos ransim config get < key > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ransim_config_get/#options","text":"-h, --help help for get","title":"Options"},{"location":"onos-cli/docs/cli/onos_ransim_config_get/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"ran-simulator:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ransim_config_get/#see-also","text":"onos ransim config - Manage the CLI configuration","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ransim_config_get/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ransim_config_init/","text":"onos ransim config init Initialize the ransim CLI configuration Synopsis Initialize the ransim CLI configuration onos ransim config init [ flags ] Options -h, --help help for init Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"ran-simulator:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ransim config - Manage the CLI configuration Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ransim config init"},{"location":"onos-cli/docs/cli/onos_ransim_config_init/#onos-ransim-config-init","text":"Initialize the ransim CLI configuration","title":"onos ransim config init"},{"location":"onos-cli/docs/cli/onos_ransim_config_init/#synopsis","text":"Initialize the ransim CLI configuration onos ransim config init [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ransim_config_init/#options","text":"-h, --help help for init","title":"Options"},{"location":"onos-cli/docs/cli/onos_ransim_config_init/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"ran-simulator:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ransim_config_init/#see-also","text":"onos ransim config - Manage the CLI configuration","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ransim_config_init/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ransim_config_set/","text":"onos ransim config set Set CLI option value Synopsis Set CLI option value onos ransim config set < key > < value > [ flags ] Options -h, --help help for set Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"ran-simulator:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ransim config - Manage the CLI configuration Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ransim config set"},{"location":"onos-cli/docs/cli/onos_ransim_config_set/#onos-ransim-config-set","text":"Set CLI option value","title":"onos ransim config set"},{"location":"onos-cli/docs/cli/onos_ransim_config_set/#synopsis","text":"Set CLI option value onos ransim config set < key > < value > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ransim_config_set/#options","text":"-h, --help help for set","title":"Options"},{"location":"onos-cli/docs/cli/onos_ransim_config_set/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"ran-simulator:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ransim_config_set/#see-also","text":"onos ransim config - Manage the CLI configuration","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ransim_config_set/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ransim_log/","text":"onos ransim log logging api commands Synopsis logging api commands Options -h, --help help for log Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"ran-simulator:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ransim - ONOS RAN Simulator subsystem commands onos ransim log set - Sets a logger level or enable debug mode for logging package Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ransim log"},{"location":"onos-cli/docs/cli/onos_ransim_log/#onos-ransim-log","text":"logging api commands","title":"onos ransim log"},{"location":"onos-cli/docs/cli/onos_ransim_log/#synopsis","text":"logging api commands","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ransim_log/#options","text":"-h, --help help for log","title":"Options"},{"location":"onos-cli/docs/cli/onos_ransim_log/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"ran-simulator:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ransim_log/#see-also","text":"onos ransim - ONOS RAN Simulator subsystem commands onos ransim log set - Sets a logger level or enable debug mode for logging package","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ransim_log/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ransim_log_set/","text":"onos ransim log set Sets a logger level or enable debug mode for logging package Synopsis Sets a logger level or enable debug mode for logging package Options -h, --help help for set Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"ran-simulator:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ransim log - logging api commands onos ransim log set debug - enable/disable debug mode for logging package onos ransim log set level - Sets a level to a logger Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ransim log set"},{"location":"onos-cli/docs/cli/onos_ransim_log_set/#onos-ransim-log-set","text":"Sets a logger level or enable debug mode for logging package","title":"onos ransim log set"},{"location":"onos-cli/docs/cli/onos_ransim_log_set/#synopsis","text":"Sets a logger level or enable debug mode for logging package","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ransim_log_set/#options","text":"-h, --help help for set","title":"Options"},{"location":"onos-cli/docs/cli/onos_ransim_log_set/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"ran-simulator:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ransim_log_set/#see-also","text":"onos ransim log - logging api commands onos ransim log set debug - enable/disable debug mode for logging package onos ransim log set level - Sets a level to a logger","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ransim_log_set/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ransim_log_set_debug/","text":"onos ransim log set debug enable/disable debug mode for logging package Synopsis enable/disable debug mode for logging package onos ransim log set debug [ args ] [ flags ] Options -h, --help help for debug Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"ran-simulator:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ransim log set - Sets a logger level or enable debug mode for logging package Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ransim log set debug"},{"location":"onos-cli/docs/cli/onos_ransim_log_set_debug/#onos-ransim-log-set-debug","text":"enable/disable debug mode for logging package","title":"onos ransim log set debug"},{"location":"onos-cli/docs/cli/onos_ransim_log_set_debug/#synopsis","text":"enable/disable debug mode for logging package onos ransim log set debug [ args ] [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ransim_log_set_debug/#options","text":"-h, --help help for debug","title":"Options"},{"location":"onos-cli/docs/cli/onos_ransim_log_set_debug/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"ran-simulator:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ransim_log_set_debug/#see-also","text":"onos ransim log set - Sets a logger level or enable debug mode for logging package","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ransim_log_set_debug/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ransim_log_set_level/","text":"onos ransim log set level Sets a level to a logger Synopsis Sets a level to a logger onos ransim log set level [ args ] [ flags ] Options -h, --help help for level -l, --level string the logger level (default \"INFO\") Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"ran-simulator:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ransim log set - Sets a logger level or enable debug mode for logging package Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ransim log set level"},{"location":"onos-cli/docs/cli/onos_ransim_log_set_level/#onos-ransim-log-set-level","text":"Sets a level to a logger","title":"onos ransim log set level"},{"location":"onos-cli/docs/cli/onos_ransim_log_set_level/#synopsis","text":"Sets a level to a logger onos ransim log set level [ args ] [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ransim_log_set_level/#options","text":"-h, --help help for level -l, --level string the logger level (default \"INFO\")","title":"Options"},{"location":"onos-cli/docs/cli/onos_ransim_log_set_level/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"ran-simulator:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ransim_log_set_level/#see-also","text":"onos ransim log set - Sets a logger level or enable debug mode for logging package","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ransim_log_set_level/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ransim_setnumues/","text":"onos ransim setnumues Change the number of UEs in the RAN simulation Synopsis Change the number of UEs in the RAN simulation onos ransim setnumues < numues > [ flags ] Options -h, --help help for setnumues Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"ran-simulator:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ransim - ONOS RAN Simulator subsystem commands Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ransim setnumues"},{"location":"onos-cli/docs/cli/onos_ransim_setnumues/#onos-ransim-setnumues","text":"Change the number of UEs in the RAN simulation","title":"onos ransim setnumues"},{"location":"onos-cli/docs/cli/onos_ransim_setnumues/#synopsis","text":"Change the number of UEs in the RAN simulation onos ransim setnumues < numues > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ransim_setnumues/#options","text":"-h, --help help for setnumues","title":"Options"},{"location":"onos-cli/docs/cli/onos_ransim_setnumues/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"ran-simulator:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ransim_setnumues/#see-also","text":"onos ransim - ONOS RAN Simulator subsystem commands","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ransim_setnumues/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ric/","text":"onos ric ONOS ric subsystem commands Synopsis ONOS ric subsystem commands Options -h, --help help for ric --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos - ONOS command line client onos ric config - Manage the CLI configuration onos ric get - Get RIC resources onos ric handover - Trigger UE handover between two base stations onos ric log - logging api commands onos ric set - Set RIC resource parameters onos ric watch - Watch for changes to a RIC resource type Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ric"},{"location":"onos-cli/docs/cli/onos_ric/#onos-ric","text":"ONOS ric subsystem commands","title":"onos ric"},{"location":"onos-cli/docs/cli/onos_ric/#synopsis","text":"ONOS ric subsystem commands","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ric/#options","text":"-h, --help help for ric --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options"},{"location":"onos-cli/docs/cli/onos_ric/#see-also","text":"onos - ONOS command line client onos ric config - Manage the CLI configuration onos ric get - Get RIC resources onos ric handover - Trigger UE handover between two base stations onos ric log - logging api commands onos ric set - Set RIC resource parameters onos ric watch - Watch for changes to a RIC resource type","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ric/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ric_config/","text":"onos ric config Manage the CLI configuration Synopsis Manage the CLI configuration Options -h, --help help for config Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ric - ONOS ric subsystem commands onos ric config delete - Delete CLI option value onos ric config get - Get CLI option value onos ric config init - Initialize the ransim CLI configuration onos ric config set - Set CLI option value Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ric config"},{"location":"onos-cli/docs/cli/onos_ric_config/#onos-ric-config","text":"Manage the CLI configuration","title":"onos ric config"},{"location":"onos-cli/docs/cli/onos_ric_config/#synopsis","text":"Manage the CLI configuration","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ric_config/#options","text":"-h, --help help for config","title":"Options"},{"location":"onos-cli/docs/cli/onos_ric_config/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ric_config/#see-also","text":"onos ric - ONOS ric subsystem commands onos ric config delete - Delete CLI option value onos ric config get - Get CLI option value onos ric config init - Initialize the ransim CLI configuration onos ric config set - Set CLI option value","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ric_config/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ric_config_delete/","text":"onos ric config delete Delete CLI option value Synopsis Delete CLI option value onos ric config delete < key > [ flags ] Options -h, --help help for delete Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ric config - Manage the CLI configuration Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ric config delete"},{"location":"onos-cli/docs/cli/onos_ric_config_delete/#onos-ric-config-delete","text":"Delete CLI option value","title":"onos ric config delete"},{"location":"onos-cli/docs/cli/onos_ric_config_delete/#synopsis","text":"Delete CLI option value onos ric config delete < key > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ric_config_delete/#options","text":"-h, --help help for delete","title":"Options"},{"location":"onos-cli/docs/cli/onos_ric_config_delete/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ric_config_delete/#see-also","text":"onos ric config - Manage the CLI configuration","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ric_config_delete/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ric_config_get/","text":"onos ric config get Get CLI option value Synopsis Get CLI option value onos ric config get < key > [ flags ] Options -h, --help help for get Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ric config - Manage the CLI configuration Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ric config get"},{"location":"onos-cli/docs/cli/onos_ric_config_get/#onos-ric-config-get","text":"Get CLI option value","title":"onos ric config get"},{"location":"onos-cli/docs/cli/onos_ric_config_get/#synopsis","text":"Get CLI option value onos ric config get < key > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ric_config_get/#options","text":"-h, --help help for get","title":"Options"},{"location":"onos-cli/docs/cli/onos_ric_config_get/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ric_config_get/#see-also","text":"onos ric config - Manage the CLI configuration","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ric_config_get/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ric_config_init/","text":"onos ric config init Initialize the ransim CLI configuration Synopsis Initialize the ransim CLI configuration onos ric config init [ flags ] Options -h, --help help for init Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ric config - Manage the CLI configuration Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ric config init"},{"location":"onos-cli/docs/cli/onos_ric_config_init/#onos-ric-config-init","text":"Initialize the ransim CLI configuration","title":"onos ric config init"},{"location":"onos-cli/docs/cli/onos_ric_config_init/#synopsis","text":"Initialize the ransim CLI configuration onos ric config init [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ric_config_init/#options","text":"-h, --help help for init","title":"Options"},{"location":"onos-cli/docs/cli/onos_ric_config_init/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ric_config_init/#see-also","text":"onos ric config - Manage the CLI configuration","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ric_config_init/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ric_config_set/","text":"onos ric config set Set CLI option value Synopsis Set CLI option value onos ric config set < key > < value > [ flags ] Options -h, --help help for set Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ric config - Manage the CLI configuration Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ric config set"},{"location":"onos-cli/docs/cli/onos_ric_config_set/#onos-ric-config-set","text":"Set CLI option value","title":"onos ric config set"},{"location":"onos-cli/docs/cli/onos_ric_config_set/#synopsis","text":"Set CLI option value onos ric config set < key > < value > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ric_config_set/#options","text":"-h, --help help for set","title":"Options"},{"location":"onos-cli/docs/cli/onos_ric_config_set/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ric_config_set/#see-also","text":"onos ric config - Manage the CLI configuration","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ric_config_set/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ric_get/","text":"onos ric get Get RIC resources Synopsis Get RIC resources Options -h, --help help for get Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ric - ONOS ric subsystem commands onos ric get stationlinks - Get Station Links onos ric get stations - Get Stations onos ric get uelinks - Get UE Links Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ric get"},{"location":"onos-cli/docs/cli/onos_ric_get/#onos-ric-get","text":"Get RIC resources","title":"onos ric get"},{"location":"onos-cli/docs/cli/onos_ric_get/#synopsis","text":"Get RIC resources","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ric_get/#options","text":"-h, --help help for get","title":"Options"},{"location":"onos-cli/docs/cli/onos_ric_get/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ric_get/#see-also","text":"onos ric - ONOS ric subsystem commands onos ric get stationlinks - Get Station Links onos ric get stations - Get Stations onos ric get uelinks - Get UE Links","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ric_get/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ric_get_stationlinks/","text":"onos ric get stationlinks Get Station Links Synopsis Get Station Links onos ric get stationlinks [ flags ] Options --ecgi string optional station identifier -h, --help help for stationlinks --no-headers disables output headers Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ric get - Get RIC resources Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ric get stationlinks"},{"location":"onos-cli/docs/cli/onos_ric_get_stationlinks/#onos-ric-get-stationlinks","text":"Get Station Links","title":"onos ric get stationlinks"},{"location":"onos-cli/docs/cli/onos_ric_get_stationlinks/#synopsis","text":"Get Station Links onos ric get stationlinks [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ric_get_stationlinks/#options","text":"--ecgi string optional station identifier -h, --help help for stationlinks --no-headers disables output headers","title":"Options"},{"location":"onos-cli/docs/cli/onos_ric_get_stationlinks/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ric_get_stationlinks/#see-also","text":"onos ric get - Get RIC resources","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ric_get_stationlinks/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ric_get_stations/","text":"onos ric get stations Get Stations Synopsis Get Stations onos ric get stations [ flags ] Options --ecgi string optional station identifier -h, --help help for stations --no-headers disables output headers Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ric get - Get RIC resources Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ric get stations"},{"location":"onos-cli/docs/cli/onos_ric_get_stations/#onos-ric-get-stations","text":"Get Stations","title":"onos ric get stations"},{"location":"onos-cli/docs/cli/onos_ric_get_stations/#synopsis","text":"Get Stations onos ric get stations [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ric_get_stations/#options","text":"--ecgi string optional station identifier -h, --help help for stations --no-headers disables output headers","title":"Options"},{"location":"onos-cli/docs/cli/onos_ric_get_stations/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ric_get_stations/#see-also","text":"onos ric get - Get RIC resources","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ric_get_stations/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ric_get_uelinks/","text":"onos ric get uelinks Get UE Links Synopsis Get UE Links onos ric get uelinks [ flags ] Options --crnti string optional UE identifier in the local station context --ecgi string optional station identifier -h, --help help for uelinks --no-headers disables output headers --sortimsi Sort by UE Imsi instead of Cell Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ric get - Get RIC resources Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ric get uelinks"},{"location":"onos-cli/docs/cli/onos_ric_get_uelinks/#onos-ric-get-uelinks","text":"Get UE Links","title":"onos ric get uelinks"},{"location":"onos-cli/docs/cli/onos_ric_get_uelinks/#synopsis","text":"Get UE Links onos ric get uelinks [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ric_get_uelinks/#options","text":"--crnti string optional UE identifier in the local station context --ecgi string optional station identifier -h, --help help for uelinks --no-headers disables output headers --sortimsi Sort by UE Imsi instead of Cell","title":"Options"},{"location":"onos-cli/docs/cli/onos_ric_get_uelinks/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ric_get_uelinks/#see-also","text":"onos ric get - Get RIC resources","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ric_get_uelinks/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ric_handover/","text":"onos ric handover Trigger UE handover between two base stations Synopsis Trigger UE handover between two base stations onos ric handover < crnti > < src - ecgi > < dst - ecgi > [ flags ] Options -h, --help help for handover Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ric - ONOS ric subsystem commands Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ric handover"},{"location":"onos-cli/docs/cli/onos_ric_handover/#onos-ric-handover","text":"Trigger UE handover between two base stations","title":"onos ric handover"},{"location":"onos-cli/docs/cli/onos_ric_handover/#synopsis","text":"Trigger UE handover between two base stations onos ric handover < crnti > < src - ecgi > < dst - ecgi > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ric_handover/#options","text":"-h, --help help for handover","title":"Options"},{"location":"onos-cli/docs/cli/onos_ric_handover/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ric_handover/#see-also","text":"onos ric - ONOS ric subsystem commands","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ric_handover/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ric_log/","text":"onos ric log logging api commands Synopsis logging api commands Options -h, --help help for log Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ric - ONOS ric subsystem commands onos ric log set - Sets a logger level or enable debug mode for logging package Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ric log"},{"location":"onos-cli/docs/cli/onos_ric_log/#onos-ric-log","text":"logging api commands","title":"onos ric log"},{"location":"onos-cli/docs/cli/onos_ric_log/#synopsis","text":"logging api commands","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ric_log/#options","text":"-h, --help help for log","title":"Options"},{"location":"onos-cli/docs/cli/onos_ric_log/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ric_log/#see-also","text":"onos ric - ONOS ric subsystem commands onos ric log set - Sets a logger level or enable debug mode for logging package","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ric_log/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ric_log_set/","text":"onos ric log set Sets a logger level or enable debug mode for logging package Synopsis Sets a logger level or enable debug mode for logging package Options -h, --help help for set Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ric log - logging api commands onos ric log set debug - enable/disable debug mode for logging package onos ric log set level - Sets a level to a logger Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ric log set"},{"location":"onos-cli/docs/cli/onos_ric_log_set/#onos-ric-log-set","text":"Sets a logger level or enable debug mode for logging package","title":"onos ric log set"},{"location":"onos-cli/docs/cli/onos_ric_log_set/#synopsis","text":"Sets a logger level or enable debug mode for logging package","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ric_log_set/#options","text":"-h, --help help for set","title":"Options"},{"location":"onos-cli/docs/cli/onos_ric_log_set/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ric_log_set/#see-also","text":"onos ric log - logging api commands onos ric log set debug - enable/disable debug mode for logging package onos ric log set level - Sets a level to a logger","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ric_log_set/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ric_log_set_debug/","text":"onos ric log set debug enable/disable debug mode for logging package Synopsis enable/disable debug mode for logging package onos ric log set debug [ args ] [ flags ] Options -h, --help help for debug Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ric log set - Sets a logger level or enable debug mode for logging package Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ric log set debug"},{"location":"onos-cli/docs/cli/onos_ric_log_set_debug/#onos-ric-log-set-debug","text":"enable/disable debug mode for logging package","title":"onos ric log set debug"},{"location":"onos-cli/docs/cli/onos_ric_log_set_debug/#synopsis","text":"enable/disable debug mode for logging package onos ric log set debug [ args ] [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ric_log_set_debug/#options","text":"-h, --help help for debug","title":"Options"},{"location":"onos-cli/docs/cli/onos_ric_log_set_debug/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ric_log_set_debug/#see-also","text":"onos ric log set - Sets a logger level or enable debug mode for logging package","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ric_log_set_debug/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ric_log_set_level/","text":"onos ric log set level Sets a level to a logger Synopsis Sets a level to a logger onos ric log set level [ args ] [ flags ] Options -h, --help help for level -l, --level string the logger level (default \"INFO\") Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ric log set - Sets a logger level or enable debug mode for logging package Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ric log set level"},{"location":"onos-cli/docs/cli/onos_ric_log_set_level/#onos-ric-log-set-level","text":"Sets a level to a logger","title":"onos ric log set level"},{"location":"onos-cli/docs/cli/onos_ric_log_set_level/#synopsis","text":"Sets a level to a logger onos ric log set level [ args ] [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ric_log_set_level/#options","text":"-h, --help help for level -l, --level string the logger level (default \"INFO\")","title":"Options"},{"location":"onos-cli/docs/cli/onos_ric_log_set_level/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ric_log_set_level/#see-also","text":"onos ric log set - Sets a logger level or enable debug mode for logging package","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ric_log_set_level/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ric_set/","text":"onos ric set Set RIC resource parameters Synopsis Set RIC resource parameters Options -h, --help help for set Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ric - ONOS ric subsystem commands onos ric set power - Set transmit power of a base station Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ric set"},{"location":"onos-cli/docs/cli/onos_ric_set/#onos-ric-set","text":"Set RIC resource parameters","title":"onos ric set"},{"location":"onos-cli/docs/cli/onos_ric_set/#synopsis","text":"Set RIC resource parameters","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ric_set/#options","text":"-h, --help help for set","title":"Options"},{"location":"onos-cli/docs/cli/onos_ric_set/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ric_set/#see-also","text":"onos ric - ONOS ric subsystem commands onos ric set power - Set transmit power of a base station","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ric_set/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ric_set_power/","text":"onos ric set power Set transmit power of a base station Synopsis Set transmit power of a base station onos ric set power < ecgi > < power - offset > [ flags ] Options -h, --help help for power Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ric set - Set RIC resource parameters Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ric set power"},{"location":"onos-cli/docs/cli/onos_ric_set_power/#onos-ric-set-power","text":"Set transmit power of a base station","title":"onos ric set power"},{"location":"onos-cli/docs/cli/onos_ric_set_power/#synopsis","text":"Set transmit power of a base station onos ric set power < ecgi > < power - offset > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ric_set_power/#options","text":"-h, --help help for power","title":"Options"},{"location":"onos-cli/docs/cli/onos_ric_set_power/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ric_set_power/#see-also","text":"onos ric set - Set RIC resource parameters","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ric_set_power/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ric_watch/","text":"onos ric watch Watch for changes to a RIC resource type Synopsis Watch for changes to a RIC resource type Options -h, --help help for watch Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ric - ONOS ric subsystem commands onos ric watch stationlinks - Watch Station Links onos ric watch stations - Watch Stations onos ric watch uelinks - Watch UE Links Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ric watch"},{"location":"onos-cli/docs/cli/onos_ric_watch/#onos-ric-watch","text":"Watch for changes to a RIC resource type","title":"onos ric watch"},{"location":"onos-cli/docs/cli/onos_ric_watch/#synopsis","text":"Watch for changes to a RIC resource type","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ric_watch/#options","text":"-h, --help help for watch","title":"Options"},{"location":"onos-cli/docs/cli/onos_ric_watch/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ric_watch/#see-also","text":"onos ric - ONOS ric subsystem commands onos ric watch stationlinks - Watch Station Links onos ric watch stations - Watch Stations onos ric watch uelinks - Watch UE Links","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ric_watch/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ric_watch_stationlinks/","text":"onos ric watch stationlinks Watch Station Links Synopsis Watch Station Links onos ric watch stationlinks [ flags ] Options -h, --help help for stationlinks --no-headers disables output headers Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ric watch - Watch for changes to a RIC resource type Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ric watch stationlinks"},{"location":"onos-cli/docs/cli/onos_ric_watch_stationlinks/#onos-ric-watch-stationlinks","text":"Watch Station Links","title":"onos ric watch stationlinks"},{"location":"onos-cli/docs/cli/onos_ric_watch_stationlinks/#synopsis","text":"Watch Station Links onos ric watch stationlinks [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ric_watch_stationlinks/#options","text":"-h, --help help for stationlinks --no-headers disables output headers","title":"Options"},{"location":"onos-cli/docs/cli/onos_ric_watch_stationlinks/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ric_watch_stationlinks/#see-also","text":"onos ric watch - Watch for changes to a RIC resource type","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ric_watch_stationlinks/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ric_watch_stations/","text":"onos ric watch stations Watch Stations Synopsis Watch Stations onos ric watch stations [ flags ] Options -h, --help help for stations --no-headers disables output headers Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ric watch - Watch for changes to a RIC resource type Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ric watch stations"},{"location":"onos-cli/docs/cli/onos_ric_watch_stations/#onos-ric-watch-stations","text":"Watch Stations","title":"onos ric watch stations"},{"location":"onos-cli/docs/cli/onos_ric_watch_stations/#synopsis","text":"Watch Stations onos ric watch stations [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ric_watch_stations/#options","text":"-h, --help help for stations --no-headers disables output headers","title":"Options"},{"location":"onos-cli/docs/cli/onos_ric_watch_stations/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ric_watch_stations/#see-also","text":"onos ric watch - Watch for changes to a RIC resource type","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ric_watch_stations/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ric_watch_uelinks/","text":"onos ric watch uelinks Watch UE Links Synopsis Watch UE Links onos ric watch uelinks [ flags ] Options --crnti string optional UE identifier in the local station context --ecgi string optional station identifier -h, --help help for uelinks Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ric watch - Watch for changes to a RIC resource type Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ric watch uelinks"},{"location":"onos-cli/docs/cli/onos_ric_watch_uelinks/#onos-ric-watch-uelinks","text":"Watch UE Links","title":"onos ric watch uelinks"},{"location":"onos-cli/docs/cli/onos_ric_watch_uelinks/#synopsis","text":"Watch UE Links onos ric watch uelinks [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ric_watch_uelinks/#options","text":"--crnti string optional UE identifier in the local station context --ecgi string optional station identifier -h, --help help for uelinks","title":"Options"},{"location":"onos-cli/docs/cli/onos_ric_watch_uelinks/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ric:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ric_watch_uelinks/#see-also","text":"onos ric watch - Watch for changes to a RIC resource type","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ric_watch_uelinks/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_topo/","text":"onos topo ONOS topology subsystem commands Synopsis ONOS topology subsystem commands Options -h, --help help for topo --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos - ONOS command line client onos topo add - Add a topology resource onos topo config - Manage the CLI configuration onos topo get - Get topology resources onos topo log - logging api commands onos topo remove - Remove a topology resource onos topo update - Update a topology resource onos topo watch - Watch for changes to a topology resource type Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos topo"},{"location":"onos-cli/docs/cli/onos_topo/#onos-topo","text":"ONOS topology subsystem commands","title":"onos topo"},{"location":"onos-cli/docs/cli/onos_topo/#synopsis","text":"ONOS topology subsystem commands","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_topo/#options","text":"-h, --help help for topo --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options"},{"location":"onos-cli/docs/cli/onos_topo/#see-also","text":"onos - ONOS command line client onos topo add - Add a topology resource onos topo config - Manage the CLI configuration onos topo get - Get topology resources onos topo log - logging api commands onos topo remove - Remove a topology resource onos topo update - Update a topology resource onos topo watch - Watch for changes to a topology resource type","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_topo/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_topo_add/","text":"onos topo add Add a topology resource Synopsis Add a topology resource Options -h, --help help for add Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos topo - ONOS topology subsystem commands onos topo add device - Add a device Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos topo add"},{"location":"onos-cli/docs/cli/onos_topo_add/#onos-topo-add","text":"Add a topology resource","title":"onos topo add"},{"location":"onos-cli/docs/cli/onos_topo_add/#synopsis","text":"Add a topology resource","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_topo_add/#options","text":"-h, --help help for add","title":"Options"},{"location":"onos-cli/docs/cli/onos_topo_add/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_topo_add/#see-also","text":"onos topo - ONOS topology subsystem commands onos topo add device - Add a device","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_topo_add/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_topo_add_device/","text":"onos topo add device Add a device Synopsis Add a device onos topo add device < id > [ args ] [ flags ] Options -a, --address string the address of the device --attributes stringToString an arbitrary mapping of device attributes (default []) --ca-cert string the TLS CA certificate --cert string the TLS certificate -h, --help help for device --insecure whether to enable skip verification --key string the TLS key -p, --password string the device password --plain whether to connect over a plaintext connection -r, --role string the device role -g, --target string the device target name --timeout duration the device connection timeout (default 5s) -t, --type string the type of the device -u, --user string the device username -v, --version string the device software version Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos topo add - Add a topology resource Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos topo add device"},{"location":"onos-cli/docs/cli/onos_topo_add_device/#onos-topo-add-device","text":"Add a device","title":"onos topo add device"},{"location":"onos-cli/docs/cli/onos_topo_add_device/#synopsis","text":"Add a device onos topo add device < id > [ args ] [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_topo_add_device/#options","text":"-a, --address string the address of the device --attributes stringToString an arbitrary mapping of device attributes (default []) --ca-cert string the TLS CA certificate --cert string the TLS certificate -h, --help help for device --insecure whether to enable skip verification --key string the TLS key -p, --password string the device password --plain whether to connect over a plaintext connection -r, --role string the device role -g, --target string the device target name --timeout duration the device connection timeout (default 5s) -t, --type string the type of the device -u, --user string the device username -v, --version string the device software version","title":"Options"},{"location":"onos-cli/docs/cli/onos_topo_add_device/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_topo_add_device/#see-also","text":"onos topo add - Add a topology resource","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_topo_add_device/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_topo_config/","text":"onos topo config Manage the CLI configuration Synopsis Manage the CLI configuration Options -h, --help help for config Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos topo - ONOS topology subsystem commands onos topo config delete - Delete CLI option value onos topo config get - Get CLI option value onos topo config init - Initialize the ransim CLI configuration onos topo config set - Set CLI option value Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos topo config"},{"location":"onos-cli/docs/cli/onos_topo_config/#onos-topo-config","text":"Manage the CLI configuration","title":"onos topo config"},{"location":"onos-cli/docs/cli/onos_topo_config/#synopsis","text":"Manage the CLI configuration","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_topo_config/#options","text":"-h, --help help for config","title":"Options"},{"location":"onos-cli/docs/cli/onos_topo_config/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_topo_config/#see-also","text":"onos topo - ONOS topology subsystem commands onos topo config delete - Delete CLI option value onos topo config get - Get CLI option value onos topo config init - Initialize the ransim CLI configuration onos topo config set - Set CLI option value","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_topo_config/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_topo_config_delete/","text":"onos topo config delete Delete CLI option value Synopsis Delete CLI option value onos topo config delete < key > [ flags ] Options -h, --help help for delete Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos topo config - Manage the CLI configuration Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos topo config delete"},{"location":"onos-cli/docs/cli/onos_topo_config_delete/#onos-topo-config-delete","text":"Delete CLI option value","title":"onos topo config delete"},{"location":"onos-cli/docs/cli/onos_topo_config_delete/#synopsis","text":"Delete CLI option value onos topo config delete < key > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_topo_config_delete/#options","text":"-h, --help help for delete","title":"Options"},{"location":"onos-cli/docs/cli/onos_topo_config_delete/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_topo_config_delete/#see-also","text":"onos topo config - Manage the CLI configuration","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_topo_config_delete/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_topo_config_get/","text":"onos topo config get Get CLI option value Synopsis Get CLI option value onos topo config get < key > [ flags ] Options -h, --help help for get Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos topo config - Manage the CLI configuration Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos topo config get"},{"location":"onos-cli/docs/cli/onos_topo_config_get/#onos-topo-config-get","text":"Get CLI option value","title":"onos topo config get"},{"location":"onos-cli/docs/cli/onos_topo_config_get/#synopsis","text":"Get CLI option value onos topo config get < key > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_topo_config_get/#options","text":"-h, --help help for get","title":"Options"},{"location":"onos-cli/docs/cli/onos_topo_config_get/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_topo_config_get/#see-also","text":"onos topo config - Manage the CLI configuration","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_topo_config_get/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_topo_config_init/","text":"onos topo config init Initialize the ransim CLI configuration Synopsis Initialize the ransim CLI configuration onos topo config init [ flags ] Options -h, --help help for init Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos topo config - Manage the CLI configuration Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos topo config init"},{"location":"onos-cli/docs/cli/onos_topo_config_init/#onos-topo-config-init","text":"Initialize the ransim CLI configuration","title":"onos topo config init"},{"location":"onos-cli/docs/cli/onos_topo_config_init/#synopsis","text":"Initialize the ransim CLI configuration onos topo config init [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_topo_config_init/#options","text":"-h, --help help for init","title":"Options"},{"location":"onos-cli/docs/cli/onos_topo_config_init/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_topo_config_init/#see-also","text":"onos topo config - Manage the CLI configuration","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_topo_config_init/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_topo_config_set/","text":"onos topo config set Set CLI option value Synopsis Set CLI option value onos topo config set < key > < value > [ flags ] Options -h, --help help for set Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos topo config - Manage the CLI configuration Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos topo config set"},{"location":"onos-cli/docs/cli/onos_topo_config_set/#onos-topo-config-set","text":"Set CLI option value","title":"onos topo config set"},{"location":"onos-cli/docs/cli/onos_topo_config_set/#synopsis","text":"Set CLI option value onos topo config set < key > < value > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_topo_config_set/#options","text":"-h, --help help for set","title":"Options"},{"location":"onos-cli/docs/cli/onos_topo_config_set/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_topo_config_set/#see-also","text":"onos topo config - Manage the CLI configuration","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_topo_config_set/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_topo_get/","text":"onos topo get Get topology resources Synopsis Get topology resources Options -h, --help help for get Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos topo - ONOS topology subsystem commands onos topo get device - Get a device Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos topo get"},{"location":"onos-cli/docs/cli/onos_topo_get/#onos-topo-get","text":"Get topology resources","title":"onos topo get"},{"location":"onos-cli/docs/cli/onos_topo_get/#synopsis","text":"Get topology resources","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_topo_get/#options","text":"-h, --help help for get","title":"Options"},{"location":"onos-cli/docs/cli/onos_topo_get/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_topo_get/#see-also","text":"onos topo - ONOS topology subsystem commands onos topo get device - Get a device","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_topo_get/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_topo_get_device/","text":"onos topo get device Get a device Synopsis Get a device onos topo get device < id > [ flags ] Options -h, --help help for device --no-headers disables output headers -v, --verbose whether to print the device with verbose output Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos topo get - Get topology resources Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos topo get device"},{"location":"onos-cli/docs/cli/onos_topo_get_device/#onos-topo-get-device","text":"Get a device","title":"onos topo get device"},{"location":"onos-cli/docs/cli/onos_topo_get_device/#synopsis","text":"Get a device onos topo get device < id > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_topo_get_device/#options","text":"-h, --help help for device --no-headers disables output headers -v, --verbose whether to print the device with verbose output","title":"Options"},{"location":"onos-cli/docs/cli/onos_topo_get_device/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_topo_get_device/#see-also","text":"onos topo get - Get topology resources","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_topo_get_device/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_topo_log/","text":"onos topo log logging api commands Synopsis logging api commands Options -h, --help help for log Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos topo - ONOS topology subsystem commands onos topo log set - Sets a logger level or enable debug mode for logging package Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos topo log"},{"location":"onos-cli/docs/cli/onos_topo_log/#onos-topo-log","text":"logging api commands","title":"onos topo log"},{"location":"onos-cli/docs/cli/onos_topo_log/#synopsis","text":"logging api commands","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_topo_log/#options","text":"-h, --help help for log","title":"Options"},{"location":"onos-cli/docs/cli/onos_topo_log/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_topo_log/#see-also","text":"onos topo - ONOS topology subsystem commands onos topo log set - Sets a logger level or enable debug mode for logging package","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_topo_log/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_topo_log_set/","text":"onos topo log set Sets a logger level or enable debug mode for logging package Synopsis Sets a logger level or enable debug mode for logging package Options -h, --help help for set Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos topo log - logging api commands onos topo log set debug - enable/disable debug mode for logging package onos topo log set level - Sets a level to a logger Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos topo log set"},{"location":"onos-cli/docs/cli/onos_topo_log_set/#onos-topo-log-set","text":"Sets a logger level or enable debug mode for logging package","title":"onos topo log set"},{"location":"onos-cli/docs/cli/onos_topo_log_set/#synopsis","text":"Sets a logger level or enable debug mode for logging package","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_topo_log_set/#options","text":"-h, --help help for set","title":"Options"},{"location":"onos-cli/docs/cli/onos_topo_log_set/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_topo_log_set/#see-also","text":"onos topo log - logging api commands onos topo log set debug - enable/disable debug mode for logging package onos topo log set level - Sets a level to a logger","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_topo_log_set/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_topo_log_set_debug/","text":"onos topo log set debug enable/disable debug mode for logging package Synopsis enable/disable debug mode for logging package onos topo log set debug [ args ] [ flags ] Options -h, --help help for debug Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos topo log set - Sets a logger level or enable debug mode for logging package Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos topo log set debug"},{"location":"onos-cli/docs/cli/onos_topo_log_set_debug/#onos-topo-log-set-debug","text":"enable/disable debug mode for logging package","title":"onos topo log set debug"},{"location":"onos-cli/docs/cli/onos_topo_log_set_debug/#synopsis","text":"enable/disable debug mode for logging package onos topo log set debug [ args ] [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_topo_log_set_debug/#options","text":"-h, --help help for debug","title":"Options"},{"location":"onos-cli/docs/cli/onos_topo_log_set_debug/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_topo_log_set_debug/#see-also","text":"onos topo log set - Sets a logger level or enable debug mode for logging package","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_topo_log_set_debug/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_topo_log_set_level/","text":"onos topo log set level Sets a level to a logger Synopsis Sets a level to a logger onos topo log set level [ args ] [ flags ] Options -h, --help help for level -l, --level string the logger level (default \"INFO\") Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos topo log set - Sets a logger level or enable debug mode for logging package Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos topo log set level"},{"location":"onos-cli/docs/cli/onos_topo_log_set_level/#onos-topo-log-set-level","text":"Sets a level to a logger","title":"onos topo log set level"},{"location":"onos-cli/docs/cli/onos_topo_log_set_level/#synopsis","text":"Sets a level to a logger onos topo log set level [ args ] [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_topo_log_set_level/#options","text":"-h, --help help for level -l, --level string the logger level (default \"INFO\")","title":"Options"},{"location":"onos-cli/docs/cli/onos_topo_log_set_level/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_topo_log_set_level/#see-also","text":"onos topo log set - Sets a logger level or enable debug mode for logging package","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_topo_log_set_level/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_topo_remove/","text":"onos topo remove Remove a topology resource Synopsis Remove a topology resource Options -h, --help help for remove Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos topo - ONOS topology subsystem commands onos topo remove device - Remove a device Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos topo remove"},{"location":"onos-cli/docs/cli/onos_topo_remove/#onos-topo-remove","text":"Remove a topology resource","title":"onos topo remove"},{"location":"onos-cli/docs/cli/onos_topo_remove/#synopsis","text":"Remove a topology resource","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_topo_remove/#options","text":"-h, --help help for remove","title":"Options"},{"location":"onos-cli/docs/cli/onos_topo_remove/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_topo_remove/#see-also","text":"onos topo - ONOS topology subsystem commands onos topo remove device - Remove a device","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_topo_remove/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_topo_remove_device/","text":"onos topo remove device Remove a device Synopsis Remove a device onos topo remove device < id > [ args ] [ flags ] Options -h, --help help for device Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos topo remove - Remove a topology resource Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos topo remove device"},{"location":"onos-cli/docs/cli/onos_topo_remove_device/#onos-topo-remove-device","text":"Remove a device","title":"onos topo remove device"},{"location":"onos-cli/docs/cli/onos_topo_remove_device/#synopsis","text":"Remove a device onos topo remove device < id > [ args ] [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_topo_remove_device/#options","text":"-h, --help help for device","title":"Options"},{"location":"onos-cli/docs/cli/onos_topo_remove_device/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_topo_remove_device/#see-also","text":"onos topo remove - Remove a topology resource","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_topo_remove_device/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_topo_update/","text":"onos topo update Update a topology resource Synopsis Update a topology resource Options -h, --help help for update Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos topo - ONOS topology subsystem commands onos topo update device - Update a device Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos topo update"},{"location":"onos-cli/docs/cli/onos_topo_update/#onos-topo-update","text":"Update a topology resource","title":"onos topo update"},{"location":"onos-cli/docs/cli/onos_topo_update/#synopsis","text":"Update a topology resource","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_topo_update/#options","text":"-h, --help help for update","title":"Options"},{"location":"onos-cli/docs/cli/onos_topo_update/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_topo_update/#see-also","text":"onos topo - ONOS topology subsystem commands onos topo update device - Update a device","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_topo_update/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_topo_update_device/","text":"onos topo update device Update a device Synopsis Update a device onos topo update device < id > [ args ] [ flags ] Options -a, --address string the address of the device --attributes stringToString an arbitrary mapping of device attributes (default []) --ca-cert string the TLS CA certificate --cert string the TLS certificate -h, --help help for device --insecure whether to enable skip verification --key string the TLS key -p, --password string the device password --plain whether to connect over a plaintext connection -r, --role string the device role -g, --target string the device target name --timeout duration the device connection timeout (default 30s) -t, --type string the type of the device -u, --user string the device username -v, --version string the device software version Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos topo update - Update a topology resource Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos topo update device"},{"location":"onos-cli/docs/cli/onos_topo_update_device/#onos-topo-update-device","text":"Update a device","title":"onos topo update device"},{"location":"onos-cli/docs/cli/onos_topo_update_device/#synopsis","text":"Update a device onos topo update device < id > [ args ] [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_topo_update_device/#options","text":"-a, --address string the address of the device --attributes stringToString an arbitrary mapping of device attributes (default []) --ca-cert string the TLS CA certificate --cert string the TLS certificate -h, --help help for device --insecure whether to enable skip verification --key string the TLS key -p, --password string the device password --plain whether to connect over a plaintext connection -r, --role string the device role -g, --target string the device target name --timeout duration the device connection timeout (default 30s) -t, --type string the type of the device -u, --user string the device username -v, --version string the device software version","title":"Options"},{"location":"onos-cli/docs/cli/onos_topo_update_device/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_topo_update_device/#see-also","text":"onos topo update - Update a topology resource","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_topo_update_device/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_topo_watch/","text":"onos topo watch Watch for changes to a topology resource type Synopsis Watch for changes to a topology resource type Options -h, --help help for watch Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos topo - ONOS topology subsystem commands onos topo watch device - Watch for device changes Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos topo watch"},{"location":"onos-cli/docs/cli/onos_topo_watch/#onos-topo-watch","text":"Watch for changes to a topology resource type","title":"onos topo watch"},{"location":"onos-cli/docs/cli/onos_topo_watch/#synopsis","text":"Watch for changes to a topology resource type","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_topo_watch/#options","text":"-h, --help help for watch","title":"Options"},{"location":"onos-cli/docs/cli/onos_topo_watch/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_topo_watch/#see-also","text":"onos topo - ONOS topology subsystem commands onos topo watch device - Watch for device changes","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_topo_watch/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_topo_watch_device/","text":"onos topo watch device Watch for device changes Synopsis Watch for device changes onos topo watch device < id > [ args ] [ flags ] Options -h, --help help for device --no-headers disables output headers -v, --verbose whether to print the device with verbose output Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos topo watch - Watch for changes to a topology resource type Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos topo watch device"},{"location":"onos-cli/docs/cli/onos_topo_watch_device/#onos-topo-watch-device","text":"Watch for device changes","title":"onos topo watch device"},{"location":"onos-cli/docs/cli/onos_topo_watch_device/#synopsis","text":"Watch for device changes onos topo watch device < id > [ args ] [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_topo_watch_device/#options","text":"-h, --help help for device --no-headers disables output headers -v, --verbose whether to print the device with verbose output","title":"Options"},{"location":"onos-cli/docs/cli/onos_topo_watch_device/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-topo:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_topo_watch_device/#see-also","text":"onos topo watch - Watch for changes to a topology resource type","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_topo_watch_device/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ztp/","text":"onos ztp ONOS zero-touch provisioning subsystem commands Synopsis ONOS zero-touch provisioning subsystem commands Options -h, --help help for ztp --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos - ONOS command line client onos ztp add - Add a ZTP resource onos ztp config - Manage the CLI configuration onos ztp get - Get ZTP resources onos ztp log - logging api commands onos ztp remove - Remove a ZTP resource onos ztp update - Update a ZTP resource Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ztp"},{"location":"onos-cli/docs/cli/onos_ztp/#onos-ztp","text":"ONOS zero-touch provisioning subsystem commands","title":"onos ztp"},{"location":"onos-cli/docs/cli/onos_ztp/#synopsis","text":"ONOS zero-touch provisioning subsystem commands","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ztp/#options","text":"-h, --help help for ztp --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options"},{"location":"onos-cli/docs/cli/onos_ztp/#see-also","text":"onos - ONOS command line client onos ztp add - Add a ZTP resource onos ztp config - Manage the CLI configuration onos ztp get - Get ZTP resources onos ztp log - logging api commands onos ztp remove - Remove a ZTP resource onos ztp update - Update a ZTP resource","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ztp/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ztp_add/","text":"onos ztp add Add a ZTP resource Synopsis Add a ZTP resource Options -h, --help help for add Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ztp - ONOS zero-touch provisioning subsystem commands onos ztp add role - Add a device role Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ztp add"},{"location":"onos-cli/docs/cli/onos_ztp_add/#onos-ztp-add","text":"Add a ZTP resource","title":"onos ztp add"},{"location":"onos-cli/docs/cli/onos_ztp_add/#synopsis","text":"Add a ZTP resource","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ztp_add/#options","text":"-h, --help help for add","title":"Options"},{"location":"onos-cli/docs/cli/onos_ztp_add/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ztp_add/#see-also","text":"onos ztp - ONOS zero-touch provisioning subsystem commands onos ztp add role - Add a device role","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ztp_add/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ztp_add_role/","text":"onos ztp add role Add a device role Synopsis Add a device role onos ztp add role < fileName > [ flags ] Options -h, --help help for role --overwrite Overwrite the role if it already exists Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ztp add - Add a ZTP resource Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ztp add role"},{"location":"onos-cli/docs/cli/onos_ztp_add_role/#onos-ztp-add-role","text":"Add a device role","title":"onos ztp add role"},{"location":"onos-cli/docs/cli/onos_ztp_add_role/#synopsis","text":"Add a device role onos ztp add role < fileName > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ztp_add_role/#options","text":"-h, --help help for role --overwrite Overwrite the role if it already exists","title":"Options"},{"location":"onos-cli/docs/cli/onos_ztp_add_role/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ztp_add_role/#see-also","text":"onos ztp add - Add a ZTP resource","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ztp_add_role/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ztp_config/","text":"onos ztp config Manage the CLI configuration Synopsis Manage the CLI configuration Options -h, --help help for config Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ztp - ONOS zero-touch provisioning subsystem commands onos ztp config delete - Delete CLI option value onos ztp config get - Get CLI option value onos ztp config init - Initialize the ransim CLI configuration onos ztp config set - Set CLI option value Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ztp config"},{"location":"onos-cli/docs/cli/onos_ztp_config/#onos-ztp-config","text":"Manage the CLI configuration","title":"onos ztp config"},{"location":"onos-cli/docs/cli/onos_ztp_config/#synopsis","text":"Manage the CLI configuration","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ztp_config/#options","text":"-h, --help help for config","title":"Options"},{"location":"onos-cli/docs/cli/onos_ztp_config/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ztp_config/#see-also","text":"onos ztp - ONOS zero-touch provisioning subsystem commands onos ztp config delete - Delete CLI option value onos ztp config get - Get CLI option value onos ztp config init - Initialize the ransim CLI configuration onos ztp config set - Set CLI option value","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ztp_config/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ztp_config_delete/","text":"onos ztp config delete Delete CLI option value Synopsis Delete CLI option value onos ztp config delete < key > [ flags ] Options -h, --help help for delete Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ztp config - Manage the CLI configuration Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ztp config delete"},{"location":"onos-cli/docs/cli/onos_ztp_config_delete/#onos-ztp-config-delete","text":"Delete CLI option value","title":"onos ztp config delete"},{"location":"onos-cli/docs/cli/onos_ztp_config_delete/#synopsis","text":"Delete CLI option value onos ztp config delete < key > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ztp_config_delete/#options","text":"-h, --help help for delete","title":"Options"},{"location":"onos-cli/docs/cli/onos_ztp_config_delete/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ztp_config_delete/#see-also","text":"onos ztp config - Manage the CLI configuration","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ztp_config_delete/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ztp_config_get/","text":"onos ztp config get Get CLI option value Synopsis Get CLI option value onos ztp config get < key > [ flags ] Options -h, --help help for get Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ztp config - Manage the CLI configuration Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ztp config get"},{"location":"onos-cli/docs/cli/onos_ztp_config_get/#onos-ztp-config-get","text":"Get CLI option value","title":"onos ztp config get"},{"location":"onos-cli/docs/cli/onos_ztp_config_get/#synopsis","text":"Get CLI option value onos ztp config get < key > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ztp_config_get/#options","text":"-h, --help help for get","title":"Options"},{"location":"onos-cli/docs/cli/onos_ztp_config_get/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ztp_config_get/#see-also","text":"onos ztp config - Manage the CLI configuration","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ztp_config_get/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ztp_config_init/","text":"onos ztp config init Initialize the ransim CLI configuration Synopsis Initialize the ransim CLI configuration onos ztp config init [ flags ] Options -h, --help help for init Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ztp config - Manage the CLI configuration Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ztp config init"},{"location":"onos-cli/docs/cli/onos_ztp_config_init/#onos-ztp-config-init","text":"Initialize the ransim CLI configuration","title":"onos ztp config init"},{"location":"onos-cli/docs/cli/onos_ztp_config_init/#synopsis","text":"Initialize the ransim CLI configuration onos ztp config init [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ztp_config_init/#options","text":"-h, --help help for init","title":"Options"},{"location":"onos-cli/docs/cli/onos_ztp_config_init/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ztp_config_init/#see-also","text":"onos ztp config - Manage the CLI configuration","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ztp_config_init/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ztp_config_set/","text":"onos ztp config set Set CLI option value Synopsis Set CLI option value onos ztp config set < key > < value > [ flags ] Options -h, --help help for set Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ztp config - Manage the CLI configuration Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ztp config set"},{"location":"onos-cli/docs/cli/onos_ztp_config_set/#onos-ztp-config-set","text":"Set CLI option value","title":"onos ztp config set"},{"location":"onos-cli/docs/cli/onos_ztp_config_set/#synopsis","text":"Set CLI option value onos ztp config set < key > < value > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ztp_config_set/#options","text":"-h, --help help for set","title":"Options"},{"location":"onos-cli/docs/cli/onos_ztp_config_set/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ztp_config_set/#see-also","text":"onos ztp config - Manage the CLI configuration","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ztp_config_set/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ztp_get/","text":"onos ztp get Get ZTP resources Synopsis Get ZTP resources Options -h, --help help for get Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ztp - ONOS zero-touch provisioning subsystem commands onos ztp get role - Get a device role onos ztp get roles - Get device roles Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ztp get"},{"location":"onos-cli/docs/cli/onos_ztp_get/#onos-ztp-get","text":"Get ZTP resources","title":"onos ztp get"},{"location":"onos-cli/docs/cli/onos_ztp_get/#synopsis","text":"Get ZTP resources","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ztp_get/#options","text":"-h, --help help for get","title":"Options"},{"location":"onos-cli/docs/cli/onos_ztp_get/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ztp_get/#see-also","text":"onos ztp - ONOS zero-touch provisioning subsystem commands onos ztp get role - Get a device role onos ztp get roles - Get device roles","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ztp_get/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ztp_get_role/","text":"onos ztp get role Get a device role Synopsis Get a device role onos ztp get role < roleName > [ flags ] Options -h, --help help for role Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ztp get - Get ZTP resources Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ztp get role"},{"location":"onos-cli/docs/cli/onos_ztp_get_role/#onos-ztp-get-role","text":"Get a device role","title":"onos ztp get role"},{"location":"onos-cli/docs/cli/onos_ztp_get_role/#synopsis","text":"Get a device role onos ztp get role < roleName > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ztp_get_role/#options","text":"-h, --help help for role","title":"Options"},{"location":"onos-cli/docs/cli/onos_ztp_get_role/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ztp_get_role/#see-also","text":"onos ztp get - Get ZTP resources","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ztp_get_role/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ztp_get_roles/","text":"onos ztp get roles Get device roles Synopsis Get device roles onos ztp get roles [ flags ] Options -h, --help help for roles Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ztp get - Get ZTP resources Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ztp get roles"},{"location":"onos-cli/docs/cli/onos_ztp_get_roles/#onos-ztp-get-roles","text":"Get device roles","title":"onos ztp get roles"},{"location":"onos-cli/docs/cli/onos_ztp_get_roles/#synopsis","text":"Get device roles onos ztp get roles [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ztp_get_roles/#options","text":"-h, --help help for roles","title":"Options"},{"location":"onos-cli/docs/cli/onos_ztp_get_roles/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ztp_get_roles/#see-also","text":"onos ztp get - Get ZTP resources","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ztp_get_roles/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ztp_log/","text":"onos ztp log logging api commands Synopsis logging api commands Options -h, --help help for log Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ztp - ONOS zero-touch provisioning subsystem commands onos ztp log set - Sets a logger level or enable debug mode for logging package Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ztp log"},{"location":"onos-cli/docs/cli/onos_ztp_log/#onos-ztp-log","text":"logging api commands","title":"onos ztp log"},{"location":"onos-cli/docs/cli/onos_ztp_log/#synopsis","text":"logging api commands","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ztp_log/#options","text":"-h, --help help for log","title":"Options"},{"location":"onos-cli/docs/cli/onos_ztp_log/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ztp_log/#see-also","text":"onos ztp - ONOS zero-touch provisioning subsystem commands onos ztp log set - Sets a logger level or enable debug mode for logging package","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ztp_log/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ztp_log_set/","text":"onos ztp log set Sets a logger level or enable debug mode for logging package Synopsis Sets a logger level or enable debug mode for logging package Options -h, --help help for set Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ztp log - logging api commands onos ztp log set debug - enable/disable debug mode for logging package onos ztp log set level - Sets a level to a logger Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ztp log set"},{"location":"onos-cli/docs/cli/onos_ztp_log_set/#onos-ztp-log-set","text":"Sets a logger level or enable debug mode for logging package","title":"onos ztp log set"},{"location":"onos-cli/docs/cli/onos_ztp_log_set/#synopsis","text":"Sets a logger level or enable debug mode for logging package","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ztp_log_set/#options","text":"-h, --help help for set","title":"Options"},{"location":"onos-cli/docs/cli/onos_ztp_log_set/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ztp_log_set/#see-also","text":"onos ztp log - logging api commands onos ztp log set debug - enable/disable debug mode for logging package onos ztp log set level - Sets a level to a logger","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ztp_log_set/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ztp_log_set_debug/","text":"onos ztp log set debug enable/disable debug mode for logging package Synopsis enable/disable debug mode for logging package onos ztp log set debug [ args ] [ flags ] Options -h, --help help for debug Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ztp log set - Sets a logger level or enable debug mode for logging package Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ztp log set debug"},{"location":"onos-cli/docs/cli/onos_ztp_log_set_debug/#onos-ztp-log-set-debug","text":"enable/disable debug mode for logging package","title":"onos ztp log set debug"},{"location":"onos-cli/docs/cli/onos_ztp_log_set_debug/#synopsis","text":"enable/disable debug mode for logging package onos ztp log set debug [ args ] [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ztp_log_set_debug/#options","text":"-h, --help help for debug","title":"Options"},{"location":"onos-cli/docs/cli/onos_ztp_log_set_debug/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ztp_log_set_debug/#see-also","text":"onos ztp log set - Sets a logger level or enable debug mode for logging package","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ztp_log_set_debug/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ztp_log_set_level/","text":"onos ztp log set level Sets a level to a logger Synopsis Sets a level to a logger onos ztp log set level [ args ] [ flags ] Options -h, --help help for level -l, --level string the logger level (default \"INFO\") Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ztp log set - Sets a logger level or enable debug mode for logging package Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ztp log set level"},{"location":"onos-cli/docs/cli/onos_ztp_log_set_level/#onos-ztp-log-set-level","text":"Sets a level to a logger","title":"onos ztp log set level"},{"location":"onos-cli/docs/cli/onos_ztp_log_set_level/#synopsis","text":"Sets a level to a logger onos ztp log set level [ args ] [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ztp_log_set_level/#options","text":"-h, --help help for level -l, --level string the logger level (default \"INFO\")","title":"Options"},{"location":"onos-cli/docs/cli/onos_ztp_log_set_level/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ztp_log_set_level/#see-also","text":"onos ztp log set - Sets a logger level or enable debug mode for logging package","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ztp_log_set_level/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ztp_remove/","text":"onos ztp remove Remove a ZTP resource Synopsis Remove a ZTP resource Options -h, --help help for remove Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ztp - ONOS zero-touch provisioning subsystem commands onos ztp remove role - Remove a device role Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ztp remove"},{"location":"onos-cli/docs/cli/onos_ztp_remove/#onos-ztp-remove","text":"Remove a ZTP resource","title":"onos ztp remove"},{"location":"onos-cli/docs/cli/onos_ztp_remove/#synopsis","text":"Remove a ZTP resource","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ztp_remove/#options","text":"-h, --help help for remove","title":"Options"},{"location":"onos-cli/docs/cli/onos_ztp_remove/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ztp_remove/#see-also","text":"onos ztp - ONOS zero-touch provisioning subsystem commands onos ztp remove role - Remove a device role","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ztp_remove/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ztp_remove_role/","text":"onos ztp remove role Remove a device role Synopsis Remove a device role onos ztp remove role < roleName > [ flags ] Options -h, --help help for role Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ztp remove - Remove a ZTP resource Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ztp remove role"},{"location":"onos-cli/docs/cli/onos_ztp_remove_role/#onos-ztp-remove-role","text":"Remove a device role","title":"onos ztp remove role"},{"location":"onos-cli/docs/cli/onos_ztp_remove_role/#synopsis","text":"Remove a device role onos ztp remove role < roleName > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ztp_remove_role/#options","text":"-h, --help help for role","title":"Options"},{"location":"onos-cli/docs/cli/onos_ztp_remove_role/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ztp_remove_role/#see-also","text":"onos ztp remove - Remove a ZTP resource","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ztp_remove_role/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ztp_update/","text":"onos ztp update Update a ZTP resource Synopsis Update a ZTP resource Options -h, --help help for update Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ztp - ONOS zero-touch provisioning subsystem commands onos ztp update role - Add a device role Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ztp update"},{"location":"onos-cli/docs/cli/onos_ztp_update/#onos-ztp-update","text":"Update a ZTP resource","title":"onos ztp update"},{"location":"onos-cli/docs/cli/onos_ztp_update/#synopsis","text":"Update a ZTP resource","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ztp_update/#options","text":"-h, --help help for update","title":"Options"},{"location":"onos-cli/docs/cli/onos_ztp_update/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ztp_update/#see-also","text":"onos ztp - ONOS zero-touch provisioning subsystem commands onos ztp update role - Add a device role","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ztp_update/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-cli/docs/cli/onos_ztp_update_role/","text":"onos ztp update role Add a device role Synopsis Add a device role onos ztp update role < fileName > [ flags ] Options -h, --help help for role --overwrite Overwrite the role if it already exists Options inherited from parent commands --no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key SEE ALSO onos ztp update - Update a ZTP resource Auto generated by spf13/cobra on 7-Apr-2020","title":"Onos ztp update role"},{"location":"onos-cli/docs/cli/onos_ztp_update_role/#onos-ztp-update-role","text":"Add a device role","title":"onos ztp update role"},{"location":"onos-cli/docs/cli/onos_ztp_update_role/#synopsis","text":"Add a device role onos ztp update role < fileName > [ flags ]","title":"Synopsis"},{"location":"onos-cli/docs/cli/onos_ztp_update_role/#options","text":"-h, --help help for role --overwrite Overwrite the role if it already exists","title":"Options"},{"location":"onos-cli/docs/cli/onos_ztp_update_role/#options-inherited-from-parent-commands","text":"--no-tls if present, do not use TLS --service-address string the gRPC endpoint (default \"onos-ztp:5150\") --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key","title":"Options inherited from parent commands"},{"location":"onos-cli/docs/cli/onos_ztp_update_role/#see-also","text":"onos ztp update - Update a ZTP resource","title":"SEE ALSO"},{"location":"onos-cli/docs/cli/onos_ztp_update_role/#auto-generated-by-spf13cobra-on-7-apr-2020","text":"","title":"Auto generated by spf13/cobra on 7-Apr-2020"},{"location":"onos-config/docs/","text":"ONOS configuration overview Design Objectives gNMI provides transactionality with respect to a single device; all configuration operations specified as part of a single batch are all applied or none of them are. The core capability of the configuration platform should build on this gNMI feature to: Provide ability to apply a batch of operations (via NB gNMI API) targeted at multiple devices to be performed as a transaction; either all changes are applied to all devices or none of the changes are applied to any of the devices. Track configuration change transactions applied to a set of devices over time and allow rollback (via NB admin API) to previous configuration checkpoints demarcated by the transactions. The above features are the principal objectives for the configuration management platform. Second order objectives are as follows: Support high-availability and distributed operation, including rolling upgrades Support networks comprising of ~50 devices, ~5000 ports and rate of ~10K incremental configuration transactions per day Additional Features (to be integrated with the above) The following set of features will be required to support the real-world use-cases, but may not necessarily be part of the code configuration subsystem and instead can be provided as additional layers: Ability to preload initial configuration about devices that have not yet been discovered - or even deployed Dry run capability - validate configuration with respect to model, but also with respect to existing business constraints or policies Import existing device configuration Configuration Intents - ability to translate high-level (possibly network-wide) configuration specifications into lower-level (device-specific) operations Key Tenets Principal northbound API for the subsystem will be gNMI and gNOI. These interfaces are already accepted standards and are well-defined, low-profile interfaces with support for transaction semantics. YANG models that will be exposed as part of the NB API are yet to be determined (or defined). Enhanced northbound API will be a gRPC service providing access to administrative functionality. Applications can navigate the change-log and roll-back various changes as they were previously submitted via gNMI Southbound API for the subsystem will be gNMI and gNOI. This will allow direct use with Stratum-compliant switches without requiring an adaptation layer. Adapters can be created for devices that do not directly support gNMI/gNOI interfaces. Such adapters can be deployed either as proxy agents or potentially can be hosted on the devices themselves. Diagnostic gRPC service will allow for inspection of internal state using various remote tools. This interface is not subject to backward compatibility constraints. The subsystem will be designed as a separate entity to allow its use with the existing ONOS 2.0 architecture and to fit with the NG ONOS architecture. High-Level Design Additional Documentation How to contribute to onos-config project How to build onos-config server, related commands and Docker image How to run onos-config server and related commands How to deploy onos-config in a Kubernetes cluster How to test onos-config integration tests with onit How to onboard your device extending onos-config with Model Plugins Developer workflow summary for onos-config project Contacts and Meetings for onos-config project Additional Resources \u00b5ONOS talks at ONF Connect 2019 \u00b5ONOS Project Wide Videos Device Configuration in \u00b5ONOS","title":"An Introduction to Configuration Susbsytem"},{"location":"onos-config/docs/#onos-configuration-overview","text":"","title":"ONOS configuration overview"},{"location":"onos-config/docs/#design-objectives","text":"gNMI provides transactionality with respect to a single device; all configuration operations specified as part of a single batch are all applied or none of them are. The core capability of the configuration platform should build on this gNMI feature to: Provide ability to apply a batch of operations (via NB gNMI API) targeted at multiple devices to be performed as a transaction; either all changes are applied to all devices or none of the changes are applied to any of the devices. Track configuration change transactions applied to a set of devices over time and allow rollback (via NB admin API) to previous configuration checkpoints demarcated by the transactions. The above features are the principal objectives for the configuration management platform. Second order objectives are as follows: Support high-availability and distributed operation, including rolling upgrades Support networks comprising of ~50 devices, ~5000 ports and rate of ~10K incremental configuration transactions per day","title":"Design Objectives"},{"location":"onos-config/docs/#additional-features-to-be-integrated-with-the-above","text":"The following set of features will be required to support the real-world use-cases, but may not necessarily be part of the code configuration subsystem and instead can be provided as additional layers: Ability to preload initial configuration about devices that have not yet been discovered - or even deployed Dry run capability - validate configuration with respect to model, but also with respect to existing business constraints or policies Import existing device configuration Configuration Intents - ability to translate high-level (possibly network-wide) configuration specifications into lower-level (device-specific) operations","title":"Additional Features (to be integrated with the above)"},{"location":"onos-config/docs/#key-tenets","text":"Principal northbound API for the subsystem will be gNMI and gNOI. These interfaces are already accepted standards and are well-defined, low-profile interfaces with support for transaction semantics. YANG models that will be exposed as part of the NB API are yet to be determined (or defined). Enhanced northbound API will be a gRPC service providing access to administrative functionality. Applications can navigate the change-log and roll-back various changes as they were previously submitted via gNMI Southbound API for the subsystem will be gNMI and gNOI. This will allow direct use with Stratum-compliant switches without requiring an adaptation layer. Adapters can be created for devices that do not directly support gNMI/gNOI interfaces. Such adapters can be deployed either as proxy agents or potentially can be hosted on the devices themselves. Diagnostic gRPC service will allow for inspection of internal state using various remote tools. This interface is not subject to backward compatibility constraints. The subsystem will be designed as a separate entity to allow its use with the existing ONOS 2.0 architecture and to fit with the NG ONOS architecture.","title":"Key Tenets"},{"location":"onos-config/docs/#high-level-design","text":"","title":"High-Level Design"},{"location":"onos-config/docs/#additional-documentation","text":"How to contribute to onos-config project How to build onos-config server, related commands and Docker image How to run onos-config server and related commands How to deploy onos-config in a Kubernetes cluster How to test onos-config integration tests with onit How to onboard your device extending onos-config with Model Plugins Developer workflow summary for onos-config project Contacts and Meetings for onos-config project","title":"Additional Documentation"},{"location":"onos-config/docs/#additional-resources","text":"","title":"Additional Resources"},{"location":"onos-config/docs/#onos-talks-at-onf-connect-2019","text":"\u00b5ONOS Project Wide Videos Device Configuration in \u00b5ONOS","title":"\u00b5ONOS talks at ONF Connect 2019"},{"location":"onos-config/docs/build/","text":"Building onos-config In order the build the project, developers are expected to install the required development tools . Currently, the project build and validation is driven by a top-level Makefile , which supports the following usage: > make help build build the Go binaries and run all validations ( default ) clean remove all the build artifacts coverage generate unit test coverage data deps ensure that the required dependencies are in place gofmt run the Go format validation images build all Docker images kind build Docker images and add them to the currently configured kind cluster license_check examine and ensure license headers exist linters examines Go source code and reports coding problems onos-config-base-docker build onos-config base Docker image protos compile the protobuf files ( using protoc-go Docker ) test run the unit tests and source code validation Building Go binaries To build the project, simply type make . This will check for required dependencies, compile the Go binaries and then perform all required validation steps, which includes unit tests, Go code formating, Go lint, Go vetting and license header compliance check. In future, there may be other tests. | Note that since the build relies on Go modules, you must export GO111MODULE=on . Building Docker images To allow deployment of onos-config in a Kubernetes cluster, the Makefile allows creation of two separate Docker images. The main Docker image is onosproject/onos-config , which is the main program that acts as a server that provides various gRPC interfaces to application. This include gNMI and the AdminService and DiagnosticService . The second Docker image is onosproject/onos-cli , which provides a command-line shell that can be deployed as an ephemeral container inside the Kubernetes cluster and which provides access to the onos CLI commands for remotely interacting with the services provided by onosproject/onos-config . You can build both images by running make images . Compiling protobufs To compile Google Protocol Buffer files ( *.proto ) and to generate Go source files from them, simply run make protos . Provided you changed the source *.proto files, this will modify the corresponding *.pb.go source files. Although these files are auto-generated, developers are expected to check them in, anytime they change as a result of changing the *.proto files. The protoc compiler is run using onosproject/proto-go Docker image, which has been published to remove the need for developers to install their own protoc compiler and its Go plugin. The Makefile makes this transparent. Bulding Documentation Documentation is published at https://godoc.org/github.com/onosproject/onos-config If you wish to see a version of it locally run: godoc -goroot = $HOME /go and then browse at http://localhost:6060/pkg/github.com/onosproject/onos-config/","title":"How To Build Configuration Subsystem?"},{"location":"onos-config/docs/build/#building-onos-config","text":"In order the build the project, developers are expected to install the required development tools . Currently, the project build and validation is driven by a top-level Makefile , which supports the following usage: > make help build build the Go binaries and run all validations ( default ) clean remove all the build artifacts coverage generate unit test coverage data deps ensure that the required dependencies are in place gofmt run the Go format validation images build all Docker images kind build Docker images and add them to the currently configured kind cluster license_check examine and ensure license headers exist linters examines Go source code and reports coding problems onos-config-base-docker build onos-config base Docker image protos compile the protobuf files ( using protoc-go Docker ) test run the unit tests and source code validation","title":"Building onos-config"},{"location":"onos-config/docs/build/#building-go-binaries","text":"To build the project, simply type make . This will check for required dependencies, compile the Go binaries and then perform all required validation steps, which includes unit tests, Go code formating, Go lint, Go vetting and license header compliance check. In future, there may be other tests. | Note that since the build relies on Go modules, you must export GO111MODULE=on .","title":"Building Go binaries"},{"location":"onos-config/docs/build/#building-docker-images","text":"To allow deployment of onos-config in a Kubernetes cluster, the Makefile allows creation of two separate Docker images. The main Docker image is onosproject/onos-config , which is the main program that acts as a server that provides various gRPC interfaces to application. This include gNMI and the AdminService and DiagnosticService . The second Docker image is onosproject/onos-cli , which provides a command-line shell that can be deployed as an ephemeral container inside the Kubernetes cluster and which provides access to the onos CLI commands for remotely interacting with the services provided by onosproject/onos-config . You can build both images by running make images .","title":"Building Docker images"},{"location":"onos-config/docs/build/#compiling-protobufs","text":"To compile Google Protocol Buffer files ( *.proto ) and to generate Go source files from them, simply run make protos . Provided you changed the source *.proto files, this will modify the corresponding *.pb.go source files. Although these files are auto-generated, developers are expected to check them in, anytime they change as a result of changing the *.proto files. The protoc compiler is run using onosproject/proto-go Docker image, which has been published to remove the need for developers to install their own protoc compiler and its Go plugin. The Makefile makes this transparent.","title":"Compiling protobufs"},{"location":"onos-config/docs/build/#bulding-documentation","text":"Documentation is published at https://godoc.org/github.com/onosproject/onos-config If you wish to see a version of it locally run: godoc -goroot = $HOME /go and then browse at http://localhost:6060/pkg/github.com/onosproject/onos-config/","title":"Bulding Documentation"},{"location":"onos-config/docs/cli/","text":"Administrative and Diagnostic Command-Line The project provides a command-line facilities for remotely interacting with the administrative and diagnostic services of the onos-config server. The commands are available at run-time using the consolidated onos client hosted in the onos-cli repository, but their implementation is hosted and built here. The documentation about building and deploying the consolidate onos client or its Docker container is available in the onos-cli GitHub repository. Usage > onos config --help ONOS configuration subsystem commands Usage: onos config [ command ] Available Commands: add Add a config resource compact-changes Takes a snapshot of network and device changes config Manage the CLI configuration get Get config resources rollback Rolls-back a network change snapshot Commands for managing snapshots watch Watch for updates to a config resource type Flags: -h, --help help for config --no-tls if present, do not use TLS --service-address string the onos-config service address ( default \"onos-config:5150\" ) --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key Use \"onos config [command] --help\" for more information about a command. Global Flags Since the onos command is a client, it requires the address of the server as well as the paths to the key and the certificate to establish secure connection to the server. These options are global to all commands and can be persisted to avoid having to specify them for each command. For example, you can set the default server address as follows: > onos config config set address onos-config-server:5150 Subsequent usages of the onos command can then abstain from using the --address option to indicate the server address, resulting in easier usage. Example Commands Rollback Network Change To rollback a network use the rollback admin tool. This will rollback the last network change unless a specific change is given with the changename parameter > onos config rollback Change-VgUAZI928B644v/2XQ0n24x0SjA = Listing and Loading model plugins A model plugin is a shared object library that represents the YANG models of a particular Device Type and Version. The plugin allows user to create and load their own device models in to onos-config that can be used for validating that configuration changes observe the structure of the YANG models in use on the device. This improves usability by pushing information about the devices' model back up to the onos-config gNMI northbound interface. Model plugins can be loaded at the startup of onos-config by (repeated) --modelPlugin options, or they can be loaded at run time. To see the list of currently loaded plugins use the command: > onos config get plugins To load a plugin dynamically at runtime use the command: > onos config add plugin <full path and filename of a compatible shared object library on target machine> NOTE: Model Plugins cannot be dynamically unloaded - a restart of onos-config is required to unload. In a distributed environment the ModelPlugin will have to be loaded on all instances of onos-config Other Diagnostic Commands There are a number of commands that provide internal view into the state the onos-config store. These tools use a special-purpose gRPC interfaces to obtain the internal meta-data from the running onos-config process. Please note that these tools are intended purely for diagnostics and should not be relied upon for programmatic purposes as they are not subject to any backward compatibility guarantees. List and Watch Changes For example, to list and watch all changes stored internally run: > onos config watch network-changes ... or to watch device-changes > onos config watch device-changes ... Devicetree To get the aggregate configuration of a device in a hierarchical JSON structure from the store use: > onos config get devicetree --layer 0 Device1 DEVICE CONFIGURATION TYPE VERSION Device1 Device1-1.0.0 TestDevice 1 .0.0 CHANGE: 2uUbeEV4i3ADedjeORmgQt6CVDM = CHANGE: tAk3GZSh1qbdhdm5414r46RLvqw = CHANGE: MY8s8Opw+xjbcARIMzIpUIzeXv0 = TREE: { \"cont1a\" : { \"cont2a\" : { \"leaf2a\" :13, \"leaf2b\" :1.14159, \"leaf2c\" : \"def\" , \"leaf2d\" :0.002, \"leaf2e\" : [ -99,-4,5,200 ] , \"leaf2g\" :false } , \"leaf1a\" : \"abcdef\" , \"list2a\" : [{ \"name\" : \"txout1\" , \"tx-power\" :8 } , { \"name\" : \"txout3\" , \"tx-power\" :16 }]} , \"test1:leafAtTopLevel\" : \"WXY-1234\" } This displays the list of changes IDs and the aggregate effect of layering each one on top of the other. This is the effective configuration. By default all layers are shown ( layer=0 ). To show the previous effective configuration use layer=-1 To display the devices trees for all devices, just omit the device name.","title":"Administrative And Diagnostic CLI"},{"location":"onos-config/docs/cli/#administrative-and-diagnostic-command-line","text":"The project provides a command-line facilities for remotely interacting with the administrative and diagnostic services of the onos-config server. The commands are available at run-time using the consolidated onos client hosted in the onos-cli repository, but their implementation is hosted and built here. The documentation about building and deploying the consolidate onos client or its Docker container is available in the onos-cli GitHub repository.","title":"Administrative and Diagnostic Command-Line"},{"location":"onos-config/docs/cli/#usage","text":"> onos config --help ONOS configuration subsystem commands Usage: onos config [ command ] Available Commands: add Add a config resource compact-changes Takes a snapshot of network and device changes config Manage the CLI configuration get Get config resources rollback Rolls-back a network change snapshot Commands for managing snapshots watch Watch for updates to a config resource type Flags: -h, --help help for config --no-tls if present, do not use TLS --service-address string the onos-config service address ( default \"onos-config:5150\" ) --tls-cert-path string the path to the TLS certificate --tls-key-path string the path to the TLS key Use \"onos config [command] --help\" for more information about a command.","title":"Usage"},{"location":"onos-config/docs/cli/#global-flags","text":"Since the onos command is a client, it requires the address of the server as well as the paths to the key and the certificate to establish secure connection to the server. These options are global to all commands and can be persisted to avoid having to specify them for each command. For example, you can set the default server address as follows: > onos config config set address onos-config-server:5150 Subsequent usages of the onos command can then abstain from using the --address option to indicate the server address, resulting in easier usage.","title":"Global Flags"},{"location":"onos-config/docs/cli/#example-commands","text":"","title":"Example Commands"},{"location":"onos-config/docs/cli/#rollback-network-change","text":"To rollback a network use the rollback admin tool. This will rollback the last network change unless a specific change is given with the changename parameter > onos config rollback Change-VgUAZI928B644v/2XQ0n24x0SjA =","title":"Rollback Network Change"},{"location":"onos-config/docs/cli/#listing-and-loading-model-plugins","text":"A model plugin is a shared object library that represents the YANG models of a particular Device Type and Version. The plugin allows user to create and load their own device models in to onos-config that can be used for validating that configuration changes observe the structure of the YANG models in use on the device. This improves usability by pushing information about the devices' model back up to the onos-config gNMI northbound interface. Model plugins can be loaded at the startup of onos-config by (repeated) --modelPlugin options, or they can be loaded at run time. To see the list of currently loaded plugins use the command: > onos config get plugins To load a plugin dynamically at runtime use the command: > onos config add plugin <full path and filename of a compatible shared object library on target machine> NOTE: Model Plugins cannot be dynamically unloaded - a restart of onos-config is required to unload. In a distributed environment the ModelPlugin will have to be loaded on all instances of onos-config","title":"Listing and Loading model plugins"},{"location":"onos-config/docs/cli/#other-diagnostic-commands","text":"There are a number of commands that provide internal view into the state the onos-config store. These tools use a special-purpose gRPC interfaces to obtain the internal meta-data from the running onos-config process. Please note that these tools are intended purely for diagnostics and should not be relied upon for programmatic purposes as they are not subject to any backward compatibility guarantees.","title":"Other Diagnostic Commands"},{"location":"onos-config/docs/cli/#list-and-watch-changes","text":"For example, to list and watch all changes stored internally run: > onos config watch network-changes ... or to watch device-changes > onos config watch device-changes ...","title":"List and Watch Changes"},{"location":"onos-config/docs/cli/#devicetree","text":"To get the aggregate configuration of a device in a hierarchical JSON structure from the store use: > onos config get devicetree --layer 0 Device1 DEVICE CONFIGURATION TYPE VERSION Device1 Device1-1.0.0 TestDevice 1 .0.0 CHANGE: 2uUbeEV4i3ADedjeORmgQt6CVDM = CHANGE: tAk3GZSh1qbdhdm5414r46RLvqw = CHANGE: MY8s8Opw+xjbcARIMzIpUIzeXv0 = TREE: { \"cont1a\" : { \"cont2a\" : { \"leaf2a\" :13, \"leaf2b\" :1.14159, \"leaf2c\" : \"def\" , \"leaf2d\" :0.002, \"leaf2e\" : [ -99,-4,5,200 ] , \"leaf2g\" :false } , \"leaf1a\" : \"abcdef\" , \"list2a\" : [{ \"name\" : \"txout1\" , \"tx-power\" :8 } , { \"name\" : \"txout3\" , \"tx-power\" :16 }]} , \"test1:leafAtTopLevel\" : \"WXY-1234\" } This displays the list of changes IDs and the aggregate effect of layering each one on top of the other. This is the effective configuration. By default all layers are shown ( layer=0 ). To show the previous effective configuration use layer=-1 To display the devices trees for all devices, just omit the device name.","title":"Devicetree"},{"location":"onos-config/docs/deployment/","text":"Deploying onos-config This guide deploy onos-config through it's Helm chart assumes you have a Kubernetes cluster running with an atomix controller deployed in a namespace. onos-config Helm chart is based on Helm 3.0 version, with no need for the Tiller pod to be present. If you don't have a cluster running and want to try on your local machine please follow first the Kubernetes setup steps outlined to deploy with Helm . The following steps assume you have the setup outlined in that page, including the micro-onos namespace configured. Installing the Chart To install the chart in the micro-onos namespace run from the root directory of the onos-helm-charts repo the command: helm install -n micro-onos onos-config onos-config The output should be: NAME: onos-config LAST DEPLOYED: Tue Nov 26 13 :38:20 2019 NAMESPACE: default STATUS: deployed REVISION: 1 TEST SUITE: None helm install assigns a unique name to the chart and displays all the k8s resources that were created by it. To list the charts that are installed and view their statuses, run helm ls : helm ls NAME REVISION UPDATED STATUS CHART APP VERSION NAMESPACE ... jumpy-tortoise 1 Tue May 14 18 :56:39 2019 DEPLOYED onos-config-0.0.1 0 .0.1 default Onos Config Partition Set The onos-config chart also deployes a PartitionSet custom Atomix resource to store all the configuration in a replicated and fail safe manner. In the following example there is only one partition set deployed onos-config-1-0 . NAMESPACE NAME READY STATUS RESTARTS AGE default atomix-controller-b579b9f48-lgvxf 1 /1 Running 0 63m default onos-config-1-0 1 /1 Running 0 61m default onos-config-77765c9dc4-vsjjn 1 /1 Running 0 61m One can customize the number of partitions and replicas by modifying, in values.yaml , under store/raft the values of partitions: 1 partitionSize: 1 Installing the chart in a different namespace. Issue the helm install command substituting micro-onos with your namespace. helm install -n <your_name_space> onos-config onos-config Installing the chart with debug. onos-config offers the capability to open a debug port (4000) to the image. To enable the debug capabilities please set the debug flag to true in values.yaml or pass it to helm install helm install -n micro-onos onos-config onos-config --set debug = true Troubleshoot If your chart does not install or the pod is not running for some reason and/or you modified values Helm offers two flags to help you debug your chart: --dry-run check the chart without actually installing the pod. --debug prints out more information about your chart helm install -n micro-onos onos-config --debug --dry-run onos-topo Also to verify how template values are expanded, run: helm install template onos-config Uninstalling the chart. To remove the onos-config pod issue helm delete -n micro-onos onos-config Pod Information To view the pods that are deployed, run kubectl -n micro-onos get pods : > kubectl -n micro-onos get pods NAME READY STATUS RESTARTS AGE ... onos-config-655964cbf5-tkcfb 1 /1 Running 0 52s You can view more detailed information about the pod and other resources by running kubectl describe : > kubectl -n micro-onos describe pod onos-config-655964cbf5-tkcfb Name: onos-config-655964cbf5-tkcfb Namespace: default Priority: 0 PriorityClassName: <none> Node: minikube/10.0.2.15 Start Time: Tue, 14 May 2019 18 :56:39 -0700 ... The onos-config pods are reached through a Service which load balances requests to the application. To view the services, run kubectl get services : > kubectl -n micro-onos get svc NAME DATA AGE ... onos-config-config 5 86s The application's configuration is stored in a ConfigMap which can be viewed by running kubectl get configmaps : > kubectl -n micro-onos get cm NAME DATA AGE ... onos-config-config 5 97s And TLS keys and certs are stored in a Secret resource: > kubectl -n micro-onos get secrets NAME TYPE DATA AGE ... onos-config-secret Opaque 4 109s","title":"How To Deploy with Helm"},{"location":"onos-config/docs/deployment/#deploying-onos-config","text":"This guide deploy onos-config through it's Helm chart assumes you have a Kubernetes cluster running with an atomix controller deployed in a namespace. onos-config Helm chart is based on Helm 3.0 version, with no need for the Tiller pod to be present. If you don't have a cluster running and want to try on your local machine please follow first the Kubernetes setup steps outlined to deploy with Helm . The following steps assume you have the setup outlined in that page, including the micro-onos namespace configured.","title":"Deploying onos-config"},{"location":"onos-config/docs/deployment/#installing-the-chart","text":"To install the chart in the micro-onos namespace run from the root directory of the onos-helm-charts repo the command: helm install -n micro-onos onos-config onos-config The output should be: NAME: onos-config LAST DEPLOYED: Tue Nov 26 13 :38:20 2019 NAMESPACE: default STATUS: deployed REVISION: 1 TEST SUITE: None helm install assigns a unique name to the chart and displays all the k8s resources that were created by it. To list the charts that are installed and view their statuses, run helm ls : helm ls NAME REVISION UPDATED STATUS CHART APP VERSION NAMESPACE ... jumpy-tortoise 1 Tue May 14 18 :56:39 2019 DEPLOYED onos-config-0.0.1 0 .0.1 default","title":"Installing the Chart"},{"location":"onos-config/docs/deployment/#onos-config-partition-set","text":"The onos-config chart also deployes a PartitionSet custom Atomix resource to store all the configuration in a replicated and fail safe manner. In the following example there is only one partition set deployed onos-config-1-0 . NAMESPACE NAME READY STATUS RESTARTS AGE default atomix-controller-b579b9f48-lgvxf 1 /1 Running 0 63m default onos-config-1-0 1 /1 Running 0 61m default onos-config-77765c9dc4-vsjjn 1 /1 Running 0 61m One can customize the number of partitions and replicas by modifying, in values.yaml , under store/raft the values of partitions: 1 partitionSize: 1","title":"Onos Config Partition Set"},{"location":"onos-config/docs/deployment/#installing-the-chart-in-a-different-namespace","text":"Issue the helm install command substituting micro-onos with your namespace. helm install -n <your_name_space> onos-config onos-config","title":"Installing the chart in a different namespace."},{"location":"onos-config/docs/deployment/#installing-the-chart-with-debug","text":"onos-config offers the capability to open a debug port (4000) to the image. To enable the debug capabilities please set the debug flag to true in values.yaml or pass it to helm install helm install -n micro-onos onos-config onos-config --set debug = true","title":"Installing the chart with debug."},{"location":"onos-config/docs/deployment/#troubleshoot","text":"If your chart does not install or the pod is not running for some reason and/or you modified values Helm offers two flags to help you debug your chart: --dry-run check the chart without actually installing the pod. --debug prints out more information about your chart helm install -n micro-onos onos-config --debug --dry-run onos-topo Also to verify how template values are expanded, run: helm install template onos-config","title":"Troubleshoot"},{"location":"onos-config/docs/deployment/#uninstalling-the-chart","text":"To remove the onos-config pod issue helm delete -n micro-onos onos-config","title":"Uninstalling the chart."},{"location":"onos-config/docs/deployment/#pod-information","text":"To view the pods that are deployed, run kubectl -n micro-onos get pods : > kubectl -n micro-onos get pods NAME READY STATUS RESTARTS AGE ... onos-config-655964cbf5-tkcfb 1 /1 Running 0 52s You can view more detailed information about the pod and other resources by running kubectl describe : > kubectl -n micro-onos describe pod onos-config-655964cbf5-tkcfb Name: onos-config-655964cbf5-tkcfb Namespace: default Priority: 0 PriorityClassName: <none> Node: minikube/10.0.2.15 Start Time: Tue, 14 May 2019 18 :56:39 -0700 ... The onos-config pods are reached through a Service which load balances requests to the application. To view the services, run kubectl get services : > kubectl -n micro-onos get svc NAME DATA AGE ... onos-config-config 5 86s The application's configuration is stored in a ConfigMap which can be viewed by running kubectl get configmaps : > kubectl -n micro-onos get cm NAME DATA AGE ... onos-config-config 5 97s And TLS keys and certs are stored in a Secret resource: > kubectl -n micro-onos get secrets NAME TYPE DATA AGE ... onos-config-secret Opaque 4 109s","title":"Pod Information"},{"location":"onos-config/docs/gnmi/","text":"Northbound gNMI service The system provides a Northbound gNMI service. gNMI extensions supported on the Northbound are described in gnmi_extensions.md gnmi_cli utility A simple way to issue a gNMI requests is to use the gnmi_cli utility from the OpenConfig project. gnmi_cli utility through onos-cli On a deployed cluster the onos-cli pod has a gNMI client that can be used to format and send gNMI messages. You can run the following command to get in to the onos-cli pod and then run gnmi_cli from there: kubectl -n onos exec -it $( kubectl -n onos get pods -l type = cli -o name ) -- /bin/sh Accessing from local machine An alternative is to install on your system, install as follows: go get -u github.com/openconfig/gnmi/cmd/gnmi_cli Then you can use k8s port forwarding to run gnmi_cli locally on your machine as follows: kubectl port-forward -n <onos-namespace> <onos-config-pod-id> 5150 :5150 For troubleshooting information see gnmi_user_manual.md Namespaces onos-config follows the YGOT project in simplification by not using namespaces in paths. This can be achieved because the YANG models used do not have clashing device names that need to be qualified by namespaces. This helps developers, avoiding un-needed complication and redundancy. Northbound gNMI Get Request onos-config extends standard gNMI as a method of accessing a complete configuration system consisting of several devices - each identified by target . It supports network wide configuration actions (multiple updates on multiple devices at once, and rollback of same). The gNMI Northbound interface is available through https on port 5150. A simple Get operation Use gnmi_cli -get to get configuration for a particular device (target) from the system. Use \"target\" as the identifier of the device, and the \"elem\" collection is the path to the requested element. If config from several devices are required, several paths can be added gnmi_cli -get -address onos-config:5150 \\ -proto \"path: <target: 'devicesim-1', elem: <name: 'system'> elem: <name: 'clock' > elem: <name: 'config'> elem: <name: 'timezone-name'>>\" \\ -timeout 5s -en PROTO -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt -client_key /etc/ssl/certs/client1.key -ca_crt /etc/ssl/certs/onfca.crt List all device names (targets) A useful way to retrieve all stored device names is with the command: gnmi_cli -get -address onos-config:5150 \\ -proto \"path: <target: '*'>\" \\ -timeout 5s -en PROTO -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt -client_key /etc/ssl/certs/client1.key -ca_crt /etc/ssl/certs/onfca.crt The value in the response can be an individual value or a tree of values depending on the scope of the request. List complete configuration for a device (target) gnmi_cli -get -address onos-config:5150 \\ -proto \"path: <target: 'devicesim-1'>\" \\ -timeout 5s -en PROTO -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt -client_key /etc/ssl/certs/client1.key -ca_crt /etc/ssl/certs/onfca.crt Here all elem components are omitted, which is like requesting '/'. Get a keyed index in a list Use a proto value like: -proto \"path: <target: 'devicesim-1', elem: <name: 'system'> elem: <name: 'openflow'> elem: <name: 'controllers'> elem: <name: 'controller' key: <key: 'name' value: 'main'>> elem: <name: 'connections'> elem: <name: 'connection' key: <key: 'aux-id' value: '0'>> elem: <name: 'config'> elem: <name: 'address'>>\" Use wildcards in a path onos-config supports the wildcards * and ... in gNMI paths, meaning match one item of match all items respectively as defined in the gNMI specification . For instance to retrieve all instances of an interface use * as the key: gnmi_cli -get -address onos-config:5150 \\ -proto \"path:<target: 'devicesim-1', elem:<name:'interfaces' > elem:<name:'interface' key:<key:'name' value:'*' > > elem:<name:'config'> elem:<name:'enabled' >>\" \\ -timeout 5s -en PROTO -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt -client_key /etc/ssl/certs/client1.key -ca_crt /etc/ssl/certs/onfca.crt This returns the enabled config attribute of both interfaces 'eth1' and 'admin' To retrieve both the config and state values of both then additionally the use * in place of config : gnmi_cli -get -address onos-config:5150 \\ -proto \"path:<target: 'devicesim-1', elem:<name:'interfaces' > elem:<name:'interface' key:<key:'name' value:'*' > > elem:<name:'*'> elem:<name:'enabled' >>\" \\ -timeout 5s -en PROTO -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt -client_key /etc/ssl/certs/client1.key -ca_crt /etc/ssl/certs/onfca.crt If the device is connected and the OperationState cache is populated this returns 4 values - eth1 config and state enabled values and admin config and state enabled values. Device read only state get To retrieve state attributes (those defined in YANG with config false , non-configurable leafs), in general there is no difference with a normal gNMI Get request. There is however a type qualifier STATE in gNMI Get, that allows only STATE values to be requested (excluding any CONFIG attributes. For example to retrieve all the STATE values from devicesim-1 : gnmi_cli -get -address onos-config:5150 \\ -proto \"path: <target: 'devicesim-1'>, type: STATE\" \\ -timeout 5s -en PROTO -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt -client_key /etc/ssl/certs/client1.key -ca_crt /etc/ssl/certs/onfca.crt The set of possible values for type are: ALL , STATE , CONFIG and OPERATIONAL . If not specified ALL is the default type . In onos-config there is no distinction made between STATE and OPERATIONAL and requesting either will get both. This type can be combined with any other proto qualifier like elem and prefix Northbound Set Request via gNMI Similarly, to make a gNMI Set request, use the gnmi_cli -set command as in the example below: gnmi_cli -address onos-config:5150 -set \\ -proto \"update: <path: <target: 'devicesim-1', elem: <name: 'system'> elem: <name: 'clock' > elem: <name: 'config'> elem: <name: 'timezone-name'>> val: <string_val: 'Europe/Paris'>>\" \\ -timeout 5s -en PROTO -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt -client_key /etc/ssl/certs/client1.key -ca_crt /etc/ssl/certs/onfca.crt giving a response like response: < path: < elem: < name: \"system\" > elem: < name: \"clock\" > elem: < name: \"config\" > elem: < name: \"timezone-name\" > target: \"devicesim-1\" > op: UPDATE > timestamp: 1559122191 extension: < registered_ext: < id: 100 msg: \"happy_matsumoto\" > > The result will include a field as a gNMI SetResponse extension 100 giving randomly generated Network Change identifier, which may be subsequently used to rollback the change. If a specific name is desired for a Network Change, the set may be given in the SetRequest() with the 100 extension at the end of the -proto section like: , extension: <registered_ext: <id: 100, msg: 'myfirstchange'>> See gnmi_extensions.md for more on gNMI extensions supported. The corresponding -get for this require using the -proto path: <target: 'devicesim-1', elem: <name: 'system'> elem: <name: 'clock' > elem: <name: 'config'> elem: <name: 'timezone-name'>> Currently (Jan '20) checking of the contents is done only when a Model Plugin is loaded for the device type. 2 checks are done that a attempt is not being made to change a readonly attribute and that valid data types and values are being used. The config is only forwarded down to the southbound layer only if the config is correct and the device is currently in the deviceStore. Set on multiple targets in one request. onos-config gNMI NB supports setting multiple elements on multiple targets at the same time. An example of an attribute on two targets is: gnmi_cli -address onos-config:5150 -set \\ -proto \"update: <path: <target: 'devicesim-1', elem: <name: 'interfaces'> elem: <name: 'interface' key:<key:'name' value:'eth1' >> elem: <name: 'config'> elem: <name: 'name'>> val: <string_val: 'eth1'>> extension: <registered_ext: <id: 100, msg:'added_devicesim-1-IF'>> update: <path: <target: 'devicesim-2', elem: <name: 'interfaces'> elem: <name: 'interface' key:<key:'name' value:'eth1' >> elem: <name: 'config'> elem: <name: 'name'>> val: <string_val: 'eth1'>> extension: <registered_ext: <id: 100, msg:'2nd_devicesim'>> extension: <registered_ext: <id: 101, msg:'1.0.0'>> extension: <registered_ext: <id: 102, msg:'Devicesim'>>\" \\ -timeout 5s -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt \\ -client_key /etc/ssl/certs/client1.key \\ -ca_crt /etc/ssl/certs/onfca.crt An example of two attributes on two target: gnmi_cli -address onos-config:5150 -set \\ -proto \"update: <path: <target: 'devicesim-1', elem: <name: 'interfaces'> elem: <name: 'interface' key:<key:'name' value:'eth1' >> elem: <name: 'hold-time'> elem: <name: 'config'> elem: <name: 'up'>> val: <uint_val: 123456>> update: <path: <target: 'devicesim-1', elem: <name: 'interfaces'> elem: <name: 'interface' key:<key:'name' value:'eth1' >> elem: <name: 'hold-time'> elem: <name: 'config'> elem: <name: 'down'>> val: <uint_val: 54321>> update: <path: <target: 'devicesim-2', elem: <name: 'interfaces'> elem: <name: 'interface' key:<key:'name' value:'eth1' >> elem: <name: 'hold-time'> elem: <name: 'config'> elem: <name: 'up'>> val: <uint_val: 765432>> update: <path: <target: 'devicesim-2', elem: <name: 'interfaces'> elem: <name: 'interface' key:<key:'name' value:'eth1' >> elem: <name: 'hold-time'> elem: <name: 'config'> elem: <name: 'down'>> val: <uint_val: 234567>> extension: <registered_ext: <id: 100, msg:'add_hold_times'>>\" \\ -timeout 5s -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt \\ -client_key /etc/ssl/certs/client1.key \\ -ca_crt /etc/ssl/certs/onfca.crt Target device not known/creating a new device target If the target device is not currently known to onos-config the system will store the configuration internally and apply it to the target device when/if it becomes available. When the target becomes available onos-config will compute the latest configuration for it based on the set of applied changes and push it to the target with a standard set operation. In the case where the target device is not known, a special feature of onos-config has to be invoked to tell the system the type and version to use as a model plugin for validation - these are given in extensions 101 (version) and 102 (type). This can be used to pre-provision new devices or new versions of devices before they are available in the onos-topo topology. For example using the gnmi_cli: gnmi_cli -address onos-config:5150 -set \\ -proto \"update: <path: <target: 'new-device', elem: <name: 'system'> elem: <name: 'clock' > elem: <name: 'config'> elem: <name: 'timezone-name'>> val: <string_val: 'Europe/Paris'>>, extension: <registered_ext: <id: 100, msg: 'my2ndchange'>> , extension <registered_ext: <id: 101, msg: '1.0.0'>>, extension: <registered_ext: <id: 102, msg: 'Devicesim'>>\" \\ -timeout 5s -en PROTO -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt -client_key /etc/ssl/certs/client1.key -ca_crt /etc/ssl/certs/onfca.crt There are restrictions on the use of these extensions in this context: * All targets specified in this set command will have to be of the same type and version as given in extension 101 and 102, even if they already exist on the system. Northbound Delete Request via gNMI A delete request in gNMI is done using the set request with delete paths instead of update or replace . To make a gNMI Set request do delete a path, use the gnmi_cli -set command as in the example below: gnmi_cli -address onos-config:5150 -set \\ -proto \"delete: <target: 'devicesim-1', elem: <name: 'system'> elem: <name: 'clock' > elem: <name: 'config'> elem: <name: 'timezone-name'>>\" \\ -timeout 5s -en PROTO -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt -client_key /etc/ssl/certs/client1.key -ca_crt /etc/ssl/certs/onfca.crt Northbound Subscribe Request for Stream Notifications via gNMI Similarly, to make a gNMI Subscribe request for streaming, use the gnmi_cli command as in the example below, please note the 0 as subscription mode to indicate streaming: gnmi_cli -address onos-config:5150 \\ -proto \"subscribe:<mode: 0, prefix:<>, subscription:<path: <target: 'devicesim-1', elem: <name: 'system'> elem: <name: 'clock' > elem: <name: 'config'> elem: <name: 'timezone-name'>>>>\" \\ -timeout 5s -en PROTO -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt -client_key /etc/ssl/certs/client1.key -ca_crt /etc/ssl/certs/onfca.crt This command will block until there is a change at the requested value that gets propagated to the underlying stream. Also as per gnmi_cli behaviour the updates get printed twice. Northbound Subscribe Once Request via gNMI Similarly, to make a gNMI Subscribe Once request, use the gnmi_cli command as in the example below, please note the 1 as subscription mode to indicate to send the response once: gnmi_cli -address onos-config:5150 \\ -proto \"subscribe:<mode: 1, prefix:<>, subscription:<path: <target: 'devicesim-1', elem: <name: 'system'> elem: <name: 'clock' > elem: <name: 'config'> elem: <name: 'timezone-name'>>>>\" \\ -timeout 5s -en PROTO -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt -client_key /etc/ssl/certs/client1.key -ca_crt /etc/ssl/certs/onfca.crt This command will fail if no value is set at that specific path. This is due to limitations of the gnmi_cli. Northbound Subscribe Poll Request via gNMI Similarly, to make a gNMI Subscribe POLL request, use the gnmi_cli command as in the example below, please note the 2 as subscription mode to indicate to send the response in a polling way every polling_interval specified seconds: gnmi_cli -address onos-config:5150 -polling_interval 5s \\ -proto \"subscribe:<mode: 2, prefix:<>, subscription:<sample_interval: 5, path: <target: 'devicesim-1', elem: <name: 'system'> elem: <name: 'clock' > elem: <name: 'config'> elem: <name: 'timezone-name'>>>>\" \\ -timeout 5s -en PROTO -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt -client_key /etc/ssl/certs/client1.key -ca_crt /etc/ssl/certs/onfca.crt This command will fail if no value is set at that specific path. This is due to limitations of the gnmi_cli.","title":"Northbound gNMI Service"},{"location":"onos-config/docs/gnmi/#northbound-gnmi-service","text":"The system provides a Northbound gNMI service. gNMI extensions supported on the Northbound are described in gnmi_extensions.md","title":"Northbound gNMI service"},{"location":"onos-config/docs/gnmi/#gnmi_cli-utility","text":"A simple way to issue a gNMI requests is to use the gnmi_cli utility from the OpenConfig project.","title":"gnmi_cli utility"},{"location":"onos-config/docs/gnmi/#gnmi_cli-utility-through-onos-cli","text":"On a deployed cluster the onos-cli pod has a gNMI client that can be used to format and send gNMI messages. You can run the following command to get in to the onos-cli pod and then run gnmi_cli from there: kubectl -n onos exec -it $( kubectl -n onos get pods -l type = cli -o name ) -- /bin/sh","title":"gnmi_cli utility through onos-cli"},{"location":"onos-config/docs/gnmi/#accessing-from-local-machine","text":"An alternative is to install on your system, install as follows: go get -u github.com/openconfig/gnmi/cmd/gnmi_cli Then you can use k8s port forwarding to run gnmi_cli locally on your machine as follows: kubectl port-forward -n <onos-namespace> <onos-config-pod-id> 5150 :5150 For troubleshooting information see gnmi_user_manual.md","title":"Accessing from local machine"},{"location":"onos-config/docs/gnmi/#namespaces","text":"onos-config follows the YGOT project in simplification by not using namespaces in paths. This can be achieved because the YANG models used do not have clashing device names that need to be qualified by namespaces. This helps developers, avoiding un-needed complication and redundancy.","title":"Namespaces"},{"location":"onos-config/docs/gnmi/#northbound-gnmi-get-request","text":"onos-config extends standard gNMI as a method of accessing a complete configuration system consisting of several devices - each identified by target . It supports network wide configuration actions (multiple updates on multiple devices at once, and rollback of same). The gNMI Northbound interface is available through https on port 5150.","title":"Northbound gNMI Get Request"},{"location":"onos-config/docs/gnmi/#a-simple-get-operation","text":"Use gnmi_cli -get to get configuration for a particular device (target) from the system. Use \"target\" as the identifier of the device, and the \"elem\" collection is the path to the requested element. If config from several devices are required, several paths can be added gnmi_cli -get -address onos-config:5150 \\ -proto \"path: <target: 'devicesim-1', elem: <name: 'system'> elem: <name: 'clock' > elem: <name: 'config'> elem: <name: 'timezone-name'>>\" \\ -timeout 5s -en PROTO -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt -client_key /etc/ssl/certs/client1.key -ca_crt /etc/ssl/certs/onfca.crt","title":"A simple Get operation"},{"location":"onos-config/docs/gnmi/#list-all-device-names-targets","text":"A useful way to retrieve all stored device names is with the command: gnmi_cli -get -address onos-config:5150 \\ -proto \"path: <target: '*'>\" \\ -timeout 5s -en PROTO -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt -client_key /etc/ssl/certs/client1.key -ca_crt /etc/ssl/certs/onfca.crt The value in the response can be an individual value or a tree of values depending on the scope of the request.","title":"List all device names (targets)"},{"location":"onos-config/docs/gnmi/#list-complete-configuration-for-a-device-target","text":"gnmi_cli -get -address onos-config:5150 \\ -proto \"path: <target: 'devicesim-1'>\" \\ -timeout 5s -en PROTO -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt -client_key /etc/ssl/certs/client1.key -ca_crt /etc/ssl/certs/onfca.crt Here all elem components are omitted, which is like requesting '/'.","title":"List complete configuration for a device (target)"},{"location":"onos-config/docs/gnmi/#get-a-keyed-index-in-a-list","text":"Use a proto value like: -proto \"path: <target: 'devicesim-1', elem: <name: 'system'> elem: <name: 'openflow'> elem: <name: 'controllers'> elem: <name: 'controller' key: <key: 'name' value: 'main'>> elem: <name: 'connections'> elem: <name: 'connection' key: <key: 'aux-id' value: '0'>> elem: <name: 'config'> elem: <name: 'address'>>\"","title":"Get a keyed index in a list"},{"location":"onos-config/docs/gnmi/#use-wildcards-in-a-path","text":"onos-config supports the wildcards * and ... in gNMI paths, meaning match one item of match all items respectively as defined in the gNMI specification . For instance to retrieve all instances of an interface use * as the key: gnmi_cli -get -address onos-config:5150 \\ -proto \"path:<target: 'devicesim-1', elem:<name:'interfaces' > elem:<name:'interface' key:<key:'name' value:'*' > > elem:<name:'config'> elem:<name:'enabled' >>\" \\ -timeout 5s -en PROTO -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt -client_key /etc/ssl/certs/client1.key -ca_crt /etc/ssl/certs/onfca.crt This returns the enabled config attribute of both interfaces 'eth1' and 'admin' To retrieve both the config and state values of both then additionally the use * in place of config : gnmi_cli -get -address onos-config:5150 \\ -proto \"path:<target: 'devicesim-1', elem:<name:'interfaces' > elem:<name:'interface' key:<key:'name' value:'*' > > elem:<name:'*'> elem:<name:'enabled' >>\" \\ -timeout 5s -en PROTO -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt -client_key /etc/ssl/certs/client1.key -ca_crt /etc/ssl/certs/onfca.crt If the device is connected and the OperationState cache is populated this returns 4 values - eth1 config and state enabled values and admin config and state enabled values.","title":"Use wildcards in a path"},{"location":"onos-config/docs/gnmi/#device-read-only-state-get","text":"To retrieve state attributes (those defined in YANG with config false , non-configurable leafs), in general there is no difference with a normal gNMI Get request. There is however a type qualifier STATE in gNMI Get, that allows only STATE values to be requested (excluding any CONFIG attributes. For example to retrieve all the STATE values from devicesim-1 : gnmi_cli -get -address onos-config:5150 \\ -proto \"path: <target: 'devicesim-1'>, type: STATE\" \\ -timeout 5s -en PROTO -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt -client_key /etc/ssl/certs/client1.key -ca_crt /etc/ssl/certs/onfca.crt The set of possible values for type are: ALL , STATE , CONFIG and OPERATIONAL . If not specified ALL is the default type . In onos-config there is no distinction made between STATE and OPERATIONAL and requesting either will get both. This type can be combined with any other proto qualifier like elem and prefix","title":"Device read only state get"},{"location":"onos-config/docs/gnmi/#northbound-set-request-via-gnmi","text":"Similarly, to make a gNMI Set request, use the gnmi_cli -set command as in the example below: gnmi_cli -address onos-config:5150 -set \\ -proto \"update: <path: <target: 'devicesim-1', elem: <name: 'system'> elem: <name: 'clock' > elem: <name: 'config'> elem: <name: 'timezone-name'>> val: <string_val: 'Europe/Paris'>>\" \\ -timeout 5s -en PROTO -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt -client_key /etc/ssl/certs/client1.key -ca_crt /etc/ssl/certs/onfca.crt giving a response like response: < path: < elem: < name: \"system\" > elem: < name: \"clock\" > elem: < name: \"config\" > elem: < name: \"timezone-name\" > target: \"devicesim-1\" > op: UPDATE > timestamp: 1559122191 extension: < registered_ext: < id: 100 msg: \"happy_matsumoto\" > > The result will include a field as a gNMI SetResponse extension 100 giving randomly generated Network Change identifier, which may be subsequently used to rollback the change. If a specific name is desired for a Network Change, the set may be given in the SetRequest() with the 100 extension at the end of the -proto section like: , extension: <registered_ext: <id: 100, msg: 'myfirstchange'>> See gnmi_extensions.md for more on gNMI extensions supported. The corresponding -get for this require using the -proto path: <target: 'devicesim-1', elem: <name: 'system'> elem: <name: 'clock' > elem: <name: 'config'> elem: <name: 'timezone-name'>> Currently (Jan '20) checking of the contents is done only when a Model Plugin is loaded for the device type. 2 checks are done that a attempt is not being made to change a readonly attribute and that valid data types and values are being used. The config is only forwarded down to the southbound layer only if the config is correct and the device is currently in the deviceStore.","title":"Northbound Set Request via gNMI"},{"location":"onos-config/docs/gnmi/#set-on-multiple-targets-in-one-request","text":"onos-config gNMI NB supports setting multiple elements on multiple targets at the same time. An example of an attribute on two targets is: gnmi_cli -address onos-config:5150 -set \\ -proto \"update: <path: <target: 'devicesim-1', elem: <name: 'interfaces'> elem: <name: 'interface' key:<key:'name' value:'eth1' >> elem: <name: 'config'> elem: <name: 'name'>> val: <string_val: 'eth1'>> extension: <registered_ext: <id: 100, msg:'added_devicesim-1-IF'>> update: <path: <target: 'devicesim-2', elem: <name: 'interfaces'> elem: <name: 'interface' key:<key:'name' value:'eth1' >> elem: <name: 'config'> elem: <name: 'name'>> val: <string_val: 'eth1'>> extension: <registered_ext: <id: 100, msg:'2nd_devicesim'>> extension: <registered_ext: <id: 101, msg:'1.0.0'>> extension: <registered_ext: <id: 102, msg:'Devicesim'>>\" \\ -timeout 5s -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt \\ -client_key /etc/ssl/certs/client1.key \\ -ca_crt /etc/ssl/certs/onfca.crt An example of two attributes on two target: gnmi_cli -address onos-config:5150 -set \\ -proto \"update: <path: <target: 'devicesim-1', elem: <name: 'interfaces'> elem: <name: 'interface' key:<key:'name' value:'eth1' >> elem: <name: 'hold-time'> elem: <name: 'config'> elem: <name: 'up'>> val: <uint_val: 123456>> update: <path: <target: 'devicesim-1', elem: <name: 'interfaces'> elem: <name: 'interface' key:<key:'name' value:'eth1' >> elem: <name: 'hold-time'> elem: <name: 'config'> elem: <name: 'down'>> val: <uint_val: 54321>> update: <path: <target: 'devicesim-2', elem: <name: 'interfaces'> elem: <name: 'interface' key:<key:'name' value:'eth1' >> elem: <name: 'hold-time'> elem: <name: 'config'> elem: <name: 'up'>> val: <uint_val: 765432>> update: <path: <target: 'devicesim-2', elem: <name: 'interfaces'> elem: <name: 'interface' key:<key:'name' value:'eth1' >> elem: <name: 'hold-time'> elem: <name: 'config'> elem: <name: 'down'>> val: <uint_val: 234567>> extension: <registered_ext: <id: 100, msg:'add_hold_times'>>\" \\ -timeout 5s -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt \\ -client_key /etc/ssl/certs/client1.key \\ -ca_crt /etc/ssl/certs/onfca.crt","title":"Set on multiple targets in one request."},{"location":"onos-config/docs/gnmi/#target-device-not-knowncreating-a-new-device-target","text":"If the target device is not currently known to onos-config the system will store the configuration internally and apply it to the target device when/if it becomes available. When the target becomes available onos-config will compute the latest configuration for it based on the set of applied changes and push it to the target with a standard set operation. In the case where the target device is not known, a special feature of onos-config has to be invoked to tell the system the type and version to use as a model plugin for validation - these are given in extensions 101 (version) and 102 (type). This can be used to pre-provision new devices or new versions of devices before they are available in the onos-topo topology. For example using the gnmi_cli: gnmi_cli -address onos-config:5150 -set \\ -proto \"update: <path: <target: 'new-device', elem: <name: 'system'> elem: <name: 'clock' > elem: <name: 'config'> elem: <name: 'timezone-name'>> val: <string_val: 'Europe/Paris'>>, extension: <registered_ext: <id: 100, msg: 'my2ndchange'>> , extension <registered_ext: <id: 101, msg: '1.0.0'>>, extension: <registered_ext: <id: 102, msg: 'Devicesim'>>\" \\ -timeout 5s -en PROTO -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt -client_key /etc/ssl/certs/client1.key -ca_crt /etc/ssl/certs/onfca.crt There are restrictions on the use of these extensions in this context: * All targets specified in this set command will have to be of the same type and version as given in extension 101 and 102, even if they already exist on the system.","title":"Target device not known/creating a new device target"},{"location":"onos-config/docs/gnmi/#northbound-delete-request-via-gnmi","text":"A delete request in gNMI is done using the set request with delete paths instead of update or replace . To make a gNMI Set request do delete a path, use the gnmi_cli -set command as in the example below: gnmi_cli -address onos-config:5150 -set \\ -proto \"delete: <target: 'devicesim-1', elem: <name: 'system'> elem: <name: 'clock' > elem: <name: 'config'> elem: <name: 'timezone-name'>>\" \\ -timeout 5s -en PROTO -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt -client_key /etc/ssl/certs/client1.key -ca_crt /etc/ssl/certs/onfca.crt","title":"Northbound Delete Request via gNMI"},{"location":"onos-config/docs/gnmi/#northbound-subscribe-request-for-stream-notifications-via-gnmi","text":"Similarly, to make a gNMI Subscribe request for streaming, use the gnmi_cli command as in the example below, please note the 0 as subscription mode to indicate streaming: gnmi_cli -address onos-config:5150 \\ -proto \"subscribe:<mode: 0, prefix:<>, subscription:<path: <target: 'devicesim-1', elem: <name: 'system'> elem: <name: 'clock' > elem: <name: 'config'> elem: <name: 'timezone-name'>>>>\" \\ -timeout 5s -en PROTO -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt -client_key /etc/ssl/certs/client1.key -ca_crt /etc/ssl/certs/onfca.crt This command will block until there is a change at the requested value that gets propagated to the underlying stream. Also as per gnmi_cli behaviour the updates get printed twice.","title":"Northbound Subscribe Request for Stream Notifications via gNMI"},{"location":"onos-config/docs/gnmi/#northbound-subscribe-once-request-via-gnmi","text":"Similarly, to make a gNMI Subscribe Once request, use the gnmi_cli command as in the example below, please note the 1 as subscription mode to indicate to send the response once: gnmi_cli -address onos-config:5150 \\ -proto \"subscribe:<mode: 1, prefix:<>, subscription:<path: <target: 'devicesim-1', elem: <name: 'system'> elem: <name: 'clock' > elem: <name: 'config'> elem: <name: 'timezone-name'>>>>\" \\ -timeout 5s -en PROTO -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt -client_key /etc/ssl/certs/client1.key -ca_crt /etc/ssl/certs/onfca.crt This command will fail if no value is set at that specific path. This is due to limitations of the gnmi_cli.","title":"Northbound Subscribe Once Request via gNMI"},{"location":"onos-config/docs/gnmi/#northbound-subscribe-poll-request-via-gnmi","text":"Similarly, to make a gNMI Subscribe POLL request, use the gnmi_cli command as in the example below, please note the 2 as subscription mode to indicate to send the response in a polling way every polling_interval specified seconds: gnmi_cli -address onos-config:5150 -polling_interval 5s \\ -proto \"subscribe:<mode: 2, prefix:<>, subscription:<sample_interval: 5, path: <target: 'devicesim-1', elem: <name: 'system'> elem: <name: 'clock' > elem: <name: 'config'> elem: <name: 'timezone-name'>>>>\" \\ -timeout 5s -en PROTO -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt -client_key /etc/ssl/certs/client1.key -ca_crt /etc/ssl/certs/onfca.crt This command will fail if no value is set at that specific path. This is due to limitations of the gnmi_cli.","title":"Northbound Subscribe Poll Request via gNMI"},{"location":"onos-config/docs/gnmi_extensions/","text":"gNMI extensions on the Northbound interface gNMI is designed primarily as a device management interface, and augmenting it with the extra functionality to do network wide configuration management across many devices requires some extension. Some functions (e.g. rollback and version management) are far beyond what gNMI is designed for, and have been given their own gRPC definitions as admin and diags . Use of target in the NBI In gNMI the Path type is comprised of a set of path elements and a target . In the onos-config NBI this target represents the name of the device as it is held in the configuration system. Configurations can be explored through the onos cli like: > onos config get configs Device2-2.0.0 ( Device2 ) 2 .0.0 TestDevice 2019 -05-09T18:00:00+01:00 oOqIgEg82ZvVcF7Q3xEDpWAoPcw = stratum-sim-1-1.0.0 ( stratum-sim-1 ) 1 .0.0 Stratum 2019 -06-05T11:03:17+01:00 hPE88W6rrt5TskCTxtoB1n0hr3I = ... In the example above stratum-sim-1 is the device associated with the configuration stratum-sim-1-1.0.0 . Therefore when using a gNMI client like gnmi_cli (see gnmi.md ) the target can be specified like gnmi_cli -get -address localhost:5150 \\ -proto \"path: <target: 'stratum-sim-1', elem: <name: 'system'> elem:<name:'config'> elem: <name: 'motd-banner'>>\" \\ ... The following rules apply when a prefix is present in the request: The target in the prefix always takes precedence over any others If no target is given in the prefix it is an error Special case to get all device names When doing a GetRequest if * is given as a target then the request returns a simple listing of all device names present in the system (with their version). Any path elements are ignored in this special case. Managing configuration objects The diagram shows the internal storage structures of onos-config (in orange). The Configuration object represents the complete configuration for a particular version of a device. Network changes can be applied across multiple Configurations (devices), and have the ability to be rolled back (by the name of the Network Change). 3 different extensions have been chosen in the project to make dealing with Network Changes and Configurations through gNMI possible. Use of Extension 100 (network change name) in SetRequest and SetResponse In onos-config the gNMI extension number 100 has been reserved for the network change name . SetRequest In the SetRequest extension 100 can be used to define a name for the Network change. If it is not specified then a name is picked automatically. There is an example of setting this extension when using gnmi_cli in gnmi.md (Northbound Set Request via gNMI) SetResponse In the SetResponse the name of the Network Change will always be given in extension 100 (either the given name or the generated one). There is an example of the return of this extension through gnmi_cli in gnmi.md (Northbound Set Request via gNMI) Use of Extension 101 (device version) in SetRequest Extension 101 is used to set the Model version for a Configuration (as part of a Network Change). There may be multiple different configurations for a device based on version number. This extension allows the correct version of the configuration to be chosen. If a version is given where no existing Configuration exists, an error is returned explaining that device type (extension 102 - see below) should also be specified. If no extension 101 (version) is given, and only one Configuration already exists for that device (target), then the change is applied to that Configuration. Use of Extension 102 (device type) in SetRequest The target in the SetRequest contains the device name, but this is not enough to create a new Configuration if one does not exist - 3 pieces of information are required - the device name, the device type and the version (see diagram above). Extension 102 is used to set the device type . If a Configuration already exists for this device name and version and its device type is different to what's given in extension 101, then an error is returned. Use of Extension 103 (list of devices disconnected) in GetResponse, SetResponse, SubscribeResponse In onos-config the gNMI extension number 103 has been reserved for the list of devices disconnected . The changes and device configuration is still valid and held by onos-config until the device arrives in the network. GetResponse and SetResponse In the GetResponse and GetRequest the 103 extension has an attached message containing a comma separated list of devices, e.g device1,device2,device3 signaling which devices in the request are not yet connected to onos-config. SubscribeResponse In the SubscribeResponse the 103 extension has an attached message containing a single device, e.g device1 signaling that the device in the request is not yet connected to onos-config but a configuration object has been changed. in Subscribe there is one device per response since it's a 1:1 relationship path to update, where the path include one device.","title":"gNMI Extensions"},{"location":"onos-config/docs/gnmi_extensions/#gnmi-extensions-on-the-northbound-interface","text":"gNMI is designed primarily as a device management interface, and augmenting it with the extra functionality to do network wide configuration management across many devices requires some extension. Some functions (e.g. rollback and version management) are far beyond what gNMI is designed for, and have been given their own gRPC definitions as admin and diags .","title":"gNMI extensions on the Northbound interface"},{"location":"onos-config/docs/gnmi_extensions/#use-of-target-in-the-nbi","text":"In gNMI the Path type is comprised of a set of path elements and a target . In the onos-config NBI this target represents the name of the device as it is held in the configuration system. Configurations can be explored through the onos cli like: > onos config get configs Device2-2.0.0 ( Device2 ) 2 .0.0 TestDevice 2019 -05-09T18:00:00+01:00 oOqIgEg82ZvVcF7Q3xEDpWAoPcw = stratum-sim-1-1.0.0 ( stratum-sim-1 ) 1 .0.0 Stratum 2019 -06-05T11:03:17+01:00 hPE88W6rrt5TskCTxtoB1n0hr3I = ... In the example above stratum-sim-1 is the device associated with the configuration stratum-sim-1-1.0.0 . Therefore when using a gNMI client like gnmi_cli (see gnmi.md ) the target can be specified like gnmi_cli -get -address localhost:5150 \\ -proto \"path: <target: 'stratum-sim-1', elem: <name: 'system'> elem:<name:'config'> elem: <name: 'motd-banner'>>\" \\ ... The following rules apply when a prefix is present in the request: The target in the prefix always takes precedence over any others If no target is given in the prefix it is an error","title":"Use of target in the NBI"},{"location":"onos-config/docs/gnmi_extensions/#special-case-to-get-all-device-names","text":"When doing a GetRequest if * is given as a target then the request returns a simple listing of all device names present in the system (with their version). Any path elements are ignored in this special case.","title":"Special case to get all device names"},{"location":"onos-config/docs/gnmi_extensions/#managing-configuration-objects","text":"The diagram shows the internal storage structures of onos-config (in orange). The Configuration object represents the complete configuration for a particular version of a device. Network changes can be applied across multiple Configurations (devices), and have the ability to be rolled back (by the name of the Network Change). 3 different extensions have been chosen in the project to make dealing with Network Changes and Configurations through gNMI possible.","title":"Managing configuration objects"},{"location":"onos-config/docs/gnmi_extensions/#use-of-extension-100-network-change-name-in-setrequest-and-setresponse","text":"In onos-config the gNMI extension number 100 has been reserved for the network change name .","title":"Use of Extension 100 (network change name) in SetRequest and SetResponse"},{"location":"onos-config/docs/gnmi_extensions/#setrequest","text":"In the SetRequest extension 100 can be used to define a name for the Network change. If it is not specified then a name is picked automatically. There is an example of setting this extension when using gnmi_cli in gnmi.md (Northbound Set Request via gNMI)","title":"SetRequest"},{"location":"onos-config/docs/gnmi_extensions/#setresponse","text":"In the SetResponse the name of the Network Change will always be given in extension 100 (either the given name or the generated one). There is an example of the return of this extension through gnmi_cli in gnmi.md (Northbound Set Request via gNMI)","title":"SetResponse"},{"location":"onos-config/docs/gnmi_extensions/#use-of-extension-101-device-version-in-setrequest","text":"Extension 101 is used to set the Model version for a Configuration (as part of a Network Change). There may be multiple different configurations for a device based on version number. This extension allows the correct version of the configuration to be chosen. If a version is given where no existing Configuration exists, an error is returned explaining that device type (extension 102 - see below) should also be specified. If no extension 101 (version) is given, and only one Configuration already exists for that device (target), then the change is applied to that Configuration.","title":"Use of Extension 101 (device version) in SetRequest"},{"location":"onos-config/docs/gnmi_extensions/#use-of-extension-102-device-type-in-setrequest","text":"The target in the SetRequest contains the device name, but this is not enough to create a new Configuration if one does not exist - 3 pieces of information are required - the device name, the device type and the version (see diagram above). Extension 102 is used to set the device type . If a Configuration already exists for this device name and version and its device type is different to what's given in extension 101, then an error is returned.","title":"Use of Extension 102 (device type) in SetRequest"},{"location":"onos-config/docs/gnmi_extensions/#use-of-extension-103-list-of-devices-disconnected-in-getresponse-setresponse-subscriberesponse","text":"In onos-config the gNMI extension number 103 has been reserved for the list of devices disconnected . The changes and device configuration is still valid and held by onos-config until the device arrives in the network.","title":"Use of Extension 103 (list of devices disconnected) in GetResponse, SetResponse, SubscribeResponse"},{"location":"onos-config/docs/gnmi_extensions/#getresponse-and-setresponse","text":"In the GetResponse and GetRequest the 103 extension has an attached message containing a comma separated list of devices, e.g device1,device2,device3 signaling which devices in the request are not yet connected to onos-config.","title":"GetResponse and SetResponse"},{"location":"onos-config/docs/gnmi_extensions/#subscriberesponse","text":"In the SubscribeResponse the 103 extension has an attached message containing a single device, e.g device1 signaling that the device in the request is not yet connected to onos-config but a configuration object has been changed. in Subscribe there is one device per response since it's a 1:1 relationship path to update, where the path include one device.","title":"SubscribeResponse"},{"location":"onos-config/docs/ingress/","text":"Ingress for onos-config NOTE This file has to be revisited, please have no expectation of correctness. In the onos-config helm chart you can optionally enable ingress by overriding ingress.enabled . Note that you must have an ingress controller installed/enabled as described above: > helm install \\ -n onos-config \\ --set ingress.enabled = true \\ deployments/helm/onos-config By default, the ingress controller uses the self-signed certificates that ship with the chart to provide end-to-end routing, load balancing, and encryption, making the onos-config services accessible from outside the k8s cluster. The default certificates expect the service to be reached through the config.onosproject.org domain. Thus, to connect to the service through the ingress, you must configure /etc/hosts to point to the load balancer's IP: 192 .168.99.102 config.onosproject.org The IP address of the ingress may differ depending on the environment. In clustered environments, the ingress IP is typically read from the ingress resource: > kubectl get ingress NAME HOSTS ADDRESS PORTS AGE onos-config-onos-config-ingress config.onosproject.org 10 .0.2.15 80 , 443 76m However, since Minikube runs in a VM, the ingress must be reached through the Minikube VM's IP which can be found via the minikube ip command: LBIP = $( minikube ip ) In clustered environments, the ingress IP can be retrieved from the ingress metadata: > kubectl get ingress NAME HOSTS ADDRESS PORTS AGE onos-config-onos-config-ingress config.onosproject.org 10 .0.2.15 80 , 443 76m Once you've located the ingress IP address and configured /etc/hosts , you can connect to the onos-config service via the ingress load balancer: > onos config --address = config.onosproject.org:443 get changes","title":"Ingress for onos-config"},{"location":"onos-config/docs/ingress/#ingress-for-onos-config","text":"NOTE This file has to be revisited, please have no expectation of correctness. In the onos-config helm chart you can optionally enable ingress by overriding ingress.enabled . Note that you must have an ingress controller installed/enabled as described above: > helm install \\ -n onos-config \\ --set ingress.enabled = true \\ deployments/helm/onos-config By default, the ingress controller uses the self-signed certificates that ship with the chart to provide end-to-end routing, load balancing, and encryption, making the onos-config services accessible from outside the k8s cluster. The default certificates expect the service to be reached through the config.onosproject.org domain. Thus, to connect to the service through the ingress, you must configure /etc/hosts to point to the load balancer's IP: 192 .168.99.102 config.onosproject.org The IP address of the ingress may differ depending on the environment. In clustered environments, the ingress IP is typically read from the ingress resource: > kubectl get ingress NAME HOSTS ADDRESS PORTS AGE onos-config-onos-config-ingress config.onosproject.org 10 .0.2.15 80 , 443 76m However, since Minikube runs in a VM, the ingress must be reached through the Minikube VM's IP which can be found via the minikube ip command: LBIP = $( minikube ip ) In clustered environments, the ingress IP can be retrieved from the ingress metadata: > kubectl get ingress NAME HOSTS ADDRESS PORTS AGE onos-config-onos-config-ingress config.onosproject.org 10 .0.2.15 80 , 443 76m Once you've located the ingress IP address and configured /etc/hosts , you can connect to the onos-config service via the ingress load balancer: > onos config --address = config.onosproject.org:443 get changes","title":"Ingress for onos-config"},{"location":"onos-config/docs/license_goland/","text":"GoLand Copyright Profile Setup GoLand IDE can be configured to automatically include the required Apache 2.0 license text in Go source files. Steps to do this are shown below: Open Preferences window Select Editor->Copyright->Copyright Profiles Click the plus icon Name the new profie onos Cut and paste the text from here into the copyright field Click Apply Open Formatting then Go Click check box for Use Custom Formatting Options Click checkbox Use Line Comment Click Apply Once the new copyright profile is created, it needs to be applied to the project: Select Editor->Copyright Choose onos in the Default Project Copyright drop-down list Click OK","title":"GoLand Copyright Profile Setup"},{"location":"onos-config/docs/license_goland/#goland-copyright-profile-setup","text":"GoLand IDE can be configured to automatically include the required Apache 2.0 license text in Go source files. Steps to do this are shown below: Open Preferences window Select Editor->Copyright->Copyright Profiles Click the plus icon Name the new profie onos Cut and paste the text from here into the copyright field Click Apply Open Formatting then Go Click check box for Use Custom Formatting Options Click checkbox Use Line Comment Click Apply Once the new copyright profile is created, it needs to be applied to the project: Select Editor->Copyright Choose onos in the Default Project Copyright drop-down list Click OK","title":"GoLand Copyright Profile Setup"},{"location":"onos-config/docs/modelplugin/","text":"Extending onos-config with Model Plugins onos-config is an extensible configuration management system, that allows the configuration of many different types and versions of devices to be managed concurrently. Information models in YANG format (RFC 6020) can be used to accurately define the configuration and state objects and attributes of a device. In practice a device's object model usually comprises of a number of YANG files including augments and deviations, and must be considered as a combined unit. In onos-config a set of these combined YANG files defining a particular version of a device type is known as a model . Over its lifecycle onos-config will have to deal with many different models as its scope is expanded and as devices go through new release cycles. To allow this, models are loadable dynamically as plugins in the form of Linux or Mac shared object libraries (\\*.so) using the YGOT library and are known as Model Plugins . The diagram shows the connection between the Model Plugin and the configuration store - linked by Device Type and Version. Effectively the primary key of the Model Registry is the Model Name and Version, whereas the primary key of the Configuration is the Device Name and Version. Role of the Model Plugin The Model Plugin enables the following functionality in onos-config : Ensures that illegal values are not saved in to the configuration (this covers wrong data type, data values beyond range or not matching a pattern, lists that are not within their cardinality limits) Ensuring that read only values are not allowed to be set (changed). Checking the validity of stores on startup Enabling the Operational State cache within onos-config Enabling the retrieval of attributes by type - CONFIG or OPERATIONAL Enabling clients to access the model metadata through the Admin NBI Enabling JSON Payloads in gNMI SetRequests to be interpreted Structure of a Model Plugin A Model Plugin is mainly generated by the generator command from the YGOT project, and a wrapper modelmain.go implementing the ModelPlugin interface. They are compiled together with the go build command using the -buildmode=plugin option. Many examples of Model Plugins are in the config-models repo, and an example script ModelGenerator.sh is available for creating new plugins. ModelPlugin Interface The model plugin must implement the ModelPlugin interface. This will allow it to be entered in to the Model Registry. type ModelPlugin interface { ModelData () ( string , string , [] * gnmi . ModelData , string ) UnmarshalConfigValues ( jsonTree [] byte ) ( * ygot . ValidatedGoStruct , error ) Validate ( * ygot . ValidatedGoStruct , ... ygot . ValidationOption ) error Schema () ( map [ string ] * yang . Entry , error ) } Create your own Model Plugin using script Checkout the repo config-models Change directory in to config-models/modelplugins Copy anyone of the .env files to a new file Edit the variables at the top of the file to suit your plugin (see modelmain.go Definitions below for specifics), taking special care that the entries in MODELDATA are in alphabetical order (YANGDATA is derived from the MODELDATA but can be overridden if required) Make sure the required Yang files are present in the ./yang folder and named properly Run the script like > ./ModelGenerator.sh <filename>.env Once the files are created: Change directory back to config-models Edit the Makefile to add a build and a docker target for your model plugin Edit the file config-models/cmd/dummy/dummy.go and add a dependency to your model plugin Compile the plugin with (replacing the name 'testdevice' and 'version' as appropriate) make build/_output/testdevice.so.1.0.0 Make the docker image (replacing the name 'testdevice' and 'version' as appropriate) make config-plugin-docker-testdevice-1.0.0 Follow the steps in Loading the Model Plugin below for how to load it. YANG files The YANG files to be used with generator.go should be collected together in a folder and named in the style: \\<modulename>@<latestrevision>.yang Note The Yang files provided are required not to contain overlapping or clashing namespaces at the same path level. This requirement is necessary during the model compilation in YGOT because this tool offers no support for namespaces in the form of /namespace:path/path2 , e.g. /openconfig-system:system/clock . YGOT compilation of a model containing /openconfig-system:system/clock will result in the path being /system/clock Running the generator command in the form: > go run $GOPATH /src/github.com/openconfig/ygot/generator/generator.go \\ -path yang -output_file = $TYPEVERSION / $TYPEVERSIONPKG /generated.go -package_name = $TYPEVERSIONPKG \\ -generate_fakeroot $YANGLIST will check all nested dependencies are present, and that the output is generated as a single file: generated.go . Where $YANGLIST is a space separated list of YANG file names. See ModelGenerator.sh for an example To visualize and further validate the collection of YANG files, the pyang tool can be used like: > pyang -f tree $YANGLIST Once the generator has run there is no need to persist the YANG files - the generated.go file contains all the information in an object model. modelmain.go definitions Examples of these definitions are given in the *.env files in the modelplugins folder. modeltype This should be a name that defines the type of device, but should not include version. This name will be used later in the Configuration of the device. It should be between 4 and 40 chars and only include alphanumeric characters, dash, underscore and colon. modelversion This should be the version number of the device in Semantic Versioning form. Only numeric characters and '.' character are allowed. modeldata The primary YANG files of the device should be listed in the ModelData section of the modelmain.go file. These are the YANG files that define the top level containers and lists , and files that contain augments and deviations on these. During compilation other YANG files may get pulled in because they define reusable types (but should not be listed in model data). Each entry in modeldata should be in the format of: name,organization,version,altversion, ; \\ where: * name - the name of the module inside the YANG file and also the start of the name of the YANG file before @ * organization - the value from the organization field of the YANG file * version - in the name of the YANG file, which should correspond to the latest revision inside the YANG file - usually in the format of YYYY-MM-DD * altversion - an optional alternate version that will be listed as the version in the model plugin. There should be no duplicate entries (of name) in the list and the list should be ordered alphabetically. Also there should be no ';' delimiter on the last item. See examples. The modelmain.go file will have a MODELDATA section which is JSON formed from these variables. Loading the Model Plugin The Model Plugin can be loaded at the start up of onos-config by adding it to the plugins: section of the values.yaml file of the onos-config Helm Chart This ensures that the model plugin is: loaded as a \"sidecar\" container in the onos-config K8s pod AND that the model plugin is given as a -modelPlugin argument to the onos-config command See the Troubleshooting section below if onos-config fails to start because of a model plugin. By default 4 plugins are loaded at startup: -modelPlugin = /usr/local/lib/shared/testdevice.so.1.0.0 \\ -modelPlugin = /usr/local/lib/shared/testdevice.so.2.0.0 \\ -modelPlugin = /usr/local/lib/shared/devicesim.so.1.0.0 \\ -modelPlugin = /usr/local/lib/shared/stratum.so.1.0.0 To see a list of loaded plugins use the onos-cli command: > onos config get plugins which gives an output like: > onos config get plugins TestDevice: 1 .0.0 from testdevice.so.1.0.0 containing: YANGS: test1 2018 -02-20 Open Networking Foundation TestDevice: 2 .0.0 from testdevice.so.2.0.0 containing: YANGS: test1 2019 -06-10 Open Networking Foundation Devicesim: 1 .0.0 from devicesim.so.1.0.0 containing: YANGS: openconfig-interfaces 2017 -07-14 OpenConfig working group openconfig-openflow 2017 -06-01 OpenConfig working group openconfig-platform 2016 -12-22 OpenConfig working group openconfig-system 2017 -07-06 OpenConfig working group Stratum: 1 .0.0 from stratum.so.1.0.0 containing: YANGS: openconfig-interfaces 2 .4.1 OpenConfig working group openconfig-if-ip 3 .0.0 OpenConfig working group openconfig-lacp 1 .1.1 OpenConfig working group openconfig-platform 0 .12.2 OpenConfig working group openconfig-platform-linecard 0 .1.1 OpenConfig working group openconfig-platform-port 0 .3.2 OpenConfig working group openconfig-platform-transceiver 0 .7.0 OpenConfig working group openconfig-vlan 3 .2.0 OpenConfig working group openconfig-system 0 .7.0 OpenConfig working group openconfig-hercules-platform-linecard 0 .2.0 OpenConfig working group openconfig-hercules-qos 0 .1.0 OpenConfig working group openconfig-hercules-platform 0 .2.0 OpenConfig working group openconfig-hercules-platform-chassis 0 .2.0 OpenConfig working group openconfig-hercules-platform-port 0 .2.0 OpenConfig working group openconfig-hercules 0 .2.0 OpenConfig working group openconfig-hercules-interfaces 0 .2.0 OpenConfig working group openconfig-hercules-platform-node 0 .2.0 OpenConfig working group To see a list of Read-Only and Read-Write paths use the command with the verbose switch: > onos config get plugins -v In a distributed installation the ModelPlugin will have to be loaded on all running instances of onos-config. Model Plugins and gNMI Capabilities Capabilities on gNMI Northbound interface The CapabilitiesResponse on the gNMI northound interface is generated dynamically from the modeldata section of all of the loaded Model Plugins. Capabilities comparison on Southbound gNMI interface At runtime when devices are connected to onos-config the response to the Capabilities request are compared with the modeldata for their corresponding ModelPlugin - if there is not an exact match a warning is displayed. OpenConfig Models Some devices that support OpenConfig Models report their capabilities using an OpenConfig versioning scheme e.g. 0.5.0, rather than the YANG revision date in the format 2017-07-06. If the device can correct its capabilities to give the revision then it should to be more consistent with non OpenConfig YANG models. Accessing OpenConfig model of a specific revision requires a number of steps in Github . For instance if a device reports it used openconfig-interfacess.yang 2.0.0 , then to get this file do: Browse to openconfig-interfaces.yang Observe in the list of revision items in the YANG file that the reference 2.0.0 corresponds to a release date of 2017-07-14 Click in the History button In the History page for this file, see that the next commit after this date was on Aug 9, 2017 Click on the related commit message In the list of files modified in that commit click the ... next to the file openconfig-interfacess.yang and choose View File In the page that displays the historical version of the file, click the Raw button In the resulting raw display of the YANG file verify that the latest revision is 2017-07-14 Save the file locally as openconfig-interfaces@2017-07-14.yang All the files in the yang folder were downloaded in this way. They are not strictly needed once generated.go has been created, but are kept here for convenience, saving to have to run the procedure above if a change was needed. If the generator program reports that a dependency was required e.g. openconfig-inet-types.yang then the version of this file with a date equal to or before 2017-07-14 should be downloaded - it is openconfig-inet-types@2017-07-14.yang Readonly paths in OpenConfig models When an item in an Openconfig YANG file has \"config false\" it is effectively a read-only attribute. Usually with OpenConfig read-only objects are interspersed throughout the YANG model. To see a list of Read Only paths use the command: > onos config get plugins -v When the Model Plugin is loaded, setting of an attribute like state/address should give an appropriate error > gnmi_cli -address onos-config:5150 -set \\ -proto \"update: <path: <target: 'devicesim-1', elem: <name: 'system'> elem: <name: 'openflow'> elem: <name: 'controllers'> elem: <name: 'controller' key: <key: 'name' value: 'main'>> elem: <name: 'connections'> elem: <name: 'connection' key: <key: 'aux-id' value: '0'>> elem: <name: 'state'> elem: <name: 'address'>> val: <string_val: '192.0.2.11'>>\" \\ -timeout 5s -en PROTO -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt -client_key /etc/ssl/certs/client1.key -ca_crt /etc/ssl/certs/onfca.crt gives the error: rpc error: code = InvalidArgument desc = update contains a change to a read only path /system/openflow/controllers/controller [ name = main ] /connections/connection [ aux-id = 0 ] /state/address. Rejected Troubleshooting If the model plugin does not have exactly the same set of dependencies when compiled it will not be loaded correctly by onos-config at run time. It might be seen as the onos-config pod entering an Error state e.g. kubectl -n micro-onos get pods NAME READY STATUS RESTARTS AGE onos-cli-68bbf4f674-fwkqc 1 /1 Running 5 3d22h onos-config-688b5697c8-zfq55 4 /5 Error 0 64m onos-config-raft-1-0 1 /1 Running 0 64m onos-topo-868cc6cf8c-bbrqh 1 /1 Running 0 3h17m This will give a fatal error such as plugin was built with a different version of package ... , which can be seen by getting the log from the failed container: > kubectl -n micro-onos logs $( kubectl -n micro-onos get pods -l type = config -o name ) onos-config { \"level\" : \"info\" , \"ts\" :1583143084.8725095, \"logger\" : \"main\" , \"caller\" : \"onos-config/onos-config.go:95\" , \"msg\" : \"Starting onos-config\" } { \"level\" : \"info\" , \"ts\" :1583143084.9876108, \"logger\" : \"main\" , \"caller\" : \"onos-config/onos-config.go:136\" , \"msg\" : \"Topology service connected with endpoint onos-topo:5150\" } { \"level\" : \"info\" , \"ts\" :1583143084.9876873, \"logger\" : \"main\" , \"caller\" : \"onos-config/onos-config.go:138\" , \"msg\" : \"Network Configuration store connected\" } { \"level\" : \"info\" , \"ts\" :1583143085.004323, \"logger\" : \"main\" , \"caller\" : \"onos-config/onos-config.go:149\" , \"msg\" : \"Topology service connected with endpoint onos-topo:5150\" } { \"level\" : \"info\" , \"ts\" :1583143085.0043786, \"logger\" : \"manager\" , \"caller\" : \"manager/manager.go:83\" , \"msg\" : \"Creating Manager\" } { \"level\" : \"info\" , \"ts\" :1583143085.0044136, \"logger\" : \"main\" , \"caller\" : \"onos-config/onos-config.go:154\" , \"msg\" : \"Manager started\" } { \"level\" : \"info\" , \"ts\" :1583143085.004438, \"logger\" : \"modelregistry\" , \"caller\" : \"modelregistry/modelregistry.go:161\" , \"msg\" : \"Loading module /usr/local/lib/shared/devicesim.so.1.0.0\" } { \"level\" : \"info\" , \"ts\" :1583143085.0532916, \"logger\" : \"modelregistry\" , \"caller\" : \"modelregistry/modelregistry.go:226\" , \"msg\" : \"Model Devicesim 1.0.0 loaded. 37 read only paths. 113 read write paths\" } { \"level\" : \"info\" , \"ts\" :1583143085.0533392, \"logger\" : \"modelregistry\" , \"caller\" : \"modelregistry/modelregistry.go:161\" , \"msg\" : \"Loading module /usr/local/lib/shared/stratum.so.1.0.0\" } { \"level\" : \"info\" , \"ts\" :1583143085.2057264, \"logger\" : \"modelregistry\" , \"caller\" : \"modelregistry/modelregistry.go:218\" , \"msg\" : \"Model Stratum 1.0.0 loaded. HARDCODED to 1 readonly path.1 read only paths. 9 read write paths\" } { \"level\" : \"info\" , \"ts\" :1583143085.205782, \"logger\" : \"modelregistry\" , \"caller\" : \"modelregistry/modelregistry.go:161\" , \"msg\" : \"Loading module /usr/local/lib/shared/testdevice.so.1.0.0\" } { \"level\" : \"warn\" , \"ts\" :1583143085.2160602, \"logger\" : \"modelregistry\" , \"caller\" : \"modelregistry/modelregistry.go:164\" , \"msg\" : \"Unable to load module /usr/local/lib/shared/testdevice.so.1.0.0 plugin.Open(\\\"/usr/local/lib/shared/testdevice.so.1.0.0\\\"): plugin was built with a different version of package golang.org/x/sys/unix\" } { \"level\" : \"fatal\" , \"ts\" :1583143085.2161112, \"logger\" : \"main\" , \"caller\" : \"onos-config/onos-config.go:171\" , \"msg\" : \"Unable to start onos-config plugin.Open(\\\"/usr/local/lib/shared/testdevice.so.1.0.0\\\"): plugin was built with a different version of package golang.org/x/sys/unix\" , \"stacktrace\" : \"main.main\\n\\t/go/src/github.com/onosproject/onos-config/cmd/onos-config/onos-config.go:171\\nruntime.main\\n\\t/usr/local/go/src/runtime/proc.go:203\" } For the plugin to be loadable: the dependency must be listed in the go.mod at the root of config-models AND have the same version as listed in the go.mod at the root of onos-config You should not add require entries to the go.mod of config-models directly, but instead add entries to the import section of cmd/dummy/dummy.go . When the make build target is run, go will add entries to go.mod based on the imports it finds in imports like this. The versions or require entries in go.mod can be edited, to ensure that they match those of the go.mod at the root of onos-config .","title":"Extending Configuration Subsystem With Model Plugins"},{"location":"onos-config/docs/modelplugin/#extending-onos-config-with-model-plugins","text":"onos-config is an extensible configuration management system, that allows the configuration of many different types and versions of devices to be managed concurrently. Information models in YANG format (RFC 6020) can be used to accurately define the configuration and state objects and attributes of a device. In practice a device's object model usually comprises of a number of YANG files including augments and deviations, and must be considered as a combined unit. In onos-config a set of these combined YANG files defining a particular version of a device type is known as a model . Over its lifecycle onos-config will have to deal with many different models as its scope is expanded and as devices go through new release cycles. To allow this, models are loadable dynamically as plugins in the form of Linux or Mac shared object libraries (\\*.so) using the YGOT library and are known as Model Plugins . The diagram shows the connection between the Model Plugin and the configuration store - linked by Device Type and Version. Effectively the primary key of the Model Registry is the Model Name and Version, whereas the primary key of the Configuration is the Device Name and Version.","title":"Extending onos-config with Model Plugins"},{"location":"onos-config/docs/modelplugin/#role-of-the-model-plugin","text":"The Model Plugin enables the following functionality in onos-config : Ensures that illegal values are not saved in to the configuration (this covers wrong data type, data values beyond range or not matching a pattern, lists that are not within their cardinality limits) Ensuring that read only values are not allowed to be set (changed). Checking the validity of stores on startup Enabling the Operational State cache within onos-config Enabling the retrieval of attributes by type - CONFIG or OPERATIONAL Enabling clients to access the model metadata through the Admin NBI Enabling JSON Payloads in gNMI SetRequests to be interpreted","title":"Role of the Model Plugin"},{"location":"onos-config/docs/modelplugin/#structure-of-a-model-plugin","text":"A Model Plugin is mainly generated by the generator command from the YGOT project, and a wrapper modelmain.go implementing the ModelPlugin interface. They are compiled together with the go build command using the -buildmode=plugin option. Many examples of Model Plugins are in the config-models repo, and an example script ModelGenerator.sh is available for creating new plugins.","title":"Structure of a Model Plugin"},{"location":"onos-config/docs/modelplugin/#modelplugin-interface","text":"The model plugin must implement the ModelPlugin interface. This will allow it to be entered in to the Model Registry. type ModelPlugin interface { ModelData () ( string , string , [] * gnmi . ModelData , string ) UnmarshalConfigValues ( jsonTree [] byte ) ( * ygot . ValidatedGoStruct , error ) Validate ( * ygot . ValidatedGoStruct , ... ygot . ValidationOption ) error Schema () ( map [ string ] * yang . Entry , error ) }","title":"ModelPlugin Interface"},{"location":"onos-config/docs/modelplugin/#create-your-own-model-plugin-using-script","text":"Checkout the repo config-models Change directory in to config-models/modelplugins Copy anyone of the .env files to a new file Edit the variables at the top of the file to suit your plugin (see modelmain.go Definitions below for specifics), taking special care that the entries in MODELDATA are in alphabetical order (YANGDATA is derived from the MODELDATA but can be overridden if required) Make sure the required Yang files are present in the ./yang folder and named properly Run the script like > ./ModelGenerator.sh <filename>.env Once the files are created: Change directory back to config-models Edit the Makefile to add a build and a docker target for your model plugin Edit the file config-models/cmd/dummy/dummy.go and add a dependency to your model plugin Compile the plugin with (replacing the name 'testdevice' and 'version' as appropriate) make build/_output/testdevice.so.1.0.0 Make the docker image (replacing the name 'testdevice' and 'version' as appropriate) make config-plugin-docker-testdevice-1.0.0 Follow the steps in Loading the Model Plugin below for how to load it.","title":"Create your own Model Plugin using script"},{"location":"onos-config/docs/modelplugin/#yang-files","text":"The YANG files to be used with generator.go should be collected together in a folder and named in the style: \\<modulename>@<latestrevision>.yang Note The Yang files provided are required not to contain overlapping or clashing namespaces at the same path level. This requirement is necessary during the model compilation in YGOT because this tool offers no support for namespaces in the form of /namespace:path/path2 , e.g. /openconfig-system:system/clock . YGOT compilation of a model containing /openconfig-system:system/clock will result in the path being /system/clock Running the generator command in the form: > go run $GOPATH /src/github.com/openconfig/ygot/generator/generator.go \\ -path yang -output_file = $TYPEVERSION / $TYPEVERSIONPKG /generated.go -package_name = $TYPEVERSIONPKG \\ -generate_fakeroot $YANGLIST will check all nested dependencies are present, and that the output is generated as a single file: generated.go . Where $YANGLIST is a space separated list of YANG file names. See ModelGenerator.sh for an example To visualize and further validate the collection of YANG files, the pyang tool can be used like: > pyang -f tree $YANGLIST Once the generator has run there is no need to persist the YANG files - the generated.go file contains all the information in an object model.","title":"YANG files"},{"location":"onos-config/docs/modelplugin/#modelmaingo-definitions","text":"Examples of these definitions are given in the *.env files in the modelplugins folder.","title":"modelmain.go definitions"},{"location":"onos-config/docs/modelplugin/#modeltype","text":"This should be a name that defines the type of device, but should not include version. This name will be used later in the Configuration of the device. It should be between 4 and 40 chars and only include alphanumeric characters, dash, underscore and colon.","title":"modeltype"},{"location":"onos-config/docs/modelplugin/#modelversion","text":"This should be the version number of the device in Semantic Versioning form. Only numeric characters and '.' character are allowed.","title":"modelversion"},{"location":"onos-config/docs/modelplugin/#modeldata","text":"The primary YANG files of the device should be listed in the ModelData section of the modelmain.go file. These are the YANG files that define the top level containers and lists , and files that contain augments and deviations on these. During compilation other YANG files may get pulled in because they define reusable types (but should not be listed in model data). Each entry in modeldata should be in the format of: name,organization,version,altversion, ; \\ where: * name - the name of the module inside the YANG file and also the start of the name of the YANG file before @ * organization - the value from the organization field of the YANG file * version - in the name of the YANG file, which should correspond to the latest revision inside the YANG file - usually in the format of YYYY-MM-DD * altversion - an optional alternate version that will be listed as the version in the model plugin. There should be no duplicate entries (of name) in the list and the list should be ordered alphabetically. Also there should be no ';' delimiter on the last item. See examples. The modelmain.go file will have a MODELDATA section which is JSON formed from these variables.","title":"modeldata"},{"location":"onos-config/docs/modelplugin/#loading-the-model-plugin","text":"The Model Plugin can be loaded at the start up of onos-config by adding it to the plugins: section of the values.yaml file of the onos-config Helm Chart This ensures that the model plugin is: loaded as a \"sidecar\" container in the onos-config K8s pod AND that the model plugin is given as a -modelPlugin argument to the onos-config command See the Troubleshooting section below if onos-config fails to start because of a model plugin. By default 4 plugins are loaded at startup: -modelPlugin = /usr/local/lib/shared/testdevice.so.1.0.0 \\ -modelPlugin = /usr/local/lib/shared/testdevice.so.2.0.0 \\ -modelPlugin = /usr/local/lib/shared/devicesim.so.1.0.0 \\ -modelPlugin = /usr/local/lib/shared/stratum.so.1.0.0 To see a list of loaded plugins use the onos-cli command: > onos config get plugins which gives an output like: > onos config get plugins TestDevice: 1 .0.0 from testdevice.so.1.0.0 containing: YANGS: test1 2018 -02-20 Open Networking Foundation TestDevice: 2 .0.0 from testdevice.so.2.0.0 containing: YANGS: test1 2019 -06-10 Open Networking Foundation Devicesim: 1 .0.0 from devicesim.so.1.0.0 containing: YANGS: openconfig-interfaces 2017 -07-14 OpenConfig working group openconfig-openflow 2017 -06-01 OpenConfig working group openconfig-platform 2016 -12-22 OpenConfig working group openconfig-system 2017 -07-06 OpenConfig working group Stratum: 1 .0.0 from stratum.so.1.0.0 containing: YANGS: openconfig-interfaces 2 .4.1 OpenConfig working group openconfig-if-ip 3 .0.0 OpenConfig working group openconfig-lacp 1 .1.1 OpenConfig working group openconfig-platform 0 .12.2 OpenConfig working group openconfig-platform-linecard 0 .1.1 OpenConfig working group openconfig-platform-port 0 .3.2 OpenConfig working group openconfig-platform-transceiver 0 .7.0 OpenConfig working group openconfig-vlan 3 .2.0 OpenConfig working group openconfig-system 0 .7.0 OpenConfig working group openconfig-hercules-platform-linecard 0 .2.0 OpenConfig working group openconfig-hercules-qos 0 .1.0 OpenConfig working group openconfig-hercules-platform 0 .2.0 OpenConfig working group openconfig-hercules-platform-chassis 0 .2.0 OpenConfig working group openconfig-hercules-platform-port 0 .2.0 OpenConfig working group openconfig-hercules 0 .2.0 OpenConfig working group openconfig-hercules-interfaces 0 .2.0 OpenConfig working group openconfig-hercules-platform-node 0 .2.0 OpenConfig working group To see a list of Read-Only and Read-Write paths use the command with the verbose switch: > onos config get plugins -v In a distributed installation the ModelPlugin will have to be loaded on all running instances of onos-config.","title":"Loading the Model Plugin"},{"location":"onos-config/docs/modelplugin/#model-plugins-and-gnmi-capabilities","text":"","title":"Model Plugins and gNMI Capabilities"},{"location":"onos-config/docs/modelplugin/#capabilities-on-gnmi-northbound-interface","text":"The CapabilitiesResponse on the gNMI northound interface is generated dynamically from the modeldata section of all of the loaded Model Plugins.","title":"Capabilities on gNMI Northbound interface"},{"location":"onos-config/docs/modelplugin/#capabilities-comparison-on-southbound-gnmi-interface","text":"At runtime when devices are connected to onos-config the response to the Capabilities request are compared with the modeldata for their corresponding ModelPlugin - if there is not an exact match a warning is displayed.","title":"Capabilities comparison on Southbound gNMI interface"},{"location":"onos-config/docs/modelplugin/#openconfig-models","text":"Some devices that support OpenConfig Models report their capabilities using an OpenConfig versioning scheme e.g. 0.5.0, rather than the YANG revision date in the format 2017-07-06. If the device can correct its capabilities to give the revision then it should to be more consistent with non OpenConfig YANG models. Accessing OpenConfig model of a specific revision requires a number of steps in Github . For instance if a device reports it used openconfig-interfacess.yang 2.0.0 , then to get this file do: Browse to openconfig-interfaces.yang Observe in the list of revision items in the YANG file that the reference 2.0.0 corresponds to a release date of 2017-07-14 Click in the History button In the History page for this file, see that the next commit after this date was on Aug 9, 2017 Click on the related commit message In the list of files modified in that commit click the ... next to the file openconfig-interfacess.yang and choose View File In the page that displays the historical version of the file, click the Raw button In the resulting raw display of the YANG file verify that the latest revision is 2017-07-14 Save the file locally as openconfig-interfaces@2017-07-14.yang All the files in the yang folder were downloaded in this way. They are not strictly needed once generated.go has been created, but are kept here for convenience, saving to have to run the procedure above if a change was needed. If the generator program reports that a dependency was required e.g. openconfig-inet-types.yang then the version of this file with a date equal to or before 2017-07-14 should be downloaded - it is openconfig-inet-types@2017-07-14.yang","title":"OpenConfig Models"},{"location":"onos-config/docs/modelplugin/#readonly-paths-in-openconfig-models","text":"When an item in an Openconfig YANG file has \"config false\" it is effectively a read-only attribute. Usually with OpenConfig read-only objects are interspersed throughout the YANG model. To see a list of Read Only paths use the command: > onos config get plugins -v When the Model Plugin is loaded, setting of an attribute like state/address should give an appropriate error > gnmi_cli -address onos-config:5150 -set \\ -proto \"update: <path: <target: 'devicesim-1', elem: <name: 'system'> elem: <name: 'openflow'> elem: <name: 'controllers'> elem: <name: 'controller' key: <key: 'name' value: 'main'>> elem: <name: 'connections'> elem: <name: 'connection' key: <key: 'aux-id' value: '0'>> elem: <name: 'state'> elem: <name: 'address'>> val: <string_val: '192.0.2.11'>>\" \\ -timeout 5s -en PROTO -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt -client_key /etc/ssl/certs/client1.key -ca_crt /etc/ssl/certs/onfca.crt gives the error: rpc error: code = InvalidArgument desc = update contains a change to a read only path /system/openflow/controllers/controller [ name = main ] /connections/connection [ aux-id = 0 ] /state/address. Rejected","title":"Readonly paths in OpenConfig models"},{"location":"onos-config/docs/modelplugin/#troubleshooting","text":"If the model plugin does not have exactly the same set of dependencies when compiled it will not be loaded correctly by onos-config at run time. It might be seen as the onos-config pod entering an Error state e.g. kubectl -n micro-onos get pods NAME READY STATUS RESTARTS AGE onos-cli-68bbf4f674-fwkqc 1 /1 Running 5 3d22h onos-config-688b5697c8-zfq55 4 /5 Error 0 64m onos-config-raft-1-0 1 /1 Running 0 64m onos-topo-868cc6cf8c-bbrqh 1 /1 Running 0 3h17m This will give a fatal error such as plugin was built with a different version of package ... , which can be seen by getting the log from the failed container: > kubectl -n micro-onos logs $( kubectl -n micro-onos get pods -l type = config -o name ) onos-config { \"level\" : \"info\" , \"ts\" :1583143084.8725095, \"logger\" : \"main\" , \"caller\" : \"onos-config/onos-config.go:95\" , \"msg\" : \"Starting onos-config\" } { \"level\" : \"info\" , \"ts\" :1583143084.9876108, \"logger\" : \"main\" , \"caller\" : \"onos-config/onos-config.go:136\" , \"msg\" : \"Topology service connected with endpoint onos-topo:5150\" } { \"level\" : \"info\" , \"ts\" :1583143084.9876873, \"logger\" : \"main\" , \"caller\" : \"onos-config/onos-config.go:138\" , \"msg\" : \"Network Configuration store connected\" } { \"level\" : \"info\" , \"ts\" :1583143085.004323, \"logger\" : \"main\" , \"caller\" : \"onos-config/onos-config.go:149\" , \"msg\" : \"Topology service connected with endpoint onos-topo:5150\" } { \"level\" : \"info\" , \"ts\" :1583143085.0043786, \"logger\" : \"manager\" , \"caller\" : \"manager/manager.go:83\" , \"msg\" : \"Creating Manager\" } { \"level\" : \"info\" , \"ts\" :1583143085.0044136, \"logger\" : \"main\" , \"caller\" : \"onos-config/onos-config.go:154\" , \"msg\" : \"Manager started\" } { \"level\" : \"info\" , \"ts\" :1583143085.004438, \"logger\" : \"modelregistry\" , \"caller\" : \"modelregistry/modelregistry.go:161\" , \"msg\" : \"Loading module /usr/local/lib/shared/devicesim.so.1.0.0\" } { \"level\" : \"info\" , \"ts\" :1583143085.0532916, \"logger\" : \"modelregistry\" , \"caller\" : \"modelregistry/modelregistry.go:226\" , \"msg\" : \"Model Devicesim 1.0.0 loaded. 37 read only paths. 113 read write paths\" } { \"level\" : \"info\" , \"ts\" :1583143085.0533392, \"logger\" : \"modelregistry\" , \"caller\" : \"modelregistry/modelregistry.go:161\" , \"msg\" : \"Loading module /usr/local/lib/shared/stratum.so.1.0.0\" } { \"level\" : \"info\" , \"ts\" :1583143085.2057264, \"logger\" : \"modelregistry\" , \"caller\" : \"modelregistry/modelregistry.go:218\" , \"msg\" : \"Model Stratum 1.0.0 loaded. HARDCODED to 1 readonly path.1 read only paths. 9 read write paths\" } { \"level\" : \"info\" , \"ts\" :1583143085.205782, \"logger\" : \"modelregistry\" , \"caller\" : \"modelregistry/modelregistry.go:161\" , \"msg\" : \"Loading module /usr/local/lib/shared/testdevice.so.1.0.0\" } { \"level\" : \"warn\" , \"ts\" :1583143085.2160602, \"logger\" : \"modelregistry\" , \"caller\" : \"modelregistry/modelregistry.go:164\" , \"msg\" : \"Unable to load module /usr/local/lib/shared/testdevice.so.1.0.0 plugin.Open(\\\"/usr/local/lib/shared/testdevice.so.1.0.0\\\"): plugin was built with a different version of package golang.org/x/sys/unix\" } { \"level\" : \"fatal\" , \"ts\" :1583143085.2161112, \"logger\" : \"main\" , \"caller\" : \"onos-config/onos-config.go:171\" , \"msg\" : \"Unable to start onos-config plugin.Open(\\\"/usr/local/lib/shared/testdevice.so.1.0.0\\\"): plugin was built with a different version of package golang.org/x/sys/unix\" , \"stacktrace\" : \"main.main\\n\\t/go/src/github.com/onosproject/onos-config/cmd/onos-config/onos-config.go:171\\nruntime.main\\n\\t/usr/local/go/src/runtime/proc.go:203\" } For the plugin to be loadable: the dependency must be listed in the go.mod at the root of config-models AND have the same version as listed in the go.mod at the root of onos-config You should not add require entries to the go.mod of config-models directly, but instead add entries to the import section of cmd/dummy/dummy.go . When the make build target is run, go will add entries to go.mod based on the imports it finds in imports like this. The versions or require entries in go.mod can be edited, to ensure that they match those of the go.mod at the root of onos-config .","title":"Troubleshooting"},{"location":"onos-config/docs/run/","text":"Running onos-config The commands shown below can be run from anywhere on your PC provided that go tools are installed and the GOPATH environment variable is set, e.g. export GOPATH=~/go Run with Helm charts onos-config can run through Helm Charts as defined in the deployment.md page. Running with Helm is Work in Progress Run with onit onos-config can run through the onit tool. You can find more information on how to setup onit in the debugging page, and how to run onit at getting started page. Loading Model Plugins The model-plugin for your device can be built and loaded as outlined in the modelplugin guide. When running with Docker or Kubernetes these plugins will be built and (optionally) loaded at startup. To check the list of currently loaded plugins use: > onos config get plugins Northbound gNMI service The system provides a full implementation of the gNMI spec as a northbound service. On a deployed cluster the onos-cli pod has a gNMI client that can be used to format and send gNMI messages. You can run the following command to get in to the onos-cli pod and then run gnmi_cli from there: kubectl -n onos exec -it $( kubectl -n onos get pods -l type = cli -o name ) -- /bin/sh Or you can use k8s port forwarding to run gnmi_cli locally on your machine as follows: kubectl port-forward -n <onos-namespace> <onos-config-pod-id> 5150 :5150 Here is an example on how to use gnmi_cli -get to get configuration for a particular device (target) from the system. > gnmi_cli -get -address onos-config:5150 \\ -proto \"path: <target: 'localhost-1', elem: <name: 'system'> elem:<name:'config'> elem: <name: 'motd-banner'>>\" \\ -timeout 5s -en PROTO -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt \\ -client_key /etc/ssl/certs/client1.key \\ -ca_crt /etc/ssl/certs/onfca.crt Full list of the gNMI northbound endpoints Administrative and Diagnostic Tools The project provides enhanced northbound functionality though administrative and diagnostic tools, which are integrated into the consolidated onos command. For example, to list all network changes submitted through the northbound gNMI interface run: > onos config get network-changes Or, run the following to list all changes submitted through the northbound gNMI as they are tracked by the system broken-up into device specific batches: > onos config get device-changes <device-name> You can read more comprehensive documentation of the various administrative and diagnostic commands .","title":"How To Run Configuration Subsystem?"},{"location":"onos-config/docs/run/#running-onos-config","text":"The commands shown below can be run from anywhere on your PC provided that go tools are installed and the GOPATH environment variable is set, e.g. export GOPATH=~/go","title":"Running onos-config"},{"location":"onos-config/docs/run/#run-with-helm-charts","text":"onos-config can run through Helm Charts as defined in the deployment.md page. Running with Helm is Work in Progress","title":"Run with Helm charts"},{"location":"onos-config/docs/run/#run-with-onit","text":"onos-config can run through the onit tool. You can find more information on how to setup onit in the debugging page, and how to run onit at getting started page.","title":"Run with onit"},{"location":"onos-config/docs/run/#loading-model-plugins","text":"The model-plugin for your device can be built and loaded as outlined in the modelplugin guide. When running with Docker or Kubernetes these plugins will be built and (optionally) loaded at startup. To check the list of currently loaded plugins use: > onos config get plugins","title":"Loading Model Plugins"},{"location":"onos-config/docs/run/#northbound-gnmi-service","text":"The system provides a full implementation of the gNMI spec as a northbound service. On a deployed cluster the onos-cli pod has a gNMI client that can be used to format and send gNMI messages. You can run the following command to get in to the onos-cli pod and then run gnmi_cli from there: kubectl -n onos exec -it $( kubectl -n onos get pods -l type = cli -o name ) -- /bin/sh Or you can use k8s port forwarding to run gnmi_cli locally on your machine as follows: kubectl port-forward -n <onos-namespace> <onos-config-pod-id> 5150 :5150 Here is an example on how to use gnmi_cli -get to get configuration for a particular device (target) from the system. > gnmi_cli -get -address onos-config:5150 \\ -proto \"path: <target: 'localhost-1', elem: <name: 'system'> elem:<name:'config'> elem: <name: 'motd-banner'>>\" \\ -timeout 5s -en PROTO -alsologtostderr \\ -client_crt /etc/ssl/certs/client1.crt \\ -client_key /etc/ssl/certs/client1.key \\ -ca_crt /etc/ssl/certs/onfca.crt Full list of the gNMI northbound endpoints","title":"Northbound gNMI service"},{"location":"onos-config/docs/run/#administrative-and-diagnostic-tools","text":"The project provides enhanced northbound functionality though administrative and diagnostic tools, which are integrated into the consolidated onos command. For example, to list all network changes submitted through the northbound gNMI interface run: > onos config get network-changes Or, run the following to list all changes submitted through the northbound gNMI as they are tracked by the system broken-up into device specific batches: > onos config get device-changes <device-name> You can read more comprehensive documentation of the various administrative and diagnostic commands .","title":"Administrative and Diagnostic Tools"},{"location":"onos-config/docs/api/admin/","text":"Protocol Documentation Table of Contents api/admin/admin.proto Chunk CompactChangesRequest CompactChangesResponse ListModelsRequest ListSnapshotsRequest ModelInfo ReadOnlyPath ReadOnlySubPath ReadWritePath RegisterResponse RollbackRequest RollbackResponse Type ConfigAdminService Scalar Value Types Top api/admin/admin.proto Chunk Chunk is for streaming a model plugin file to the server. There is a built in limit in gRPC of 4MB - plugin is usually around 20MB so break in to chunks of approx 1-2MB. Field Type Label Description so_file string so_file is the name being streamed. content bytes content is the bytes content. CompactChangesRequest CompactChangesRequest requests a compaction of the Network Change and Device Change stores Field Type Label Description retention_period google.protobuf.Duration retention_period is an optional duration of time counting back from the present moment Network changes that were created during this period should not be compacted Any network changes that are older should be compacted If not specified the duration is 0 CompactChangesResponse CompactChangesResponse is a response to the Compact Changes command ListModelsRequest ListModelsRequest carries data for querying registered model plugins. Field Type Label Description verbose bool verbose option causes all of the ReadWrite and ReadOnly paths to be included. model_name string An optional filter on the name of the model plugins to list. model_version string An optional filter on the version of the model plugins to list ListSnapshotsRequest ListSnapshotsRequest requests a list of snapshots for all devices and versions. Field Type Label Description subscribe bool subscribe indicates whether to subscribe to events (e.g. ADD, UPDATE, and REMOVE) that occur after all devices have been streamed to the client id string option to specify a specific device - if blank or '*' then select all Can support * (match many chars) or '?' (match one char) as wildcard ModelInfo ModelInfo is general information about a model plugin. Field Type Label Description name string name is the name given to the model plugin - no spaces and title case. version string version is the semantic version of the Plugin e.g. 1.0.0. model_data gnmi.ModelData repeated model_data is a set of metadata about the YANG files that went in to generating the model plugin. It includes name, version and organization for each YANG file, similar to how they are represented in gNMI Capabilities. module string module is the name of the Model Plugin on the file system - usually ending in .so.<version>. getStateMode uint32 getStateMode is flag that defines how the \"get state\" operation works. 0) means that no retrieval of state is attempted 1) means that the synchronizer will make 2 requests to the device - one for Get with State and another for Get with Operational. 2) means that the synchronizer will do a Get request comprising of each one of the ReadOnlyPaths and their sub paths. If there is a list in any one of these paths it will be sent down as is, expecting the devices implementation of gNMI will be able to expand wildcards. 3) means that the synchronizer will do a Get request comprising of each one of the ReadOnlyPaths and their sub paths. If there is a list in any one of these paths, a separate call will be made first to find all the instances in the list and a Get including these expanded wildcards will be sent down to the device. read_only_path ReadOnlyPath repeated read_only_path is all of the read only paths for the model plugin. read_write_path ReadWritePath repeated read_write_path is all of the read write paths for the model plugin. ReadOnlyPath ReadOnlyPath extracted from the model plugin as the definition of a tree of read only items. In YANG models items are defined as ReadOnly with the config false keyword. This can be applied to single items (leafs) or collections (containers or lists). When this config false is applied to an object every item beneath it will also become readonly - here these are shown as subpaths. The complete read only path then will be a concatenation of both e.g. /cont1a/cont1b-state/list2b/index and the type is defined in the SubPath as UInt8. Field Type Label Description path string path of the topmost config false object e.g. /cont1a/cont1b-state sub_path ReadOnlySubPath repeated ReadOnlySubPath is a set of children of the path including an entry for the type of the topmost object with subpath / An example is /list2b/index ReadOnlySubPath ReadOnlySubPath is an extension to the ReadOnlyPath to define the datatype of the subpath Field Type Label Description sub_path string sub_path is the relative path of a child object e.g. /list2b/index value_type onos.config.change.device.ValueType value_type is the datatype of the read only path ReadWritePath ReadWritePath is extracted from the model plugin as the definition of a writeable attributes. In YANG models items are writable by default unless they are specified as config false or have an item with config false as a parent. Each configurable item has metadata with meanings taken from the YANG specification RFC 6020. Field Type Label Description path string path is the full path to the attribute (leaf or leaf-list) value_type onos.config.change.device.ValueType value_type is the data type of the attribute units string units is the unit of measurement e.g. dB, mV description string description is an explaination of the meaning of the attribute mandatory bool mandatory shows whether the attribute is optional (false) or required (true) default string default is a default value used with optional attributes range string repeated range is definition of the range of values a value is allowed length string repeated length is a defintion of the length restrictions for the attribute RegisterResponse RegisterResponse carries status of model plugin registration. Field Type Label Description name string name is name of the model plugin. version string version is the semantic version of the model plugin. RollbackRequest RollbackRequest carries the name of a network config to rollback. If there are subsequent changes to any of the devices in that config, the rollback will be rejected. Field Type Label Description name string name is an optional name of a Network Change to rollback. If no name is given the last network change will be rolled back. If the name given is not of the last network change and error will be given. comment string On optional comment to leave on the rollback. RollbackResponse RollbackResponse carries the response of the rollback operation Field Type Label Description message string A message showing the result of the rollback. Type Streaming event type Name Number Description NONE 0 NONE indicates this response does not represent a state change ADDED 1 ADDED is an event which occurs when an item is added UPDATED 2 UPDATED is an event which occurs when an item is updated REMOVED 3 REMOVED is an event which occurs when an item is removed ConfigAdminService ConfigAdminService provides means for enhanced interactions with the configuration subsystem. Method Name Request Type Response Type Description UploadRegisterModel Chunk stream RegisterResponse UploadRegisterModel uploads and adds the model plugin to the list of supported models. The file is serialized in to Chunks of less than 4MB so as not to break the gRPC byte array limit ListRegisteredModels ListModelsRequest ModelInfo stream ListRegisteredModels returns a stream of registered models. RollbackNetworkChange RollbackRequest RollbackResponse RollbackNetworkChange rolls back the specified network change (or the latest one). ListSnapshots ListSnapshotsRequest .onos.config.snapshot.device.Snapshot stream ListSnapshots gets a list of snapshots across all devices and versions, and streams them back to the caller. CompactChanges CompactChangesRequest CompactChangesResponse CompactChanges requests a snapshot of NetworkChange and DeviceChange stores. This will take all of the Network Changes older than the retention period and flatten them down to just one snapshot (replacing any older snapshot). This will act as a baseline for those changes within the retention period and any future changes. DeviceChanges will be snapshotted to correspond to these NetworkChange compactions leaving an individual snapshot perv device and version combination. Scalar Value Types .proto Type Notes C++ Type Java Type Python Type double double double float float float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long uint32 Uses variable-length encoding. uint32 int int/long uint64 Uses variable-length encoding. uint64 long int/long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long sfixed32 Always four bytes. int32 int int sfixed64 Always eight bytes. int64 long int/long bool bool boolean boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode bytes May contain any arbitrary sequence of bytes. string ByteString str","title":"Admin API"},{"location":"onos-config/docs/api/admin/#protocol-documentation","text":"","title":"Protocol Documentation"},{"location":"onos-config/docs/api/admin/#table-of-contents","text":"api/admin/admin.proto Chunk CompactChangesRequest CompactChangesResponse ListModelsRequest ListSnapshotsRequest ModelInfo ReadOnlyPath ReadOnlySubPath ReadWritePath RegisterResponse RollbackRequest RollbackResponse Type ConfigAdminService Scalar Value Types Top","title":"Table of Contents"},{"location":"onos-config/docs/api/admin/#apiadminadminproto","text":"","title":"api/admin/admin.proto"},{"location":"onos-config/docs/api/admin/#chunk","text":"Chunk is for streaming a model plugin file to the server. There is a built in limit in gRPC of 4MB - plugin is usually around 20MB so break in to chunks of approx 1-2MB. Field Type Label Description so_file string so_file is the name being streamed. content bytes content is the bytes content.","title":"Chunk"},{"location":"onos-config/docs/api/admin/#compactchangesrequest","text":"CompactChangesRequest requests a compaction of the Network Change and Device Change stores Field Type Label Description retention_period google.protobuf.Duration retention_period is an optional duration of time counting back from the present moment Network changes that were created during this period should not be compacted Any network changes that are older should be compacted If not specified the duration is 0","title":"CompactChangesRequest"},{"location":"onos-config/docs/api/admin/#compactchangesresponse","text":"CompactChangesResponse is a response to the Compact Changes command","title":"CompactChangesResponse"},{"location":"onos-config/docs/api/admin/#listmodelsrequest","text":"ListModelsRequest carries data for querying registered model plugins. Field Type Label Description verbose bool verbose option causes all of the ReadWrite and ReadOnly paths to be included. model_name string An optional filter on the name of the model plugins to list. model_version string An optional filter on the version of the model plugins to list","title":"ListModelsRequest"},{"location":"onos-config/docs/api/admin/#listsnapshotsrequest","text":"ListSnapshotsRequest requests a list of snapshots for all devices and versions. Field Type Label Description subscribe bool subscribe indicates whether to subscribe to events (e.g. ADD, UPDATE, and REMOVE) that occur after all devices have been streamed to the client id string option to specify a specific device - if blank or '*' then select all Can support * (match many chars) or '?' (match one char) as wildcard","title":"ListSnapshotsRequest"},{"location":"onos-config/docs/api/admin/#modelinfo","text":"ModelInfo is general information about a model plugin. Field Type Label Description name string name is the name given to the model plugin - no spaces and title case. version string version is the semantic version of the Plugin e.g. 1.0.0. model_data gnmi.ModelData repeated model_data is a set of metadata about the YANG files that went in to generating the model plugin. It includes name, version and organization for each YANG file, similar to how they are represented in gNMI Capabilities. module string module is the name of the Model Plugin on the file system - usually ending in .so.<version>. getStateMode uint32 getStateMode is flag that defines how the \"get state\" operation works. 0) means that no retrieval of state is attempted 1) means that the synchronizer will make 2 requests to the device - one for Get with State and another for Get with Operational. 2) means that the synchronizer will do a Get request comprising of each one of the ReadOnlyPaths and their sub paths. If there is a list in any one of these paths it will be sent down as is, expecting the devices implementation of gNMI will be able to expand wildcards. 3) means that the synchronizer will do a Get request comprising of each one of the ReadOnlyPaths and their sub paths. If there is a list in any one of these paths, a separate call will be made first to find all the instances in the list and a Get including these expanded wildcards will be sent down to the device. read_only_path ReadOnlyPath repeated read_only_path is all of the read only paths for the model plugin. read_write_path ReadWritePath repeated read_write_path is all of the read write paths for the model plugin.","title":"ModelInfo"},{"location":"onos-config/docs/api/admin/#readonlypath","text":"ReadOnlyPath extracted from the model plugin as the definition of a tree of read only items. In YANG models items are defined as ReadOnly with the config false keyword. This can be applied to single items (leafs) or collections (containers or lists). When this config false is applied to an object every item beneath it will also become readonly - here these are shown as subpaths. The complete read only path then will be a concatenation of both e.g. /cont1a/cont1b-state/list2b/index and the type is defined in the SubPath as UInt8. Field Type Label Description path string path of the topmost config false object e.g. /cont1a/cont1b-state sub_path ReadOnlySubPath repeated ReadOnlySubPath is a set of children of the path including an entry for the type of the topmost object with subpath / An example is /list2b/index","title":"ReadOnlyPath"},{"location":"onos-config/docs/api/admin/#readonlysubpath","text":"ReadOnlySubPath is an extension to the ReadOnlyPath to define the datatype of the subpath Field Type Label Description sub_path string sub_path is the relative path of a child object e.g. /list2b/index value_type onos.config.change.device.ValueType value_type is the datatype of the read only path","title":"ReadOnlySubPath"},{"location":"onos-config/docs/api/admin/#readwritepath","text":"ReadWritePath is extracted from the model plugin as the definition of a writeable attributes. In YANG models items are writable by default unless they are specified as config false or have an item with config false as a parent. Each configurable item has metadata with meanings taken from the YANG specification RFC 6020. Field Type Label Description path string path is the full path to the attribute (leaf or leaf-list) value_type onos.config.change.device.ValueType value_type is the data type of the attribute units string units is the unit of measurement e.g. dB, mV description string description is an explaination of the meaning of the attribute mandatory bool mandatory shows whether the attribute is optional (false) or required (true) default string default is a default value used with optional attributes range string repeated range is definition of the range of values a value is allowed length string repeated length is a defintion of the length restrictions for the attribute","title":"ReadWritePath"},{"location":"onos-config/docs/api/admin/#registerresponse","text":"RegisterResponse carries status of model plugin registration. Field Type Label Description name string name is name of the model plugin. version string version is the semantic version of the model plugin.","title":"RegisterResponse"},{"location":"onos-config/docs/api/admin/#rollbackrequest","text":"RollbackRequest carries the name of a network config to rollback. If there are subsequent changes to any of the devices in that config, the rollback will be rejected. Field Type Label Description name string name is an optional name of a Network Change to rollback. If no name is given the last network change will be rolled back. If the name given is not of the last network change and error will be given. comment string On optional comment to leave on the rollback.","title":"RollbackRequest"},{"location":"onos-config/docs/api/admin/#rollbackresponse","text":"RollbackResponse carries the response of the rollback operation Field Type Label Description message string A message showing the result of the rollback.","title":"RollbackResponse"},{"location":"onos-config/docs/api/admin/#type","text":"Streaming event type Name Number Description NONE 0 NONE indicates this response does not represent a state change ADDED 1 ADDED is an event which occurs when an item is added UPDATED 2 UPDATED is an event which occurs when an item is updated REMOVED 3 REMOVED is an event which occurs when an item is removed","title":"Type"},{"location":"onos-config/docs/api/admin/#configadminservice","text":"ConfigAdminService provides means for enhanced interactions with the configuration subsystem. Method Name Request Type Response Type Description UploadRegisterModel Chunk stream RegisterResponse UploadRegisterModel uploads and adds the model plugin to the list of supported models. The file is serialized in to Chunks of less than 4MB so as not to break the gRPC byte array limit ListRegisteredModels ListModelsRequest ModelInfo stream ListRegisteredModels returns a stream of registered models. RollbackNetworkChange RollbackRequest RollbackResponse RollbackNetworkChange rolls back the specified network change (or the latest one). ListSnapshots ListSnapshotsRequest .onos.config.snapshot.device.Snapshot stream ListSnapshots gets a list of snapshots across all devices and versions, and streams them back to the caller. CompactChanges CompactChangesRequest CompactChangesResponse CompactChanges requests a snapshot of NetworkChange and DeviceChange stores. This will take all of the Network Changes older than the retention period and flatten them down to just one snapshot (replacing any older snapshot). This will act as a baseline for those changes within the retention period and any future changes. DeviceChanges will be snapshotted to correspond to these NetworkChange compactions leaving an individual snapshot perv device and version combination.","title":"ConfigAdminService"},{"location":"onos-config/docs/api/admin/#scalar-value-types","text":".proto Type Notes C++ Type Java Type Python Type double double double float float float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long uint32 Uses variable-length encoding. uint32 int int/long uint64 Uses variable-length encoding. uint64 long int/long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long sfixed32 Always four bytes. int32 int int sfixed64 Always eight bytes. int64 long int/long bool bool boolean boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode bytes May contain any arbitrary sequence of bytes. string ByteString str","title":"Scalar Value Types"},{"location":"onos-config/docs/api/diags/","text":"Protocol Documentation Table of Contents api/diags/diags.proto ListDeviceChangeRequest ListDeviceChangeResponse ListNetworkChangeRequest ListNetworkChangeResponse OpStateRequest OpStateResponse Type ChangeService OpStateDiags Scalar Value Types Top api/diags/diags.proto ListDeviceChangeRequest ListDeviceChangeRequest requests a stream of changes and updates to them By default, the request requests a stream of all changes that are present in the topology when the request is received by the service. However, if subscribe is true , the stream will remain open after all changes have been sent and events that occur following the last changes will be streamed to the client until the stream is closed. If \"withoutReplay\" is true then only changes that happen after the call will be returned Field Type Label Description subscribe bool subscribe indicates whether to subscribe to events (e.g. ADD, UPDATE, and REMOVE) that occur after all devices have been streamed to the client device_id string option to specify a specific device change - if blank or '*' then select all Can support * (match many chars) or '?' (match one char) as wildcard device_version string device_version is an optional device version withoutReplay bool option to request only changes that happen after the call ListDeviceChangeResponse ListDeviceChangeResponse carries a single network change event Field Type Label Description change onos.config.change.device.DeviceChange change is the device change on which the event occurred type Type type is a qualification of the type of change being made ListNetworkChangeRequest ListNetworkChangeRequest requests a stream of changes and updates to them By default, the request requests a stream of all changes that are present in the topology when the request is received by the service. However, if subscribe is true , the stream will remain open after all changes have been sent and events that occur following the last changes will be streamed to the client until the stream is closed. If \"withoutReplay\" is true then only changes that happen after the call will be returned Field Type Label Description subscribe bool subscribe indicates whether to subscribe to events (e.g. ADD, UPDATE, and REMOVE) that occur after all devices have been streamed to the client changeid string option to specify a specific network change - if blank or '*' then select all Can support * (match many chars) or '?' (match one char) as wildcard withoutReplay bool option to request only changes that happen after the call ListNetworkChangeResponse ListNetworkChangeResponse carries a single network change event Field Type Label Description change onos.config.change.network.NetworkChange change is the network change on which the event occurred type Type type is a qualification of the type of change being made OpStateRequest OpStateRequest is a message for specifying GetOpState query parameters. Field Type Label Description deviceId string The request is always in the context of a Device ID. If the device does not exist or is disconnected an error will be returned. subscribe bool subscribe indicates whether to subscribe to events (e.g. ADD, UPDATE, and REMOVE) that occur after all paths for the device have been streamed to the client OpStateResponse Field Type Label Description type onos.config.admin.Type type is the type of the event pathvalue onos.config.change.device.PathValue device is the device on which the event occurred Type Change (Network or Device) event type Name Number Description NONE 0 NONE indicates this response does not represent a modification of the Change ADDED 1 ADDED is an event which occurs when a Change is added to the topology UPDATED 2 UPDATED is an event which occurs when a Change is updated REMOVED 3 REMOVED is an event which occurs when a Change is removed from the configuration ChangeService Method Name Request Type Response Type Description ListNetworkChanges ListNetworkChangeRequest ListNetworkChangeResponse stream List gets a stream of network change add/update/remove events for network changes matching changeid ListDeviceChanges ListDeviceChangeRequest ListDeviceChangeResponse stream List gets a stream of device change add/update/remove events for device changes matching changeid OpStateDiags OpStateDiags provides means for obtaining diagnostic information about internal system state. Method Name Request Type Response Type Description GetOpState OpStateRequest OpStateResponse stream GetOpState returns a stream of submitted OperationalStateCache aimed at individual devices. If subscribe is true keep on streaming after the initial set are finished Scalar Value Types .proto Type Notes C++ Type Java Type Python Type double double double float float float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long uint32 Uses variable-length encoding. uint32 int int/long uint64 Uses variable-length encoding. uint64 long int/long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long sfixed32 Always four bytes. int32 int int sfixed64 Always eight bytes. int64 long int/long bool bool boolean boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode bytes May contain any arbitrary sequence of bytes. string ByteString str","title":"Diagnostic API"},{"location":"onos-config/docs/api/diags/#protocol-documentation","text":"","title":"Protocol Documentation"},{"location":"onos-config/docs/api/diags/#table-of-contents","text":"api/diags/diags.proto ListDeviceChangeRequest ListDeviceChangeResponse ListNetworkChangeRequest ListNetworkChangeResponse OpStateRequest OpStateResponse Type ChangeService OpStateDiags Scalar Value Types Top","title":"Table of Contents"},{"location":"onos-config/docs/api/diags/#apidiagsdiagsproto","text":"","title":"api/diags/diags.proto"},{"location":"onos-config/docs/api/diags/#listdevicechangerequest","text":"ListDeviceChangeRequest requests a stream of changes and updates to them By default, the request requests a stream of all changes that are present in the topology when the request is received by the service. However, if subscribe is true , the stream will remain open after all changes have been sent and events that occur following the last changes will be streamed to the client until the stream is closed. If \"withoutReplay\" is true then only changes that happen after the call will be returned Field Type Label Description subscribe bool subscribe indicates whether to subscribe to events (e.g. ADD, UPDATE, and REMOVE) that occur after all devices have been streamed to the client device_id string option to specify a specific device change - if blank or '*' then select all Can support * (match many chars) or '?' (match one char) as wildcard device_version string device_version is an optional device version withoutReplay bool option to request only changes that happen after the call","title":"ListDeviceChangeRequest"},{"location":"onos-config/docs/api/diags/#listdevicechangeresponse","text":"ListDeviceChangeResponse carries a single network change event Field Type Label Description change onos.config.change.device.DeviceChange change is the device change on which the event occurred type Type type is a qualification of the type of change being made","title":"ListDeviceChangeResponse"},{"location":"onos-config/docs/api/diags/#listnetworkchangerequest","text":"ListNetworkChangeRequest requests a stream of changes and updates to them By default, the request requests a stream of all changes that are present in the topology when the request is received by the service. However, if subscribe is true , the stream will remain open after all changes have been sent and events that occur following the last changes will be streamed to the client until the stream is closed. If \"withoutReplay\" is true then only changes that happen after the call will be returned Field Type Label Description subscribe bool subscribe indicates whether to subscribe to events (e.g. ADD, UPDATE, and REMOVE) that occur after all devices have been streamed to the client changeid string option to specify a specific network change - if blank or '*' then select all Can support * (match many chars) or '?' (match one char) as wildcard withoutReplay bool option to request only changes that happen after the call","title":"ListNetworkChangeRequest"},{"location":"onos-config/docs/api/diags/#listnetworkchangeresponse","text":"ListNetworkChangeResponse carries a single network change event Field Type Label Description change onos.config.change.network.NetworkChange change is the network change on which the event occurred type Type type is a qualification of the type of change being made","title":"ListNetworkChangeResponse"},{"location":"onos-config/docs/api/diags/#opstaterequest","text":"OpStateRequest is a message for specifying GetOpState query parameters. Field Type Label Description deviceId string The request is always in the context of a Device ID. If the device does not exist or is disconnected an error will be returned. subscribe bool subscribe indicates whether to subscribe to events (e.g. ADD, UPDATE, and REMOVE) that occur after all paths for the device have been streamed to the client","title":"OpStateRequest"},{"location":"onos-config/docs/api/diags/#opstateresponse","text":"Field Type Label Description type onos.config.admin.Type type is the type of the event pathvalue onos.config.change.device.PathValue device is the device on which the event occurred","title":"OpStateResponse"},{"location":"onos-config/docs/api/diags/#type","text":"Change (Network or Device) event type Name Number Description NONE 0 NONE indicates this response does not represent a modification of the Change ADDED 1 ADDED is an event which occurs when a Change is added to the topology UPDATED 2 UPDATED is an event which occurs when a Change is updated REMOVED 3 REMOVED is an event which occurs when a Change is removed from the configuration","title":"Type"},{"location":"onos-config/docs/api/diags/#changeservice","text":"Method Name Request Type Response Type Description ListNetworkChanges ListNetworkChangeRequest ListNetworkChangeResponse stream List gets a stream of network change add/update/remove events for network changes matching changeid ListDeviceChanges ListDeviceChangeRequest ListDeviceChangeResponse stream List gets a stream of device change add/update/remove events for device changes matching changeid","title":"ChangeService"},{"location":"onos-config/docs/api/diags/#opstatediags","text":"OpStateDiags provides means for obtaining diagnostic information about internal system state. Method Name Request Type Response Type Description GetOpState OpStateRequest OpStateResponse stream GetOpState returns a stream of submitted OperationalStateCache aimed at individual devices. If subscribe is true keep on streaming after the initial set are finished","title":"OpStateDiags"},{"location":"onos-config/docs/api/diags/#scalar-value-types","text":".proto Type Notes C++ Type Java Type Python Type double double double float float float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long uint32 Uses variable-length encoding. uint32 int int/long uint64 Uses variable-length encoding. uint64 long int/long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long sfixed32 Always four bytes. int32 int int sfixed64 Always eight bytes. int64 long int/long bool bool boolean boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode bytes May contain any arbitrary sequence of bytes. string ByteString str","title":"Scalar Value Types"},{"location":"onos-config/docs/api/types_change/","text":"Protocol Documentation Table of Contents api/types/change/types.proto Status Phase Reason State Scalar Value Types Top api/types/change/types.proto Status Status is the status of a NetworkChange Field Type Label Description phase Phase 'phase' is the current phase of the NetworkChange state State 'state' is the state of the change within a Phase reason Reason 'reason' is a failure reason message string message is a result message incarnation uint64 incarnation is the status incarnation number Phase Phase is the phase of a NetworkChange Name Number Description CHANGE 0 CHANGE indicates the change has been requested ROLLBACK 1 ROLLBACK indicates a rollback has been requested for the change Reason Reason is a reason for a FAILED state Name Number Description NONE 0 NONE indicates no error has occurred ERROR 1 ERROR indicates an error occurred when applying the change State State is the state of a phase Name Number Description PENDING 0 PENDING indicates the phase is pending COMPLETE 2 COMPLETE indicates the phase is complete FAILED 3 FAILED indicates the phase failed Scalar Value Types .proto Type Notes C++ Type Java Type Python Type double double double float float float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long uint32 Uses variable-length encoding. uint32 int int/long uint64 Uses variable-length encoding. uint64 long int/long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long sfixed32 Always four bytes. int32 int int sfixed64 Always eight bytes. int64 long int/long bool bool boolean boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode bytes May contain any arbitrary sequence of bytes. string ByteString str","title":"Common Change Types"},{"location":"onos-config/docs/api/types_change/#protocol-documentation","text":"","title":"Protocol Documentation"},{"location":"onos-config/docs/api/types_change/#table-of-contents","text":"api/types/change/types.proto Status Phase Reason State Scalar Value Types Top","title":"Table of Contents"},{"location":"onos-config/docs/api/types_change/#apitypeschangetypesproto","text":"","title":"api/types/change/types.proto"},{"location":"onos-config/docs/api/types_change/#status","text":"Status is the status of a NetworkChange Field Type Label Description phase Phase 'phase' is the current phase of the NetworkChange state State 'state' is the state of the change within a Phase reason Reason 'reason' is a failure reason message string message is a result message incarnation uint64 incarnation is the status incarnation number","title":"Status"},{"location":"onos-config/docs/api/types_change/#phase","text":"Phase is the phase of a NetworkChange Name Number Description CHANGE 0 CHANGE indicates the change has been requested ROLLBACK 1 ROLLBACK indicates a rollback has been requested for the change","title":"Phase"},{"location":"onos-config/docs/api/types_change/#reason","text":"Reason is a reason for a FAILED state Name Number Description NONE 0 NONE indicates no error has occurred ERROR 1 ERROR indicates an error occurred when applying the change","title":"Reason"},{"location":"onos-config/docs/api/types_change/#state","text":"State is the state of a phase Name Number Description PENDING 0 PENDING indicates the phase is pending COMPLETE 2 COMPLETE indicates the phase is complete FAILED 3 FAILED indicates the phase failed","title":"State"},{"location":"onos-config/docs/api/types_change/#scalar-value-types","text":".proto Type Notes C++ Type Java Type Python Type double double double float float float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long uint32 Uses variable-length encoding. uint32 int int/long uint64 Uses variable-length encoding. uint64 long int/long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long sfixed32 Always four bytes. int32 int int sfixed64 Always eight bytes. int64 long int/long bool bool boolean boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode bytes May contain any arbitrary sequence of bytes. string ByteString str","title":"Scalar Value Types"},{"location":"onos-config/docs/api/types_change_device/","text":"Protocol Documentation Table of Contents api/types/change/device/types.proto Change ChangeValue DeviceChange NetworkChangeRef PathValue TypedValue ValueType Scalar Value Types Top api/types/change/device/types.proto Change Change represents a configuration change to a single device Field Type Label Description device_id string 'device_id' is the identifier of the device to which this change applies device_version string 'device_version' is an optional device version to which to apply this change device_type string 'device_type' is an optional device type to which to apply this change values ChangeValue repeated 'values' is a set of change values to apply ChangeValue ChangeValue is an individual Path/Value and removed flag combination in a Change Field Type Label Description path string 'path' is the path to change value TypedValue 'value' is the change value removed bool 'removed' indicates whether this is a delete DeviceChange DeviceChange is a stored configuration change for a single device Field Type Label Description id string 'id' is the unique identifier of the change index uint64 'index' is a monotonically increasing, globally unique index of the change The index is provided by the store, is static and unique for each unique change identifier, and should not be modified by client code. revision uint64 'revision' is the change revision number The revision number is provided by the store and should not be modified by client code. Each unique state of the change will be assigned a unique revision number which can be used for optimistic concurrency control when updating or deleting the change state. network_change NetworkChangeRef 'network_change' is a reference to the NetworkChange that created this change change Change 'change' is the change object status onos.config.change.Status 'status' is the lifecycle status of the change created google.protobuf.Timestamp 'created' is the time at which the change was created updated google.protobuf.Timestamp 'updated' is the time at which the change was last updated NetworkChangeRef NetworkChangeRef is a back reference to the NetworkChange that created a DeviceChange Field Type Label Description id string 'id' is the identifier of the network change from which this change was created index uint64 'index' is the index of the network change from which this change was created PathValue PathValue is an individual Path/Value combination - it is like ChangeValue above without the removed flag - it is not used in the DeviceChange store Instead it is useful for handling OpState and Snapshots where removed is not relevant Field Type Label Description path string 'path' is the path to change value TypedValue 'value' is the change value TypedValue TypedValue is a value represented as a byte array Field Type Label Description bytes bytes 'bytes' is the bytes array type ValueType 'type' is the value type type_opts int32 repeated 'type_opts' is a set of type options ValueType ValueType is the type for a value Name Number Description EMPTY 0 STRING 1 INT 2 UINT 3 BOOL 4 DECIMAL 5 FLOAT 6 BYTES 7 LEAFLIST_STRING 8 LEAFLIST_INT 9 LEAFLIST_UINT 10 LEAFLIST_BOOL 11 LEAFLIST_DECIMAL 12 LEAFLIST_FLOAT 13 LEAFLIST_BYTES 14 Scalar Value Types .proto Type Notes C++ Type Java Type Python Type double double double float float float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long uint32 Uses variable-length encoding. uint32 int int/long uint64 Uses variable-length encoding. uint64 long int/long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long sfixed32 Always four bytes. int32 int int sfixed64 Always eight bytes. int64 long int/long bool bool boolean boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode bytes May contain any arbitrary sequence of bytes. string ByteString str","title":"Device Change Types"},{"location":"onos-config/docs/api/types_change_device/#protocol-documentation","text":"","title":"Protocol Documentation"},{"location":"onos-config/docs/api/types_change_device/#table-of-contents","text":"api/types/change/device/types.proto Change ChangeValue DeviceChange NetworkChangeRef PathValue TypedValue ValueType Scalar Value Types Top","title":"Table of Contents"},{"location":"onos-config/docs/api/types_change_device/#apitypeschangedevicetypesproto","text":"","title":"api/types/change/device/types.proto"},{"location":"onos-config/docs/api/types_change_device/#change","text":"Change represents a configuration change to a single device Field Type Label Description device_id string 'device_id' is the identifier of the device to which this change applies device_version string 'device_version' is an optional device version to which to apply this change device_type string 'device_type' is an optional device type to which to apply this change values ChangeValue repeated 'values' is a set of change values to apply","title":"Change"},{"location":"onos-config/docs/api/types_change_device/#changevalue","text":"ChangeValue is an individual Path/Value and removed flag combination in a Change Field Type Label Description path string 'path' is the path to change value TypedValue 'value' is the change value removed bool 'removed' indicates whether this is a delete","title":"ChangeValue"},{"location":"onos-config/docs/api/types_change_device/#devicechange","text":"DeviceChange is a stored configuration change for a single device Field Type Label Description id string 'id' is the unique identifier of the change index uint64 'index' is a monotonically increasing, globally unique index of the change The index is provided by the store, is static and unique for each unique change identifier, and should not be modified by client code. revision uint64 'revision' is the change revision number The revision number is provided by the store and should not be modified by client code. Each unique state of the change will be assigned a unique revision number which can be used for optimistic concurrency control when updating or deleting the change state. network_change NetworkChangeRef 'network_change' is a reference to the NetworkChange that created this change change Change 'change' is the change object status onos.config.change.Status 'status' is the lifecycle status of the change created google.protobuf.Timestamp 'created' is the time at which the change was created updated google.protobuf.Timestamp 'updated' is the time at which the change was last updated","title":"DeviceChange"},{"location":"onos-config/docs/api/types_change_device/#networkchangeref","text":"NetworkChangeRef is a back reference to the NetworkChange that created a DeviceChange Field Type Label Description id string 'id' is the identifier of the network change from which this change was created index uint64 'index' is the index of the network change from which this change was created","title":"NetworkChangeRef"},{"location":"onos-config/docs/api/types_change_device/#pathvalue","text":"PathValue is an individual Path/Value combination - it is like ChangeValue above without the removed flag - it is not used in the DeviceChange store Instead it is useful for handling OpState and Snapshots where removed is not relevant Field Type Label Description path string 'path' is the path to change value TypedValue 'value' is the change value","title":"PathValue"},{"location":"onos-config/docs/api/types_change_device/#typedvalue","text":"TypedValue is a value represented as a byte array Field Type Label Description bytes bytes 'bytes' is the bytes array type ValueType 'type' is the value type type_opts int32 repeated 'type_opts' is a set of type options","title":"TypedValue"},{"location":"onos-config/docs/api/types_change_device/#valuetype","text":"ValueType is the type for a value Name Number Description EMPTY 0 STRING 1 INT 2 UINT 3 BOOL 4 DECIMAL 5 FLOAT 6 BYTES 7 LEAFLIST_STRING 8 LEAFLIST_INT 9 LEAFLIST_UINT 10 LEAFLIST_BOOL 11 LEAFLIST_DECIMAL 12 LEAFLIST_FLOAT 13 LEAFLIST_BYTES 14","title":"ValueType"},{"location":"onos-config/docs/api/types_change_device/#scalar-value-types","text":".proto Type Notes C++ Type Java Type Python Type double double double float float float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long uint32 Uses variable-length encoding. uint32 int int/long uint64 Uses variable-length encoding. uint64 long int/long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long sfixed32 Always four bytes. int32 int int sfixed64 Always eight bytes. int64 long int/long bool bool boolean boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode bytes May contain any arbitrary sequence of bytes. string ByteString str","title":"Scalar Value Types"},{"location":"onos-config/docs/api/types_change_network/","text":"Protocol Documentation Table of Contents api/types/change/network/types.proto DeviceChangeRef NetworkChange Scalar Value Types Top api/types/change/network/types.proto DeviceChangeRef DeviceChangeRef is a reference to a device change Field Type Label Description device_change_id string 'device_change_id' is the unique identifier of the device change NetworkChange NetworkChange specifies the configuration for a network change A network change is a configuration change that spans multiple devices. The change contains a list of per-device changes to be applied to the network. Field Type Label Description id string 'id' is the unique identifier of the change This field should be set prior to persisting the object. index uint64 'index' is a monotonically increasing, globally unique index of the change The index is provided by the store, is static and unique for each unique change identifier, and should not be modified by client code. revision uint64 'revision' is the change revision number The revision number is provided by the store and should not be modified by client code. Each unique state of the change will be assigned a unique revision number which can be used for optimistic concurrency control when updating or deleting the change state. status onos.config.change.Status 'status' is the current lifecycle status of the change created google.protobuf.Timestamp 'created' is the time at which the change was created updated google.protobuf.Timestamp 'updated' is the time at which the change was last updated changes onos.config.change.device.Change repeated 'changes' is a set of changes to apply to devices The list of changes should contain only a single change per device/version pair. refs DeviceChangeRef repeated 'refs' is a set of references to stored device changes deleted bool 'deleted' is a flag indicating whether this change is being deleted by a snapshot Scalar Value Types .proto Type Notes C++ Type Java Type Python Type double double double float float float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long uint32 Uses variable-length encoding. uint32 int int/long uint64 Uses variable-length encoding. uint64 long int/long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long sfixed32 Always four bytes. int32 int int sfixed64 Always eight bytes. int64 long int/long bool bool boolean boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode bytes May contain any arbitrary sequence of bytes. string ByteString str","title":"Network Change Types"},{"location":"onos-config/docs/api/types_change_network/#protocol-documentation","text":"","title":"Protocol Documentation"},{"location":"onos-config/docs/api/types_change_network/#table-of-contents","text":"api/types/change/network/types.proto DeviceChangeRef NetworkChange Scalar Value Types Top","title":"Table of Contents"},{"location":"onos-config/docs/api/types_change_network/#apitypeschangenetworktypesproto","text":"","title":"api/types/change/network/types.proto"},{"location":"onos-config/docs/api/types_change_network/#devicechangeref","text":"DeviceChangeRef is a reference to a device change Field Type Label Description device_change_id string 'device_change_id' is the unique identifier of the device change","title":"DeviceChangeRef"},{"location":"onos-config/docs/api/types_change_network/#networkchange","text":"NetworkChange specifies the configuration for a network change A network change is a configuration change that spans multiple devices. The change contains a list of per-device changes to be applied to the network. Field Type Label Description id string 'id' is the unique identifier of the change This field should be set prior to persisting the object. index uint64 'index' is a monotonically increasing, globally unique index of the change The index is provided by the store, is static and unique for each unique change identifier, and should not be modified by client code. revision uint64 'revision' is the change revision number The revision number is provided by the store and should not be modified by client code. Each unique state of the change will be assigned a unique revision number which can be used for optimistic concurrency control when updating or deleting the change state. status onos.config.change.Status 'status' is the current lifecycle status of the change created google.protobuf.Timestamp 'created' is the time at which the change was created updated google.protobuf.Timestamp 'updated' is the time at which the change was last updated changes onos.config.change.device.Change repeated 'changes' is a set of changes to apply to devices The list of changes should contain only a single change per device/version pair. refs DeviceChangeRef repeated 'refs' is a set of references to stored device changes deleted bool 'deleted' is a flag indicating whether this change is being deleted by a snapshot","title":"NetworkChange"},{"location":"onos-config/docs/api/types_change_network/#scalar-value-types","text":".proto Type Notes C++ Type Java Type Python Type double double double float float float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long uint32 Uses variable-length encoding. uint32 int int/long uint64 Uses variable-length encoding. uint64 long int/long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long sfixed32 Always four bytes. int32 int int sfixed64 Always eight bytes. int64 long int/long bool bool boolean boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode bytes May contain any arbitrary sequence of bytes. string ByteString str","title":"Scalar Value Types"},{"location":"onos-config/docs/api/types_snapshot/","text":"Protocol Documentation Table of Contents api/types/snapshot/types.proto RetentionOptions Status Phase State Scalar Value Types Top api/types/snapshot/types.proto RetentionOptions RetentionOptions specifies the retention policy for a change log Field Type Label Description retain_window google.protobuf.Duration 'retain_window' is the duration for which to retain network changes Status Status is the status of a snapshot Field Type Label Description phase Phase 'phase' is the snapshot phase state State 'state' is the state of a snapshot Phase Phase is a snapshot phase Name Number Description MARK 0 MARK is the first phase in which changes are marked for deletion DELETE 1 DELETE is the second phase in which changes are deleted from stores State State is the state of a snapshot within a phase Name Number Description PENDING 0 PENDING indicates the snapshot is pending RUNNING 1 RUNNING indicates the snapshot is in progress COMPLETE 2 COMPLETE indicates the snapshot is complete Scalar Value Types .proto Type Notes C++ Type Java Type Python Type double double double float float float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long uint32 Uses variable-length encoding. uint32 int int/long uint64 Uses variable-length encoding. uint64 long int/long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long sfixed32 Always four bytes. int32 int int sfixed64 Always eight bytes. int64 long int/long bool bool boolean boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode bytes May contain any arbitrary sequence of bytes. string ByteString str","title":"Common Snapshot Types"},{"location":"onos-config/docs/api/types_snapshot/#protocol-documentation","text":"","title":"Protocol Documentation"},{"location":"onos-config/docs/api/types_snapshot/#table-of-contents","text":"api/types/snapshot/types.proto RetentionOptions Status Phase State Scalar Value Types Top","title":"Table of Contents"},{"location":"onos-config/docs/api/types_snapshot/#apitypessnapshottypesproto","text":"","title":"api/types/snapshot/types.proto"},{"location":"onos-config/docs/api/types_snapshot/#retentionoptions","text":"RetentionOptions specifies the retention policy for a change log Field Type Label Description retain_window google.protobuf.Duration 'retain_window' is the duration for which to retain network changes","title":"RetentionOptions"},{"location":"onos-config/docs/api/types_snapshot/#status","text":"Status is the status of a snapshot Field Type Label Description phase Phase 'phase' is the snapshot phase state State 'state' is the state of a snapshot","title":"Status"},{"location":"onos-config/docs/api/types_snapshot/#phase","text":"Phase is a snapshot phase Name Number Description MARK 0 MARK is the first phase in which changes are marked for deletion DELETE 1 DELETE is the second phase in which changes are deleted from stores","title":"Phase"},{"location":"onos-config/docs/api/types_snapshot/#state","text":"State is the state of a snapshot within a phase Name Number Description PENDING 0 PENDING indicates the snapshot is pending RUNNING 1 RUNNING indicates the snapshot is in progress COMPLETE 2 COMPLETE indicates the snapshot is complete","title":"State"},{"location":"onos-config/docs/api/types_snapshot/#scalar-value-types","text":".proto Type Notes C++ Type Java Type Python Type double double double float float float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long uint32 Uses variable-length encoding. uint32 int int/long uint64 Uses variable-length encoding. uint64 long int/long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long sfixed32 Always four bytes. int32 int int sfixed64 Always eight bytes. int64 long int/long bool bool boolean boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode bytes May contain any arbitrary sequence of bytes. string ByteString str","title":"Scalar Value Types"},{"location":"onos-config/docs/api/types_snapshot_device/","text":"Protocol Documentation Table of Contents api/types/snapshot/device/types.proto DeviceSnapshot NetworkSnapshotRef Snapshot Scalar Value Types Top api/types/snapshot/device/types.proto DeviceSnapshot DeviceSnapshot is a device snapshot Field Type Label Description id string 'id' is the unique snapshot identifier device_id string 'device_id' is the device to which the snapshot applies device_version string 'device_version' is the version to which the snapshot applies device_type string 'device_type' is an optional device type to which to apply this change revision uint64 'revision' is the request revision number network_snapshot NetworkSnapshotRef 'network_snapshot' is a reference to the network snapshot from which this snapshot was created max_network_change_index uint64 'max_network_change_index' is the maximum network change index to be snapshotted for the device status onos.config.snapshot.Status 'status' is the snapshot status created google.protobuf.Timestamp 'created' is the time at which the configuration was created updated google.protobuf.Timestamp 'updated' is the time at which the configuration was last updated NetworkSnapshotRef NetworkSnapshotRef is a back reference to the NetworkSnapshot that created a DeviceSnapshot Field Type Label Description id string 'id' is the identifier of the network snapshot from which this snapshot was created index uint64 'index' is the index of the network snapshot from which this snapshot was created Snapshot Snapshot is a snapshot of the state of a single device Field Type Label Description id string 'id' is a unique snapshot identifier device_id string 'device_id' is the device to which the snapshot applies device_version string 'device_version' is the version to which the snapshot applies device_type string 'device_type' is an optional device type to which to apply this change snapshot_id string 'snapshot_id' is the ID of the snapshot change_index uint64 'change_index' is the change index at which the snapshot ended values onos.config.change.device.PathValue repeated 'values' is a list of values to set Scalar Value Types .proto Type Notes C++ Type Java Type Python Type double double double float float float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long uint32 Uses variable-length encoding. uint32 int int/long uint64 Uses variable-length encoding. uint64 long int/long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long sfixed32 Always four bytes. int32 int int sfixed64 Always eight bytes. int64 long int/long bool bool boolean boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode bytes May contain any arbitrary sequence of bytes. string ByteString str","title":"Device Snapshot Types"},{"location":"onos-config/docs/api/types_snapshot_device/#protocol-documentation","text":"","title":"Protocol Documentation"},{"location":"onos-config/docs/api/types_snapshot_device/#table-of-contents","text":"api/types/snapshot/device/types.proto DeviceSnapshot NetworkSnapshotRef Snapshot Scalar Value Types Top","title":"Table of Contents"},{"location":"onos-config/docs/api/types_snapshot_device/#apitypessnapshotdevicetypesproto","text":"","title":"api/types/snapshot/device/types.proto"},{"location":"onos-config/docs/api/types_snapshot_device/#devicesnapshot","text":"DeviceSnapshot is a device snapshot Field Type Label Description id string 'id' is the unique snapshot identifier device_id string 'device_id' is the device to which the snapshot applies device_version string 'device_version' is the version to which the snapshot applies device_type string 'device_type' is an optional device type to which to apply this change revision uint64 'revision' is the request revision number network_snapshot NetworkSnapshotRef 'network_snapshot' is a reference to the network snapshot from which this snapshot was created max_network_change_index uint64 'max_network_change_index' is the maximum network change index to be snapshotted for the device status onos.config.snapshot.Status 'status' is the snapshot status created google.protobuf.Timestamp 'created' is the time at which the configuration was created updated google.protobuf.Timestamp 'updated' is the time at which the configuration was last updated","title":"DeviceSnapshot"},{"location":"onos-config/docs/api/types_snapshot_device/#networksnapshotref","text":"NetworkSnapshotRef is a back reference to the NetworkSnapshot that created a DeviceSnapshot Field Type Label Description id string 'id' is the identifier of the network snapshot from which this snapshot was created index uint64 'index' is the index of the network snapshot from which this snapshot was created","title":"NetworkSnapshotRef"},{"location":"onos-config/docs/api/types_snapshot_device/#snapshot","text":"Snapshot is a snapshot of the state of a single device Field Type Label Description id string 'id' is a unique snapshot identifier device_id string 'device_id' is the device to which the snapshot applies device_version string 'device_version' is the version to which the snapshot applies device_type string 'device_type' is an optional device type to which to apply this change snapshot_id string 'snapshot_id' is the ID of the snapshot change_index uint64 'change_index' is the change index at which the snapshot ended values onos.config.change.device.PathValue repeated 'values' is a list of values to set","title":"Snapshot"},{"location":"onos-config/docs/api/types_snapshot_device/#scalar-value-types","text":".proto Type Notes C++ Type Java Type Python Type double double double float float float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long uint32 Uses variable-length encoding. uint32 int int/long uint64 Uses variable-length encoding. uint64 long int/long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long sfixed32 Always four bytes. int32 int int sfixed64 Always eight bytes. int64 long int/long bool bool boolean boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode bytes May contain any arbitrary sequence of bytes. string ByteString str","title":"Scalar Value Types"},{"location":"onos-config/docs/api/types_snapshot_network/","text":"Protocol Documentation Table of Contents api/types/snapshot/network/types.proto DeviceSnapshotRef NetworkSnapshot Scalar Value Types Top api/types/snapshot/network/types.proto DeviceSnapshotRef DeviceSnapshotRef is a reference to a device snapshot Field Type Label Description device_snapshot_id string 'device_snapshot_id' is the unique identifier of the device snapshot NetworkSnapshot NetworkSnapshot is a snapshot of all network changes Field Type Label Description id string 'id' is the unique snapshot identifier index uint64 'index' is a monotonically increasing, globally unique snapshot index revision uint64 'revision' is the request revision number status onos.config.snapshot.Status 'status' is the snapshot status retention onos.config.snapshot.RetentionOptions 'retention' specifies the duration for which to retain changes created google.protobuf.Timestamp 'created' is the time at which the configuration was created updated google.protobuf.Timestamp 'updated' is the time at which the configuration was last updated refs DeviceSnapshotRef repeated 'refs' is a set of references to stored device snapshots Scalar Value Types .proto Type Notes C++ Type Java Type Python Type double double double float float float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long uint32 Uses variable-length encoding. uint32 int int/long uint64 Uses variable-length encoding. uint64 long int/long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long sfixed32 Always four bytes. int32 int int sfixed64 Always eight bytes. int64 long int/long bool bool boolean boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode bytes May contain any arbitrary sequence of bytes. string ByteString str","title":"Network Snapshot Types"},{"location":"onos-config/docs/api/types_snapshot_network/#protocol-documentation","text":"","title":"Protocol Documentation"},{"location":"onos-config/docs/api/types_snapshot_network/#table-of-contents","text":"api/types/snapshot/network/types.proto DeviceSnapshotRef NetworkSnapshot Scalar Value Types Top","title":"Table of Contents"},{"location":"onos-config/docs/api/types_snapshot_network/#apitypessnapshotnetworktypesproto","text":"","title":"api/types/snapshot/network/types.proto"},{"location":"onos-config/docs/api/types_snapshot_network/#devicesnapshotref","text":"DeviceSnapshotRef is a reference to a device snapshot Field Type Label Description device_snapshot_id string 'device_snapshot_id' is the unique identifier of the device snapshot","title":"DeviceSnapshotRef"},{"location":"onos-config/docs/api/types_snapshot_network/#networksnapshot","text":"NetworkSnapshot is a snapshot of all network changes Field Type Label Description id string 'id' is the unique snapshot identifier index uint64 'index' is a monotonically increasing, globally unique snapshot index revision uint64 'revision' is the request revision number status onos.config.snapshot.Status 'status' is the snapshot status retention onos.config.snapshot.RetentionOptions 'retention' specifies the duration for which to retain changes created google.protobuf.Timestamp 'created' is the time at which the configuration was created updated google.protobuf.Timestamp 'updated' is the time at which the configuration was last updated refs DeviceSnapshotRef repeated 'refs' is a set of references to stored device snapshots","title":"NetworkSnapshot"},{"location":"onos-config/docs/api/types_snapshot_network/#scalar-value-types","text":".proto Type Notes C++ Type Java Type Python Type double double double float float float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long uint32 Uses variable-length encoding. uint32 int int/long uint64 Uses variable-length encoding. uint64 long int/long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long sfixed32 Always four bytes. int32 int int sfixed64 Always eight bytes. int64 long int/long bool bool boolean boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode bytes May contain any arbitrary sequence of bytes. string ByteString str","title":"Scalar Value Types"},{"location":"onos-docs/docs/content/","text":"Open Network Operating System (ONOS) \u00b5ONOS is a code-name for the next generation architecture of ONOS - an open-source SDN control and configuration platform. The \u00b5ONOS architecture is: Natively based on new generation of control and configuration interfaces and standards, e.g. P4/P4Runtime , gNMI/OpenConfig , gNOI Provides basis for zero-touch operations support Implemented in systems-level languages - primarily Go, some C/C++ as necessary Modular and based on established and efficient polyglot interface mechanism - gRPC Composed as a set of micro-services and deployable on cloud and data-center infrastructures - Kubernetes Highly available, dynamically scalable and high performance in terms of throughput (control/config ops/sec) and latency for implementing control-loops Available in ready-to-deploy form with a set of tools required for sustained operation, e.g. Docker images, Helm charts, monitoring and troubleshooting tools, etc. \u00b5ONOS is based on our 5+ years of experience building and deploying ONOS which has been a leader in the SDN control plane space when it comes to high availability, performance and scalability. The platform enables comprehensive set of network operations: Configuration, monitoring and maintenance of network devices for zero touch operation Configuration and programming of the forwarding plane structure (forwarding pipelines specified in P4) Validation of network topology and of forwarding plane behaviour Efficient collection of fine-grained network performance metrics (INT) \u00b5ONOS Deployment Architecture Additional Resources Talks at ONF Connect 2019 \u00b5ONOS Project Overview \u00b5ONOS for Developers Device Configuration in \u00b5ONOS","title":"Open Network Operating System (ONOS)"},{"location":"onos-docs/docs/content/#open-network-operating-system-onos","text":"\u00b5ONOS is a code-name for the next generation architecture of ONOS - an open-source SDN control and configuration platform. The \u00b5ONOS architecture is: Natively based on new generation of control and configuration interfaces and standards, e.g. P4/P4Runtime , gNMI/OpenConfig , gNOI Provides basis for zero-touch operations support Implemented in systems-level languages - primarily Go, some C/C++ as necessary Modular and based on established and efficient polyglot interface mechanism - gRPC Composed as a set of micro-services and deployable on cloud and data-center infrastructures - Kubernetes Highly available, dynamically scalable and high performance in terms of throughput (control/config ops/sec) and latency for implementing control-loops Available in ready-to-deploy form with a set of tools required for sustained operation, e.g. Docker images, Helm charts, monitoring and troubleshooting tools, etc. \u00b5ONOS is based on our 5+ years of experience building and deploying ONOS which has been a leader in the SDN control plane space when it comes to high availability, performance and scalability. The platform enables comprehensive set of network operations: Configuration, monitoring and maintenance of network devices for zero touch operation Configuration and programming of the forwarding plane structure (forwarding pipelines specified in P4) Validation of network topology and of forwarding plane behaviour Efficient collection of fine-grained network performance metrics (INT)","title":"Open Network Operating System (ONOS)"},{"location":"onos-docs/docs/content/#onos-deployment-architecture","text":"","title":"\u00b5ONOS Deployment Architecture"},{"location":"onos-docs/docs/content/#additional-resources","text":"","title":"Additional Resources"},{"location":"onos-docs/docs/content/#talks-at-onf-connect-2019","text":"\u00b5ONOS Project Overview \u00b5ONOS for Developers Device Configuration in \u00b5ONOS","title":"Talks at ONF Connect 2019"},{"location":"onos-docs/docs/content/developers/community-info/","text":"Contacts and Calendars Mailing list The \u00b5ONOS project currently leverages the ONOS developers mailing list: onos-dev@onosproject.org Note We kindly ask to have the start of the subject to be [micro-onos] Slack channel The \u00b5ONOS project has a slack channel in the onosproject slack: #micro-onos . If you want to join the onosproject slack please join here and the subscribe to our channel. Calendar The \u00b5ONOS project leverages the common ONOS calendar which can be found at this link . If you instead would like to add the calendar to your personal Google Calendar, please add the copy the following string onosproject.org_6l261cnjim09dv9sulta3bgcmc@group.calendar.google.com to your external calendar (left bar in the Google Calendar online application). Daily Stand-up The \u00b5ONOS project team holds a short stand-up every day at 10 AM PST, 6 PM GMT, 7 PM CET. Feel free to join to learn what the team is up to and discuss your latest work with us. meeting link Technical Steering Team The technical steering team has PUBLIC and RECORDED meetings at 9 AM PST, 5 PM GMT, 6 PM CET on Wednesday every 2 weeks to discuss different topics. You can find a detailed agenda and next meeting information on the TST Wiki .","title":"Contacts and Calendars"},{"location":"onos-docs/docs/content/developers/community-info/#contacts-and-calendars","text":"","title":"Contacts and Calendars"},{"location":"onos-docs/docs/content/developers/community-info/#mailing-list","text":"The \u00b5ONOS project currently leverages the ONOS developers mailing list: onos-dev@onosproject.org Note We kindly ask to have the start of the subject to be [micro-onos]","title":"Mailing list"},{"location":"onos-docs/docs/content/developers/community-info/#slack-channel","text":"The \u00b5ONOS project has a slack channel in the onosproject slack: #micro-onos . If you want to join the onosproject slack please join here and the subscribe to our channel.","title":"Slack channel"},{"location":"onos-docs/docs/content/developers/community-info/#calendar","text":"The \u00b5ONOS project leverages the common ONOS calendar which can be found at this link . If you instead would like to add the calendar to your personal Google Calendar, please add the copy the following string onosproject.org_6l261cnjim09dv9sulta3bgcmc@group.calendar.google.com to your external calendar (left bar in the Google Calendar online application).","title":"Calendar"},{"location":"onos-docs/docs/content/developers/community-info/#daily-stand-up","text":"The \u00b5ONOS project team holds a short stand-up every day at 10 AM PST, 6 PM GMT, 7 PM CET. Feel free to join to learn what the team is up to and discuss your latest work with us. meeting link","title":"Daily Stand-up"},{"location":"onos-docs/docs/content/developers/community-info/#technical-steering-team","text":"The technical steering team has PUBLIC and RECORDED meetings at 9 AM PST, 5 PM GMT, 6 PM CET on Wednesday every 2 weeks to discuss different topics. You can find a detailed agenda and next meeting information on the TST Wiki .","title":"Technical Steering Team"},{"location":"onos-docs/docs/content/developers/contributing/","text":"Contributing to onosproject The ONOS team hopes for and welcomes contributions from the community at large. To become a contributor, you will first need to sign a CLA. After that, simply follow the process outlined below for submitting your patches on GitHub. Workflow Contributions are accepted via GitHub Pull Requests submitted from the developer's own Fork of the onos-config repository. The following diagram illustrates the steps required to establish such a Fork and to create a Pull Request. In the following subsections, we explain the contribution workflow for one of the repositories, namely onos-config . The same workflow can be used for all the other repos under onosproject . In the following examples just substitute any onos-config reference with the name of the repo you are working on, such as onos-topo or simulators . Any step that do not have onos-config in them can be used as is. 1. Fork on GitHub Visit https://github.com/onosproject/onos-config Click Fork button (top right) to establish your own GitHub repository fork. 2. Clone Fork The onos-config code should be placed under your GOPATH (per Go workspace conventions ) using the following procedure: If you have not set and exported the GOPATH environment variable, please do so: export GOPATH = $( go env GOPATH ) Similarly, set and export the GIT_USER environment variable to match your github profile name: export GIT_USER ={ your github profile name } Then, clone your fork of the onos-config repository: ONOS_ROOT = $GOPATH /src/github.com/onosproject mkdir -p $ONOS_ROOT && cd $ONOS_ROOT git clone https://github.com/ $GIT_USER /onos-config.git # or: git clone git@github.com:$GIT_USER/onos-config.git cd $ONOS_ROOT /onos-config git remote add upstream https://github.com/onosproject/onos-config.git # or: git remote add upstream git@github.com:onosproject/onos-config.git # Never push to upstream master git remote set-url --push upstream no_push # Confirm that your remotes make sense: git remote -v 3. Branch Get your local master up to date: cd $GOPATH /src/github.com/onosproject/onos-config git fetch upstream git checkout master git rebase upstream/master Branch from it: git checkout -b myfeature Then edit code on the myfeature branch. 4. Keep Branch in Sync While on your myfeature branch git fetch upstream git rebase upstream/master Please don't use git pull instead of the above fetch / rebase . git pull does a merge, which leaves merge commits. These make the commit history messy and violate the principle that commits ought to be individually understandable and useful (see below). You can also consider changing your .git/config file via git config branch.autoSetupRebase always to change the behavior of git pull . 5. Commit Commit your changes. git commit If you make other changes pleas add them to a new commit and thus keep the history of your work. Your branch, after you open a pull request, will be merged with a squash and commit strategy, thus showing as only one commit. 6. Push When ready to review (or just to establish an offsite backup or your work), push your branch to your fork on github.com : git push origin myfeature 7. Create a Pull Request Visit your fork at https://github.com/$user/onos-config Click the Compare & Pull Request button next to your myfeature branch. Please follow the pull request guidelines . If you have upstream write access , please refrain from using the GitHub UI for creating PRs, because GitHub will create the PR branch inside the main repository rather than inside your fork. Get a Code Review Once your pull request has been opened it will be assigned to one or more reviewers. Those reviewers will do a thorough code review, looking for correctness, bugs, opportunities for improvement, documentation and comments, and style. Commit changes made in response to review comments to the same branch on your fork. Very small PRs are easy to review. Very large PRs are very difficult to review. Squash and Merge Upon merge (by either you or your reviewer), all commits left on the review branch should represent meaningful milestones or units of work. Use commits to add clarity to the development and review process. Before merging a PR, squash any fix review feedback , typo , merged , and rebased sorts of commits. It is not imperative that every commit in a PR compile and pass tests independently, but it is worth striving for. In particular, if you happened to have used git merge and have merge commits, please squash those away: they do not meet the above test. A nifty way to manage the commits in your PR is to do an interactive rebase , which will let you tell git what to do with every commit: git fetch upstream git rebase -i upstream/master For mass automated fixups (e.g. automated doc formatting), use one or more commits for the changes to tooling and a final commit to apply the fixup en masse. This makes reviews easier. How to Revert a Commit In case you wish to revert a commit, use the following instructions. If you have upstream write access , please refrain from using the Revert button in the GitHub UI for creating the PR, because GitHub will create the PR branch inside the main repository rather than inside your fork. 1. Create a branch and sync it with upstream # create a branch git checkout -b myrevert # sync the branch with upstream git fetch upstream git rebase upstream/master 2. Revert the prior commit(s) If the commit you wish to revert it a merge commit, run this: # SHA is the hash of the merge commit you wish to revert git revert -m 1 SHA If it is a single commit, then run the following: # SHA is the hash of the single commit you wish to revert git revert SHA The above will create a new commit reverting the changes. 3. Push this new commit to your remote git push ${ your_remote_name } myrevert 4. Create a pull request using this branch Community Guidelines This project follows Google's Open Source Community Guidelines . Contributing to ONOS Docs See documentation.md for details on how to add to the documentation.","title":"Contribution Guidelines"},{"location":"onos-docs/docs/content/developers/contributing/#contributing-to-onosproject","text":"The ONOS team hopes for and welcomes contributions from the community at large. To become a contributor, you will first need to sign a CLA. After that, simply follow the process outlined below for submitting your patches on GitHub.","title":"Contributing to onosproject"},{"location":"onos-docs/docs/content/developers/contributing/#workflow","text":"Contributions are accepted via GitHub Pull Requests submitted from the developer's own Fork of the onos-config repository. The following diagram illustrates the steps required to establish such a Fork and to create a Pull Request. In the following subsections, we explain the contribution workflow for one of the repositories, namely onos-config . The same workflow can be used for all the other repos under onosproject . In the following examples just substitute any onos-config reference with the name of the repo you are working on, such as onos-topo or simulators . Any step that do not have onos-config in them can be used as is.","title":"Workflow"},{"location":"onos-docs/docs/content/developers/contributing/#1-fork-on-github","text":"Visit https://github.com/onosproject/onos-config Click Fork button (top right) to establish your own GitHub repository fork.","title":"1. Fork on GitHub"},{"location":"onos-docs/docs/content/developers/contributing/#2-clone-fork","text":"The onos-config code should be placed under your GOPATH (per Go workspace conventions ) using the following procedure: If you have not set and exported the GOPATH environment variable, please do so: export GOPATH = $( go env GOPATH ) Similarly, set and export the GIT_USER environment variable to match your github profile name: export GIT_USER ={ your github profile name } Then, clone your fork of the onos-config repository: ONOS_ROOT = $GOPATH /src/github.com/onosproject mkdir -p $ONOS_ROOT && cd $ONOS_ROOT git clone https://github.com/ $GIT_USER /onos-config.git # or: git clone git@github.com:$GIT_USER/onos-config.git cd $ONOS_ROOT /onos-config git remote add upstream https://github.com/onosproject/onos-config.git # or: git remote add upstream git@github.com:onosproject/onos-config.git # Never push to upstream master git remote set-url --push upstream no_push # Confirm that your remotes make sense: git remote -v","title":"2. Clone Fork"},{"location":"onos-docs/docs/content/developers/contributing/#3-branch","text":"Get your local master up to date: cd $GOPATH /src/github.com/onosproject/onos-config git fetch upstream git checkout master git rebase upstream/master Branch from it: git checkout -b myfeature Then edit code on the myfeature branch.","title":"3. Branch"},{"location":"onos-docs/docs/content/developers/contributing/#4-keep-branch-in-sync","text":"While on your myfeature branch git fetch upstream git rebase upstream/master Please don't use git pull instead of the above fetch / rebase . git pull does a merge, which leaves merge commits. These make the commit history messy and violate the principle that commits ought to be individually understandable and useful (see below). You can also consider changing your .git/config file via git config branch.autoSetupRebase always to change the behavior of git pull .","title":"4. Keep Branch in Sync"},{"location":"onos-docs/docs/content/developers/contributing/#5-commit","text":"Commit your changes. git commit If you make other changes pleas add them to a new commit and thus keep the history of your work. Your branch, after you open a pull request, will be merged with a squash and commit strategy, thus showing as only one commit.","title":"5. Commit"},{"location":"onos-docs/docs/content/developers/contributing/#6-push","text":"When ready to review (or just to establish an offsite backup or your work), push your branch to your fork on github.com : git push origin myfeature","title":"6. Push"},{"location":"onos-docs/docs/content/developers/contributing/#7-create-a-pull-request","text":"Visit your fork at https://github.com/$user/onos-config Click the Compare & Pull Request button next to your myfeature branch. Please follow the pull request guidelines . If you have upstream write access , please refrain from using the GitHub UI for creating PRs, because GitHub will create the PR branch inside the main repository rather than inside your fork.","title":"7. Create a Pull Request"},{"location":"onos-docs/docs/content/developers/contributing/#get-a-code-review","text":"Once your pull request has been opened it will be assigned to one or more reviewers. Those reviewers will do a thorough code review, looking for correctness, bugs, opportunities for improvement, documentation and comments, and style. Commit changes made in response to review comments to the same branch on your fork. Very small PRs are easy to review. Very large PRs are very difficult to review.","title":"Get a Code Review"},{"location":"onos-docs/docs/content/developers/contributing/#squash-and-merge","text":"Upon merge (by either you or your reviewer), all commits left on the review branch should represent meaningful milestones or units of work. Use commits to add clarity to the development and review process. Before merging a PR, squash any fix review feedback , typo , merged , and rebased sorts of commits. It is not imperative that every commit in a PR compile and pass tests independently, but it is worth striving for. In particular, if you happened to have used git merge and have merge commits, please squash those away: they do not meet the above test. A nifty way to manage the commits in your PR is to do an interactive rebase , which will let you tell git what to do with every commit: git fetch upstream git rebase -i upstream/master For mass automated fixups (e.g. automated doc formatting), use one or more commits for the changes to tooling and a final commit to apply the fixup en masse. This makes reviews easier.","title":"Squash and Merge"},{"location":"onos-docs/docs/content/developers/contributing/#how-to-revert-a-commit","text":"In case you wish to revert a commit, use the following instructions. If you have upstream write access , please refrain from using the Revert button in the GitHub UI for creating the PR, because GitHub will create the PR branch inside the main repository rather than inside your fork.","title":"How to Revert a Commit"},{"location":"onos-docs/docs/content/developers/contributing/#1-create-a-branch-and-sync-it-with-upstream","text":"# create a branch git checkout -b myrevert # sync the branch with upstream git fetch upstream git rebase upstream/master","title":"1. Create a branch and sync it with upstream"},{"location":"onos-docs/docs/content/developers/contributing/#2-revert-the-prior-commits","text":"If the commit you wish to revert it a merge commit, run this: # SHA is the hash of the merge commit you wish to revert git revert -m 1 SHA If it is a single commit, then run the following: # SHA is the hash of the single commit you wish to revert git revert SHA The above will create a new commit reverting the changes.","title":"2. Revert the prior commit(s)"},{"location":"onos-docs/docs/content/developers/contributing/#3-push-this-new-commit-to-your-remote","text":"git push ${ your_remote_name } myrevert","title":"3. Push this new commit to your remote"},{"location":"onos-docs/docs/content/developers/contributing/#4-create-a-pull-request-using-this-branch","text":"","title":"4. Create a pull request using this branch"},{"location":"onos-docs/docs/content/developers/contributing/#community-guidelines","text":"This project follows Google's Open Source Community Guidelines .","title":"Community Guidelines"},{"location":"onos-docs/docs/content/developers/contributing/#contributing-to-onos-docs","text":"See documentation.md for details on how to add to the documentation.","title":"Contributing to ONOS Docs"},{"location":"onos-docs/docs/content/developers/deploy_on_gcp/","text":"Deploying onos micro-services on GCP with HELM This page provides a set of instructions to deploy micro-onos with HELM on the Google Compute Platform, a.k.a. GCP . Prerequisites The following set of instruction assumes: Google cloud account is set-up, configured and working. Google cloud SDK is installed and as per SDK Install instructions. kubectl CLI tool is installed and working as expected. Create a project (optional) To create and use kubernetes cluster on GCP you'll need to have a GCP project. If you already have a project configured that you can use feel free to skip this step. To create a project google provides a set of Project instructions please follow them and name your project as you prefer. For consistency this guide will use micro-onos In short: gcloud projects create micro-onos Initialize your gcloud environment with account, project and region Intitialize To prime your environment: gcloud init Account when prompted to login please select the same account as the one you have the GCP setup. An example is as following: You must log in to continue . Would you like to log in ( Y/n ) ? Y You are logged in as: [ andrea@opennetworking.org ] . Project When prompted to pick the project to work with select the one you have created, in our case micro-onos . Pick cloud project to use: [ 1 ] micro-onos [ 2 ] Create a new project Please enter numeric choice or text value ( must exactly match list item ) : 1 Your current project has been set to: [ micro-onos ] . Region When prompted for the region Do you want to configure a default Compute Region and Zone? ( Y/n ) ? you can leave it to gcloud to manage it or set it youself. If n you select the list of regions can be retreived by gcloud compute regions list Create a Kubernetes cluster To create your kubernetes cluster in the micro-onos cluster: gcloud container clusters create micro-onos-cluster \\ --enable-stackdriver-kubernetes \\ --subnetwork default \\ --num-nodes 2 This will create a micro-onos-cluster with 2 nodes and logging enabled. The output of should look something like: Created [ https://container.googleapis.com/v1/projects/micro-onos/zones/europe-west1/clusters/micro-onos-cluster ] . To inspect the contents of your cluster, go to: https://console.cloud.google.com/kubernetes/workload_/gcloud/europe-west1/micro-onos-cluster?project = micro-onos kubeconfig entry generated for micro-onos-cluster. If you did not let gcloud pick the region you need to add the --region option: gcloud container clusters create micro-onos-cluster \\ --enable-stackdriver-kubernetes \\ --region europe-west1 \\ --subnetwork default \\ --num-nodes 2 Connect and authorize local environment with the cluster To connect your local environment to the newly created micro-onos cluster you need to set the compute zone. gcloud config set compute/zone europe-west1 make sure to have set here the same region the cluster was created in or that you selected at the previous step. You also need to get the credentials gcloud container clusters get-credentials micro-onos-cluster and authenticate gcloud auth application-default login Check cluster status To make sure the cluster is properly created and is accessible: kubectl cluster-info the output should look something like Kubernetes master is running at https://35.187.168.240 GLBCDefaultBackend is running at https://35.187.168.240/api/v1/namespaces/kube-system/services/default-http-backend:http/proxy Heapster is running at https://35.187.168.240/api/v1/namespaces/kube-system/services/heapster/proxy KubeDNS is running at https://35.187.168.240/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy Metrics-server is running at https://35.187.168.240/api/v1/namespaces/kube-system/services/https:metrics-server:/proxy To further debug and diagnose cluster problems, use 'kubectl cluster-info dump' . Deploy micro-onos with Helm Now that you have your K8s cluster on GCP ready and working there is no difference as having any other k8s cluster. To deploy micro-onos you can easily follow the existing instructions on how to deploy with helm . Observe cluster status On the GCP user interface the cluster can be seen Also the services can be monitored. Delete a cluster on GCP After you have concluded your work remeber to delete the GCP cluster you have created not to incur in useless work and payments. gcloud container clusters delete micro-onos-cluster Useful Links and resources K8s with Helm on GCP Google cloud command line overview","title":"Deploy with Helm on GCP"},{"location":"onos-docs/docs/content/developers/deploy_on_gcp/#deploying-onos-micro-services-on-gcp-with-helm","text":"This page provides a set of instructions to deploy micro-onos with HELM on the Google Compute Platform, a.k.a. GCP .","title":"Deploying onos micro-services on GCP with HELM"},{"location":"onos-docs/docs/content/developers/deploy_on_gcp/#prerequisites","text":"The following set of instruction assumes: Google cloud account is set-up, configured and working. Google cloud SDK is installed and as per SDK Install instructions. kubectl CLI tool is installed and working as expected.","title":"Prerequisites"},{"location":"onos-docs/docs/content/developers/deploy_on_gcp/#create-a-project-optional","text":"To create and use kubernetes cluster on GCP you'll need to have a GCP project. If you already have a project configured that you can use feel free to skip this step. To create a project google provides a set of Project instructions please follow them and name your project as you prefer. For consistency this guide will use micro-onos In short: gcloud projects create micro-onos","title":"Create a project (optional)"},{"location":"onos-docs/docs/content/developers/deploy_on_gcp/#initialize-your-gcloud-environment-with-account-project-and-region","text":"","title":"Initialize your gcloud environment with account, project and region"},{"location":"onos-docs/docs/content/developers/deploy_on_gcp/#intitialize","text":"To prime your environment: gcloud init","title":"Intitialize"},{"location":"onos-docs/docs/content/developers/deploy_on_gcp/#account","text":"when prompted to login please select the same account as the one you have the GCP setup. An example is as following: You must log in to continue . Would you like to log in ( Y/n ) ? Y You are logged in as: [ andrea@opennetworking.org ] .","title":"Account"},{"location":"onos-docs/docs/content/developers/deploy_on_gcp/#project","text":"When prompted to pick the project to work with select the one you have created, in our case micro-onos . Pick cloud project to use: [ 1 ] micro-onos [ 2 ] Create a new project Please enter numeric choice or text value ( must exactly match list item ) : 1 Your current project has been set to: [ micro-onos ] .","title":"Project"},{"location":"onos-docs/docs/content/developers/deploy_on_gcp/#region","text":"When prompted for the region Do you want to configure a default Compute Region and Zone? ( Y/n ) ? you can leave it to gcloud to manage it or set it youself. If n you select the list of regions can be retreived by gcloud compute regions list","title":"Region"},{"location":"onos-docs/docs/content/developers/deploy_on_gcp/#create-a-kubernetes-cluster","text":"To create your kubernetes cluster in the micro-onos cluster: gcloud container clusters create micro-onos-cluster \\ --enable-stackdriver-kubernetes \\ --subnetwork default \\ --num-nodes 2 This will create a micro-onos-cluster with 2 nodes and logging enabled. The output of should look something like: Created [ https://container.googleapis.com/v1/projects/micro-onos/zones/europe-west1/clusters/micro-onos-cluster ] . To inspect the contents of your cluster, go to: https://console.cloud.google.com/kubernetes/workload_/gcloud/europe-west1/micro-onos-cluster?project = micro-onos kubeconfig entry generated for micro-onos-cluster. If you did not let gcloud pick the region you need to add the --region option: gcloud container clusters create micro-onos-cluster \\ --enable-stackdriver-kubernetes \\ --region europe-west1 \\ --subnetwork default \\ --num-nodes 2","title":"Create a Kubernetes cluster"},{"location":"onos-docs/docs/content/developers/deploy_on_gcp/#connect-and-authorize-local-environment-with-the-cluster","text":"To connect your local environment to the newly created micro-onos cluster you need to set the compute zone. gcloud config set compute/zone europe-west1 make sure to have set here the same region the cluster was created in or that you selected at the previous step. You also need to get the credentials gcloud container clusters get-credentials micro-onos-cluster and authenticate gcloud auth application-default login","title":"Connect and authorize local environment with the cluster"},{"location":"onos-docs/docs/content/developers/deploy_on_gcp/#check-cluster-status","text":"To make sure the cluster is properly created and is accessible: kubectl cluster-info the output should look something like Kubernetes master is running at https://35.187.168.240 GLBCDefaultBackend is running at https://35.187.168.240/api/v1/namespaces/kube-system/services/default-http-backend:http/proxy Heapster is running at https://35.187.168.240/api/v1/namespaces/kube-system/services/heapster/proxy KubeDNS is running at https://35.187.168.240/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy Metrics-server is running at https://35.187.168.240/api/v1/namespaces/kube-system/services/https:metrics-server:/proxy To further debug and diagnose cluster problems, use 'kubectl cluster-info dump' .","title":"Check cluster status"},{"location":"onos-docs/docs/content/developers/deploy_on_gcp/#deploy-micro-onos-with-helm","text":"Now that you have your K8s cluster on GCP ready and working there is no difference as having any other k8s cluster. To deploy micro-onos you can easily follow the existing instructions on how to deploy with helm .","title":"Deploy micro-onos with Helm"},{"location":"onos-docs/docs/content/developers/deploy_on_gcp/#observe-cluster-status","text":"On the GCP user interface the cluster can be seen Also the services can be monitored.","title":"Observe cluster status"},{"location":"onos-docs/docs/content/developers/deploy_on_gcp/#delete-a-cluster-on-gcp","text":"After you have concluded your work remeber to delete the GCP cluster you have created not to incur in useless work and payments. gcloud container clusters delete micro-onos-cluster","title":"Delete a cluster on GCP"},{"location":"onos-docs/docs/content/developers/deploy_on_gcp/#useful-links-and-resources","text":"K8s with Helm on GCP Google cloud command line overview","title":"Useful Links and resources"},{"location":"onos-docs/docs/content/developers/deploy_with_helm/","text":"Deploying \u00b5ONOS micro-services with HELM One of the goals of the \u00b5ONOS project is to provide simple deployment options that integrate with modern technologies. Deployment configurations can be found in the onos-helm-charts repository . Each onos service has a directory containing its chart. As an example the onos-config chart is in onos-helm-charts/onos-config . Deploying on Kubernetes with Helm Helm is a package manager for Kubernetes that allows projects to provide a collection of templates for all the resources needed to deploy on k8s. ONOS Config provides a Helm chart for deploying a cluster for development and testing. In the future, this chart will be extended for production use. Individual charts or overarching (umbrella) chart The individual components of \u00b5ONOS may be deployed one at a time, or altogether through an overarching (unbrella) Helm chart, or some combination of both. In all cases the prerequisites must be satisfied: Creation of a namespace deployment of Atomix controller in the namespace. The individual components in the umbrella chart are: onos-topo: onos-config: onos-cli: onos-gui: onos-ric: onos-ric-ho: onos-ric-mlb: ran-simulator: nem-monitoring: The choice of which of these is deployed can be chosen at deployment time with an option like: --set import.<component>.enabled=true In this way all, none or some of the components can be deployed together. Resources The Helm chart provides resources for deploying the config service and accessing it over the network, both inside and outside the k8s cluster: Deployment - Provides a template for ONOS Config pods ConfigMap - Provides test configurations for the application Service - Exposes ONOS Config to other applications on the network Secret - Provides TLS certificates for end-to-end encryption Ingress - Optionally provides support for external load balancing Deployment options Local Deployment Setup with KinD To deploy the Helm chart locally: First, you will need Docker to build and deploy an image locally. Install Docker following the Docker installation instructions . Second, install Kind following the instructions . Third, install Helm . On OSX, this Helm can be installed using Brew : brew install kubernetes-helm Once Kind has been installed, start it with kind create cluster Once Kind has started, set your environment to the Kubernetes cluster: export KUBECONFIG = \" $( kind get kubeconfig-path --name = \"kind\" ) \" Bare metal deployment ONOS can also be deployed on a bare metal cluster provisioned with Rancher or equivalent. Kubectl and Helm are can be run from your local PC to control the remote cluster. Prerequisites For any deployment scenario a number of steps must be performed first. The steps below assume the KUBECONFIG environment variable to point kubectl to your cluster. Add the \"CORD\" Helm chart repo The Prometheus and Grafana installations are derived from the CORD Helm charts. Run: helm repo add cord https://charts.opencord.org Check out the Helm charts The helm charts need to be present on your PC. Run: git clone https://github.com/onosproject/onos-helm-charts && cd onos-helm-charts Configure the micro-onos namespace The various onos services can be deployed to any namespace . A \"namespace\" partitions the cluster in to independent islands. For consistency between documentation we are going to use the micro-onos here. To create the micro-onos namespace run: kubectl create namespace micro-onos Deploy Atomix Controller The various onos services leverage Atomix as the distributed store for HA, scale and redundancy. The first thing that needs to be deployed in any onos deployment is the Atomix go controller. To deploy the Atomix controller do: helm install atomix-controller atomix-controller -n micro-onos --set scope = Namespace If you watch the pods you should now see: $ kubectl -n micro-onos get pods NAME READY STATUS RESTARTS AGE atomix-controller-6bb9555f48-fk8kb 1 /1 Running 0 12s Deploy the SD-RAN set of onos services A complete set of onos services can be deployed with just the sd-ran chart . Run the build of dependent charts: helm dep build sd-ran Finally, run the install: helm -n micro-onos install sd-ran sd-ran . \\ --set onos-ric.store.controller = atomix-controller.micro-onos.svc.cluster.local:5679 \\ --set onos-ric.store.raft.backend.image = atomix/local-replica:latest this will deploy onos-ric , onos-ric-ho , onos-ric-mlb , ran-simulator , onos-topo , onos-cli and onos-gui , but not onos-config (as it's not currently needed for SD-RAN). It should give an output like: NAME: sd-ran LAST DEPLOYED: Tue Apr 7 15 :56:45 2020 NAMESPACE: micro-onos STATUS: deployed REVISION: 1 TEST SUITE: None NOTES: Thank you for installing sd-ran Helm chart. Your release is named sd-ran in namespace micro-onos. See https://docs.onosproject.org/developers/deploy_with_helm/ To learn more about the release, try: $ helm -n micro-onos status sd-ran $ helm -n micro-onos get all sd-ran $ watch kubectl -n micro-onos get pods You can attach to: * Onos CLI pod with $ kubectl -n micro-onos exec -it $( kubectl -n micro-onos get pods -l type = cli -o name ) -- /bin/sh * SD-RAN GUI at http://<server_IP>:31180 * Prometheus at http://<server_IP>:31301/targets * Grafana at http://<server_IP>:31300 ( admin/strongpassword ) If you are using KinD as a Kubernetes server, you will have to use a \"port-forward\" to access the GUI, Grafana and Prometheus e.g. $ kubectl -n micro-onos port-forward $( kubectl -n micro-onos get pods -l type = gui -o name ) 8182 :80 and then access the GUI at * http://localhost:8182 Deploy only onos-config and related services Alternatively to install a cluster where you are not interested in SD-RAN and only want onos-config, you could run helm -n micro-onos install sd-ran sd-ran \\ --set onos-ric.store.controller = atomix-controller.micro-onos.svc.cluster.local:5679 \\ --set onos-ric.store.raft.backend.image = atomix/local-replica:latest \\ --set import.onos-config.enabled = true \\ --set import.onos-ric.enabled = false \\ --set import.onos-ric-ho.enabled = false \\ --set import.onos-ric-mlb.enabled = false \\ --set import.ran-simulator.enabled = false \\ --set import.nem-monitoring.enabled = false Maintenance To delete the deployment issue: helm delete -n micro-onos sd-ran If you make changes to one of the charts and want to re-deploy, please first issue helm dependency update sd-ran Deploy single services services You can also deploy each service by itself. Please refer to each service's deployment file to get the exact command for each helm chart. Example for onos-config .","title":"Deploy with Helm"},{"location":"onos-docs/docs/content/developers/deploy_with_helm/#deploying-onos-micro-services-with-helm","text":"One of the goals of the \u00b5ONOS project is to provide simple deployment options that integrate with modern technologies. Deployment configurations can be found in the onos-helm-charts repository . Each onos service has a directory containing its chart. As an example the onos-config chart is in onos-helm-charts/onos-config .","title":"Deploying \u00b5ONOS micro-services with HELM"},{"location":"onos-docs/docs/content/developers/deploy_with_helm/#deploying-on-kubernetes-with-helm","text":"Helm is a package manager for Kubernetes that allows projects to provide a collection of templates for all the resources needed to deploy on k8s. ONOS Config provides a Helm chart for deploying a cluster for development and testing. In the future, this chart will be extended for production use.","title":"Deploying on Kubernetes with Helm"},{"location":"onos-docs/docs/content/developers/deploy_with_helm/#individual-charts-or-overarching-umbrella-chart","text":"The individual components of \u00b5ONOS may be deployed one at a time, or altogether through an overarching (unbrella) Helm chart, or some combination of both. In all cases the prerequisites must be satisfied: Creation of a namespace deployment of Atomix controller in the namespace. The individual components in the umbrella chart are: onos-topo: onos-config: onos-cli: onos-gui: onos-ric: onos-ric-ho: onos-ric-mlb: ran-simulator: nem-monitoring: The choice of which of these is deployed can be chosen at deployment time with an option like: --set import.<component>.enabled=true In this way all, none or some of the components can be deployed together.","title":"Individual charts or overarching (umbrella) chart"},{"location":"onos-docs/docs/content/developers/deploy_with_helm/#resources","text":"The Helm chart provides resources for deploying the config service and accessing it over the network, both inside and outside the k8s cluster: Deployment - Provides a template for ONOS Config pods ConfigMap - Provides test configurations for the application Service - Exposes ONOS Config to other applications on the network Secret - Provides TLS certificates for end-to-end encryption Ingress - Optionally provides support for external load balancing","title":"Resources"},{"location":"onos-docs/docs/content/developers/deploy_with_helm/#deployment-options","text":"","title":"Deployment options"},{"location":"onos-docs/docs/content/developers/deploy_with_helm/#local-deployment-setup-with-kind","text":"To deploy the Helm chart locally: First, you will need Docker to build and deploy an image locally. Install Docker following the Docker installation instructions . Second, install Kind following the instructions . Third, install Helm . On OSX, this Helm can be installed using Brew : brew install kubernetes-helm Once Kind has been installed, start it with kind create cluster Once Kind has started, set your environment to the Kubernetes cluster: export KUBECONFIG = \" $( kind get kubeconfig-path --name = \"kind\" ) \"","title":"Local Deployment Setup with KinD"},{"location":"onos-docs/docs/content/developers/deploy_with_helm/#bare-metal-deployment","text":"ONOS can also be deployed on a bare metal cluster provisioned with Rancher or equivalent. Kubectl and Helm are can be run from your local PC to control the remote cluster.","title":"Bare metal deployment"},{"location":"onos-docs/docs/content/developers/deploy_with_helm/#prerequisites","text":"For any deployment scenario a number of steps must be performed first. The steps below assume the KUBECONFIG environment variable to point kubectl to your cluster.","title":"Prerequisites"},{"location":"onos-docs/docs/content/developers/deploy_with_helm/#add-the-cord-helm-chart-repo","text":"The Prometheus and Grafana installations are derived from the CORD Helm charts. Run: helm repo add cord https://charts.opencord.org","title":"Add the \"CORD\" Helm chart repo"},{"location":"onos-docs/docs/content/developers/deploy_with_helm/#check-out-the-helm-charts","text":"The helm charts need to be present on your PC. Run: git clone https://github.com/onosproject/onos-helm-charts && cd onos-helm-charts","title":"Check out the Helm charts"},{"location":"onos-docs/docs/content/developers/deploy_with_helm/#configure-the-micro-onos-namespace","text":"The various onos services can be deployed to any namespace . A \"namespace\" partitions the cluster in to independent islands. For consistency between documentation we are going to use the micro-onos here. To create the micro-onos namespace run: kubectl create namespace micro-onos","title":"Configure the micro-onos namespace"},{"location":"onos-docs/docs/content/developers/deploy_with_helm/#deploy-atomix-controller","text":"The various onos services leverage Atomix as the distributed store for HA, scale and redundancy. The first thing that needs to be deployed in any onos deployment is the Atomix go controller. To deploy the Atomix controller do: helm install atomix-controller atomix-controller -n micro-onos --set scope = Namespace If you watch the pods you should now see: $ kubectl -n micro-onos get pods NAME READY STATUS RESTARTS AGE atomix-controller-6bb9555f48-fk8kb 1 /1 Running 0 12s","title":"Deploy Atomix Controller"},{"location":"onos-docs/docs/content/developers/deploy_with_helm/#deploy-the-sd-ran-set-of-onos-services","text":"A complete set of onos services can be deployed with just the sd-ran chart . Run the build of dependent charts: helm dep build sd-ran Finally, run the install: helm -n micro-onos install sd-ran sd-ran . \\ --set onos-ric.store.controller = atomix-controller.micro-onos.svc.cluster.local:5679 \\ --set onos-ric.store.raft.backend.image = atomix/local-replica:latest this will deploy onos-ric , onos-ric-ho , onos-ric-mlb , ran-simulator , onos-topo , onos-cli and onos-gui , but not onos-config (as it's not currently needed for SD-RAN). It should give an output like: NAME: sd-ran LAST DEPLOYED: Tue Apr 7 15 :56:45 2020 NAMESPACE: micro-onos STATUS: deployed REVISION: 1 TEST SUITE: None NOTES: Thank you for installing sd-ran Helm chart. Your release is named sd-ran in namespace micro-onos. See https://docs.onosproject.org/developers/deploy_with_helm/ To learn more about the release, try: $ helm -n micro-onos status sd-ran $ helm -n micro-onos get all sd-ran $ watch kubectl -n micro-onos get pods You can attach to: * Onos CLI pod with $ kubectl -n micro-onos exec -it $( kubectl -n micro-onos get pods -l type = cli -o name ) -- /bin/sh * SD-RAN GUI at http://<server_IP>:31180 * Prometheus at http://<server_IP>:31301/targets * Grafana at http://<server_IP>:31300 ( admin/strongpassword ) If you are using KinD as a Kubernetes server, you will have to use a \"port-forward\" to access the GUI, Grafana and Prometheus e.g. $ kubectl -n micro-onos port-forward $( kubectl -n micro-onos get pods -l type = gui -o name ) 8182 :80 and then access the GUI at * http://localhost:8182","title":"Deploy the SD-RAN set of onos services"},{"location":"onos-docs/docs/content/developers/deploy_with_helm/#deploy-only-onos-config-and-related-services","text":"Alternatively to install a cluster where you are not interested in SD-RAN and only want onos-config, you could run helm -n micro-onos install sd-ran sd-ran \\ --set onos-ric.store.controller = atomix-controller.micro-onos.svc.cluster.local:5679 \\ --set onos-ric.store.raft.backend.image = atomix/local-replica:latest \\ --set import.onos-config.enabled = true \\ --set import.onos-ric.enabled = false \\ --set import.onos-ric-ho.enabled = false \\ --set import.onos-ric-mlb.enabled = false \\ --set import.ran-simulator.enabled = false \\ --set import.nem-monitoring.enabled = false","title":"Deploy only onos-config and related services"},{"location":"onos-docs/docs/content/developers/deploy_with_helm/#maintenance","text":"To delete the deployment issue: helm delete -n micro-onos sd-ran If you make changes to one of the charts and want to re-deploy, please first issue helm dependency update sd-ran","title":"Maintenance"},{"location":"onos-docs/docs/content/developers/deploy_with_helm/#deploy-single-services-services","text":"You can also deploy each service by itself. Please refer to each service's deployment file to get the exact command for each helm chart. Example for onos-config .","title":"Deploy single services services"},{"location":"onos-docs/docs/content/developers/dev_workflow/","text":"Developer Workflow Steps outlined in this page assume that the development prerequisites are met. Create Workspace Before making your first contribution, you should follow the steps to create your own GitHub fork and local workspace as outlined in the contributor guide . After this, you can browse the code and start making changes as necessary. Build and Test After you made some changes to the code locally, before opening a pull request you should run a few steps to make sure the code will pass validation by the CI: Run and pass make build Run and pass make test You can find more information on the full build process in the building onos-config document. Submit a Pull Request If the build and the test passed, you can commit your code and open a new pull request as described in more detail in the contributing document. Pull Request Review process The pull request you just opened will be checked by our Travis CI system and reviewed by the community. Once it is approved, it will be merged it with a squash and merge strategy. If you are requested for changes in your pull request please go back and start again with step number 4 in the contributing .","title":"Developer Workflow"},{"location":"onos-docs/docs/content/developers/dev_workflow/#developer-workflow","text":"Steps outlined in this page assume that the development prerequisites are met.","title":"Developer Workflow"},{"location":"onos-docs/docs/content/developers/dev_workflow/#create-workspace","text":"Before making your first contribution, you should follow the steps to create your own GitHub fork and local workspace as outlined in the contributor guide . After this, you can browse the code and start making changes as necessary.","title":"Create Workspace"},{"location":"onos-docs/docs/content/developers/dev_workflow/#build-and-test","text":"After you made some changes to the code locally, before opening a pull request you should run a few steps to make sure the code will pass validation by the CI: Run and pass make build Run and pass make test You can find more information on the full build process in the building onos-config document.","title":"Build and Test"},{"location":"onos-docs/docs/content/developers/dev_workflow/#submit-a-pull-request","text":"If the build and the test passed, you can commit your code and open a new pull request as described in more detail in the contributing document.","title":"Submit a Pull Request"},{"location":"onos-docs/docs/content/developers/dev_workflow/#pull-request-review-process","text":"The pull request you just opened will be checked by our Travis CI system and reviewed by the community. Once it is approved, it will be merged it with a squash and merge strategy. If you are requested for changes in your pull request please go back and start again with step number 4 in the contributing .","title":"Pull Request Review process"},{"location":"onos-docs/docs/content/developers/documentation/","text":"How does onos-docs work? Multi-repo docs is a process that collects docs from multiple repos and publishes them on a single website. \u00b5ONOS project uses the Multi-repo docs process to achieve following design goals: Distributed docs and a centralized representation : Support Documentation as Code - store and version documentation alongside code, or in it's own version controlled repo for each subsystem. In addition, onos-docs repo stores common documents (e.g. developer guidelines) and website related files Easy to maintain : Support adding new projects and their docs in the building and publishing process of onos docs with a minimum effort. Versioning : Support versioning to build different version of docs based on different releases of ONOS subsystems. ONOS Docs Manager Software onos-docs project uses Mkdocs for building the docs website and Travis to publish it on web. To automate the workflow and achieve the above design goals, a software is developed called onos-docs-manager that is written in Golang that automates the following functionalities: Collect docs from multiple repos, organize them, and build the onos-docs website Support versioning of multi-repo docs to build different version of docs based on different releases of ONOS subsystems. Support dynamic navigation layout to change navigation layout automatically per version of docs The onos-docs building and publishing process is illustrated as follows: Note : onos-docs-manager uses some of the utility functions that are implemented part of structor project. How to build and browse onos docs locally? To build and browse onos docs locally, : First, clone onos-docs repo using git clone or follow dev_workflow to setup your workspace for onos-docs repo. To build and browse onos-docs locally run the following commands: bash $ cd onos-docs $ make docs-serve Finally, open your browser and enter the following address: 127.0.0.1:8000 to render onos docs website locally. Note : To build onos docs without rendering the website locally, run the following command: make docs How does onos-docs-manager support versioning and dynamic navigation layout? onos-docs-manager performs the following steps to build onos docs website related files for each version of onos docs: Read and parse the information about each version of docs from a config file . Clone repos and build website (under /site directory) for each version of docs based on the given config file and a specific navigation layout under navigation layouts directory Adding to documentation Documents from the individual repositories of the \u00b5ONOS project (e.g. onos-config, onos-topo) should be maintained in those projects. This documentation will be visible in GitHub for each of these projects individually and also collectively in through mkdocs with the onos-docs project at onos-docs . Github and MkDocs (python based) each use their own renderer of Markdown to display the text in HTML. Authors should ensure their Markdown should work in both situations. Rules for GitHub markdown are at https://guides.github.com/features/mastering-markdown/ Rules for MkDocs (Python) are at https://daringfireball.net/projects/markdown/syntax The rules are mostly the same for both platforms, with the following caveats: With the python interpreter there must be a new empty line before any ordered or unordered list","title":"How does onos-docs work?"},{"location":"onos-docs/docs/content/developers/documentation/#how-does-onos-docs-work","text":"Multi-repo docs is a process that collects docs from multiple repos and publishes them on a single website. \u00b5ONOS project uses the Multi-repo docs process to achieve following design goals: Distributed docs and a centralized representation : Support Documentation as Code - store and version documentation alongside code, or in it's own version controlled repo for each subsystem. In addition, onos-docs repo stores common documents (e.g. developer guidelines) and website related files Easy to maintain : Support adding new projects and their docs in the building and publishing process of onos docs with a minimum effort. Versioning : Support versioning to build different version of docs based on different releases of ONOS subsystems.","title":"How does onos-docs work?"},{"location":"onos-docs/docs/content/developers/documentation/#onos-docs-manager-software","text":"onos-docs project uses Mkdocs for building the docs website and Travis to publish it on web. To automate the workflow and achieve the above design goals, a software is developed called onos-docs-manager that is written in Golang that automates the following functionalities: Collect docs from multiple repos, organize them, and build the onos-docs website Support versioning of multi-repo docs to build different version of docs based on different releases of ONOS subsystems. Support dynamic navigation layout to change navigation layout automatically per version of docs The onos-docs building and publishing process is illustrated as follows: Note : onos-docs-manager uses some of the utility functions that are implemented part of structor project.","title":"ONOS Docs Manager Software"},{"location":"onos-docs/docs/content/developers/documentation/#how-to-build-and-browse-onos-docs-locally","text":"To build and browse onos docs locally, : First, clone onos-docs repo using git clone or follow dev_workflow to setup your workspace for onos-docs repo. To build and browse onos-docs locally run the following commands: bash $ cd onos-docs $ make docs-serve Finally, open your browser and enter the following address: 127.0.0.1:8000 to render onos docs website locally. Note : To build onos docs without rendering the website locally, run the following command: make docs","title":"How to build and browse onos docs locally?"},{"location":"onos-docs/docs/content/developers/documentation/#how-does-onos-docs-manager-support-versioning-and-dynamic-navigation-layout","text":"onos-docs-manager performs the following steps to build onos docs website related files for each version of onos docs: Read and parse the information about each version of docs from a config file . Clone repos and build website (under /site directory) for each version of docs based on the given config file and a specific navigation layout under navigation layouts directory","title":"How does onos-docs-manager support versioning and dynamic navigation layout?"},{"location":"onos-docs/docs/content/developers/documentation/#adding-to-documentation","text":"Documents from the individual repositories of the \u00b5ONOS project (e.g. onos-config, onos-topo) should be maintained in those projects. This documentation will be visible in GitHub for each of these projects individually and also collectively in through mkdocs with the onos-docs project at onos-docs . Github and MkDocs (python based) each use their own renderer of Markdown to display the text in HTML. Authors should ensure their Markdown should work in both situations. Rules for GitHub markdown are at https://guides.github.com/features/mastering-markdown/ Rules for MkDocs (Python) are at https://daringfireball.net/projects/markdown/syntax The rules are mostly the same for both platforms, with the following caveats: With the python interpreter there must be a new empty line before any ordered or unordered list","title":"Adding to documentation"},{"location":"onos-docs/docs/content/developers/godocs/","text":"Links To GoDoc Pages Configuration Subsystem GoDoc Topology Subsystem GoDoc RAN Intelligent Controller GoDoc RAN Simulator GoDoc Command Line Interface Subsystem GoDoc Zero-Touch Provisioning Subsystem GoDoc Common Lib GoDoc Test Tools GoDoc HelmIT Tools GoDoc","title":"GoDoc Pages"},{"location":"onos-docs/docs/content/developers/godocs/#links-to-godoc-pages","text":"Configuration Subsystem GoDoc Topology Subsystem GoDoc RAN Intelligent Controller GoDoc RAN Simulator GoDoc Command Line Interface Subsystem GoDoc Zero-Touch Provisioning Subsystem GoDoc Common Lib GoDoc Test Tools GoDoc HelmIT Tools GoDoc","title":"Links To GoDoc Pages"},{"location":"onos-docs/docs/content/developers/license_goland/","text":"GoLand Copyright Profile Setup GoLand IDE can be configured to automatically include the required Apache 2.0 license text in Go source files. Steps to do this are shown below: Open Preferences window Select Editor->Copyright->Copyright Profiles Click the plus icon Name the new profie onos Cut and paste the text from here into the copyright field Click Apply Open Formatting then Go Click check box for Use Custom Formatting Options Click checkbox Use Line Comment Click Apply Once the new copyright profile is created, it needs to be applied to the project: * Select Editor->Copyright * Choose onos in the Default Project Copyright drop-down list * Click OK","title":"GoLand Copyright Profile Setup"},{"location":"onos-docs/docs/content/developers/license_goland/#goland-copyright-profile-setup","text":"GoLand IDE can be configured to automatically include the required Apache 2.0 license text in Go source files. Steps to do this are shown below: Open Preferences window Select Editor->Copyright->Copyright Profiles Click the plus icon Name the new profie onos Cut and paste the text from here into the copyright field Click Apply Open Formatting then Go Click check box for Use Custom Formatting Options Click checkbox Use Line Comment Click Apply Once the new copyright profile is created, it needs to be applied to the project: * Select Editor->Copyright * Choose onos in the Default Project Copyright drop-down list * Click OK","title":"GoLand Copyright Profile Setup"},{"location":"onos-docs/docs/content/developers/prerequisites/","text":"Development Prerequisites This document provides an overview of the tools and packages needed to work on and to build onos-config. Developers are expected to have these tools installed on the machine where the project is built. Go Tools Since the project is authored mainly in the Go programming language, the project requires Go tools in order to build and execute the code. Go Linters golangci-lint is required to validate that the Go source code complies with the established style guidelines. To install the tool, use this command: curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $( go env GOPATH ) /bin latest The directory ~/go/bin needs to be present in your $PATH environment variable for this to work after being installed Docker Docker is required to build the project Docker images and also to compile *.proto files into Go source files. Local kubernetes environment Some form of local kubernetes development environment is also needed. The core team uses Kind , but there are other options such as Minikube and MicroK8s . Some docker containers may need access to privileged rights e.g. onos-config:debug , onos-topo:debug and opennetworking/mn-stratum and so may not be suited to Kubernetes environments that cannot grant these rights Python 3 Python 3 needs to be installed to run the license checking tool in many on the Makefiles. The version provided by your OS will usually be sufficient Verify it is installed with python3 --version IDE Some form of an integrated development environment is also recommended. The core team uses the GoLand IDE from JetBrains, but there are many other options. Microsoft's Visual Studio Code is one such option and is available as a free download. Note that when using GoLand IDE you should enable integration with Go modules in Preferences -> Go -> Go Modules . License The project requires that all Go source files are properly annotated using the Apache 2.0 License. Since this requirement is enforced by the CI process, it is strongly recommended that developers setup their IDE to include the license text automatically. GoLand IDE can be easily setup to do this and other IDEs will have a similar mechanism.","title":"Development Prerequisites"},{"location":"onos-docs/docs/content/developers/prerequisites/#development-prerequisites","text":"This document provides an overview of the tools and packages needed to work on and to build onos-config. Developers are expected to have these tools installed on the machine where the project is built.","title":"Development Prerequisites"},{"location":"onos-docs/docs/content/developers/prerequisites/#go-tools","text":"Since the project is authored mainly in the Go programming language, the project requires Go tools in order to build and execute the code.","title":"Go Tools"},{"location":"onos-docs/docs/content/developers/prerequisites/#go-linters","text":"golangci-lint is required to validate that the Go source code complies with the established style guidelines. To install the tool, use this command: curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $( go env GOPATH ) /bin latest The directory ~/go/bin needs to be present in your $PATH environment variable for this to work after being installed","title":"Go Linters"},{"location":"onos-docs/docs/content/developers/prerequisites/#docker","text":"Docker is required to build the project Docker images and also to compile *.proto files into Go source files.","title":"Docker"},{"location":"onos-docs/docs/content/developers/prerequisites/#local-kubernetes-environment","text":"Some form of local kubernetes development environment is also needed. The core team uses Kind , but there are other options such as Minikube and MicroK8s . Some docker containers may need access to privileged rights e.g. onos-config:debug , onos-topo:debug and opennetworking/mn-stratum and so may not be suited to Kubernetes environments that cannot grant these rights","title":"Local kubernetes environment"},{"location":"onos-docs/docs/content/developers/prerequisites/#python-3","text":"Python 3 needs to be installed to run the license checking tool in many on the Makefiles. The version provided by your OS will usually be sufficient Verify it is installed with python3 --version","title":"Python 3"},{"location":"onos-docs/docs/content/developers/prerequisites/#ide","text":"Some form of an integrated development environment is also recommended. The core team uses the GoLand IDE from JetBrains, but there are many other options. Microsoft's Visual Studio Code is one such option and is available as a free download. Note that when using GoLand IDE you should enable integration with Go modules in Preferences -> Go -> Go Modules .","title":"IDE"},{"location":"onos-docs/docs/content/developers/prerequisites/#license","text":"The project requires that all Go source files are properly annotated using the Apache 2.0 License. Since this requirement is enforced by the CI process, it is strongly recommended that developers setup their IDE to include the license text automatically. GoLand IDE can be easily setup to do this and other IDEs will have a similar mechanism.","title":"License"},{"location":"onos-docs/docs/content/developers/pull_requests/","text":"Issues and Pull Requests The onos-config project uses GitHub Issues to track work items and bugs that were discovered. Instructions on this page show how to relate Issues to Pull Requests during the development workflow. Issues Issues are units of work to be done in the onos project and can represent new features to be developed or defects to be fixed. Find an Issue You can browse through the existing issues or you can search for a specific one. Open an Issue If you want to work on a new feature that is not yet tracked, please create a new issue to represent the work and assign it to an appropriate project, e.g. Core, Northbound. Work on an Issue After you found or created an issue to work on (e.g. for onos-config project), you should: assign that issue to yourself go to the projects select the project you have assigned the issue to drag and drop the issue to the In Progress column to let people know that you are working on it Pull Requests This section describes how to open a pull request and assign it to one of the several projects in onos-config. Reference an Issue from Your Commit If you have an issue identifying your work in onos-config issues , To automatically link your pull request an issue, before pushing a commit to your fork of onos-config please insert fixes #<issue-number> into the commit message. The following is an example of a complete commit message: Adding pull request workflow Fixes # 90 # Please enter the commit message for your changes . Lines starting # with '#' will be ignored , and an empty message aborts the commit . # # Date : Fri May 10 11 : 36 : 26 2019 + 0200 # # On branch pr - process # Changes to be committed : # new file : docs / Pull_requests . md # # Changes not staged for commit : # modified : docs / Pull_requests . md # Open a Pull Request When you open a pull request for myfeature you need to add the PR to a project (e.g. Northbound) through the github UI. Please also assign a reviewer out of the suggested ones. If none are suggested please pick one from the core team. More information on opening pull requests can be found in the GitHub documentation . Track a Pull Request After your pull request is included into a onos-config project you can find it under the In Progress tab. At this point in time the PR will go through a lifecycle: Review from different people --> your PR will go into Review in progress state if changes are requested you will have to go back and address them when your PR is approved and Testing is passed it will go under Reviewer approved state after the PR is in Reviewer approved it can be merged when the PR is merged both the PR and the issue will move under Done state","title":"Issues and Pull Requests"},{"location":"onos-docs/docs/content/developers/pull_requests/#issues-and-pull-requests","text":"The onos-config project uses GitHub Issues to track work items and bugs that were discovered. Instructions on this page show how to relate Issues to Pull Requests during the development workflow.","title":"Issues and Pull Requests"},{"location":"onos-docs/docs/content/developers/pull_requests/#issues","text":"Issues are units of work to be done in the onos project and can represent new features to be developed or defects to be fixed.","title":"Issues"},{"location":"onos-docs/docs/content/developers/pull_requests/#find-an-issue","text":"You can browse through the existing issues or you can search for a specific one.","title":"Find an Issue"},{"location":"onos-docs/docs/content/developers/pull_requests/#open-an-issue","text":"If you want to work on a new feature that is not yet tracked, please create a new issue to represent the work and assign it to an appropriate project, e.g. Core, Northbound.","title":"Open an Issue"},{"location":"onos-docs/docs/content/developers/pull_requests/#work-on-an-issue","text":"After you found or created an issue to work on (e.g. for onos-config project), you should: assign that issue to yourself go to the projects select the project you have assigned the issue to drag and drop the issue to the In Progress column to let people know that you are working on it","title":"Work on an Issue"},{"location":"onos-docs/docs/content/developers/pull_requests/#pull-requests","text":"This section describes how to open a pull request and assign it to one of the several projects in onos-config.","title":"Pull Requests"},{"location":"onos-docs/docs/content/developers/pull_requests/#reference-an-issue-from-your-commit","text":"If you have an issue identifying your work in onos-config issues , To automatically link your pull request an issue, before pushing a commit to your fork of onos-config please insert fixes #<issue-number> into the commit message. The following is an example of a complete commit message: Adding pull request workflow Fixes # 90 # Please enter the commit message for your changes . Lines starting # with '#' will be ignored , and an empty message aborts the commit . # # Date : Fri May 10 11 : 36 : 26 2019 + 0200 # # On branch pr - process # Changes to be committed : # new file : docs / Pull_requests . md # # Changes not staged for commit : # modified : docs / Pull_requests . md #","title":"Reference an Issue from Your Commit"},{"location":"onos-docs/docs/content/developers/pull_requests/#open-a-pull-request","text":"When you open a pull request for myfeature you need to add the PR to a project (e.g. Northbound) through the github UI. Please also assign a reviewer out of the suggested ones. If none are suggested please pick one from the core team. More information on opening pull requests can be found in the GitHub documentation .","title":"Open a Pull Request"},{"location":"onos-docs/docs/content/developers/pull_requests/#track-a-pull-request","text":"After your pull request is included into a onos-config project you can find it under the In Progress tab. At this point in time the PR will go through a lifecycle: Review from different people --> your PR will go into Review in progress state if changes are requested you will have to go back and address them when your PR is approved and Testing is passed it will go under Reviewer approved state after the PR is in Reviewer approved it can be merged when the PR is merged both the PR and the issue will move under Done state","title":"Track a Pull Request"},{"location":"onos-gui/docs/","text":"onos-gui project GUI for ONOS (\u00b5ONOS Architecture). onos-gui is the GUI application for all of the GUI functionality of \u00b5ONOS. It provides GUI interfaces for all of the core projects such as onos-config onos-topo onos-control (future) onos-ric The list of GUI views in the Navigation menu is dependent on the services running in Kubernetes. If a service is stopped the option will disappear from the menu. If the current view's service is stopped, the Nav menu can be used to change to another view without refreshing. Deploying and Running the GUI onos-gui can only be run in a Kubernetes cluster. Use the Helm Chart to load it. Browser access When deployed, the onos-gui is available to a browser by forwarding port 80 by running: kubectl -n onos port-forward $( kubectl -n onos get pods -l type = gui -o name ) 8182 :80 See Helm Chart for other options. Architecture See Architecture for an architectural description.","title":"ONOS-GUI Subsystem"},{"location":"onos-gui/docs/#onos-gui-project","text":"GUI for ONOS (\u00b5ONOS Architecture). onos-gui is the GUI application for all of the GUI functionality of \u00b5ONOS. It provides GUI interfaces for all of the core projects such as onos-config onos-topo onos-control (future) onos-ric The list of GUI views in the Navigation menu is dependent on the services running in Kubernetes. If a service is stopped the option will disappear from the menu. If the current view's service is stopped, the Nav menu can be used to change to another view without refreshing.","title":"onos-gui project"},{"location":"onos-gui/docs/#deploying-and-running-the-gui","text":"onos-gui can only be run in a Kubernetes cluster. Use the Helm Chart to load it.","title":"Deploying and Running the GUI"},{"location":"onos-gui/docs/#browser-access","text":"When deployed, the onos-gui is available to a browser by forwarding port 80 by running: kubectl -n onos port-forward $( kubectl -n onos get pods -l type = gui -o name ) 8182 :80 See Helm Chart for other options.","title":"Browser access"},{"location":"onos-gui/docs/#architecture","text":"See Architecture for an architectural description.","title":"Architecture"},{"location":"onos-gui/docs/architecture/","text":"onos-gui Architecture The GUI is architected as a Cloud Native application to be run on Kubernetes accessing the back end modules through gRPC (and in the case of the Config GUI mostly through gNMI). The main front end technology is Angular and is supplemented by gRPC Web to access the back through a gRPC proxy. Nginx acts as a web server and web Proxy, while Envoy proxy server acts as a grpc-web proxy and all are deployed on Kubernetes . While 2 proxies seem to be an overhead, it is unavoidable at present because: nginx cannot do the grpc-web proxying (while there was a module written for nginx in the grpc-web project, this does not work with anything beyond nginx v1.14.2) Envoy cannot load static web pages, and so nginx is required to perform this role Alternatives to grpc-web There are some alternatives to using grpc-web to allow web browsers to access gRPC directly, but grpc-web is the recommended solution as per the gRPC website . See also this article on hacker noon . Access to Kubernetes API An instance of kubectl proxy runs inside the onos-gui pod alongside nginx . This exposes the Kubernetes REST API on port 8001. The nginx server then proxies that to http://localhost:80/kubernetes-api The application can then access the API like: HTTP GET http://localhost:80/kubernetes-api/api/v1/namespaces/onos/services The onos-gui pod needs to be given RBAC permission of list and get to be able to read these services. This is granted in the Helm Chart.","title":"GUI Architecture"},{"location":"onos-gui/docs/architecture/#onos-gui-architecture","text":"The GUI is architected as a Cloud Native application to be run on Kubernetes accessing the back end modules through gRPC (and in the case of the Config GUI mostly through gNMI). The main front end technology is Angular and is supplemented by gRPC Web to access the back through a gRPC proxy. Nginx acts as a web server and web Proxy, while Envoy proxy server acts as a grpc-web proxy and all are deployed on Kubernetes . While 2 proxies seem to be an overhead, it is unavoidable at present because: nginx cannot do the grpc-web proxying (while there was a module written for nginx in the grpc-web project, this does not work with anything beyond nginx v1.14.2) Envoy cannot load static web pages, and so nginx is required to perform this role","title":"onos-gui Architecture"},{"location":"onos-gui/docs/architecture/#alternatives-to-grpc-web","text":"There are some alternatives to using grpc-web to allow web browsers to access gRPC directly, but grpc-web is the recommended solution as per the gRPC website . See also this article on hacker noon .","title":"Alternatives to grpc-web"},{"location":"onos-gui/docs/architecture/#access-to-kubernetes-api","text":"An instance of kubectl proxy runs inside the onos-gui pod alongside nginx . This exposes the Kubernetes REST API on port 8001. The nginx server then proxies that to http://localhost:80/kubernetes-api The application can then access the API like: HTTP GET http://localhost:80/kubernetes-api/api/v1/namespaces/onos/services The onos-gui pod needs to be given RBAC permission of list and get to be able to read these services. This is granted in the Helm Chart.","title":"Access to Kubernetes API"},{"location":"onos-gui/docs/config-gui/","text":"Configuration GUI The configuration GUI reflects configuration changes made in to onos-config. Dashboard View The Dashboard view is the default, and shows all the devices and their network changes in a tabular layout. Other views are available through the menu on the top left or through hyperlinks (e.g. on the device). A corresponding Details view shows individual details Rollback of the last NetworkChange Compaction of NetworkChange s older than a certain time (24 hours by default) Access to a Device View through a link Device View Device View is a graphical layout that shows the entire configuration of the device in a tree view. It contains a panel that lists all of the DeviceChanges that have happened to the device. Each of these can be hidden or displayed (like a layer) that can be used to see the history of config changes. An additional layer shows the Snapshot for that device Another layer shows the Operational State (from the OpState cache) when connected to a real device Another layer shows all of the configurable (Read Write) paths possible for the device. Zoom and Pan functions are also available within the graphical view Model View Model View is a tabular layout that shows the list of Model Plugins loaded in the system. A details view shows the list of YANG models for that Model Plugin. Developer information Implementation When the Config view dashboard is loaded: A grpc-web request is formed and sent as a POST to http://10.152.183.121/onos-config/onos.config.diags.ChangeService/ListNetworkChanges This is forwarded by a proxy_pass declaration in nginx.conf to http://localhost:8081 This is converted in to a gRPC request by Envoy Proxy server's grpc-web filter and is forwarded to https://onos-config:5150 as a gRPC request onos-config sends back the response to envoy asynchronously as a gRPC response Envoy's grpc-web service turns it in to a grpc-web response and sends it back to nginx nginx sends the response back to the browser and the callback function is called Inside the browser the callback updates the networkChanges object inside the ConfigDashboardComponent the binding in the config-dashboard.component.html page is alerted to the updated value and refreshes the display similar calls are made to load the snapshots and devices","title":"Configuration GUI"},{"location":"onos-gui/docs/config-gui/#configuration-gui","text":"The configuration GUI reflects configuration changes made in to onos-config.","title":"Configuration GUI"},{"location":"onos-gui/docs/config-gui/#dashboard-view","text":"The Dashboard view is the default, and shows all the devices and their network changes in a tabular layout. Other views are available through the menu on the top left or through hyperlinks (e.g. on the device). A corresponding Details view shows individual details Rollback of the last NetworkChange Compaction of NetworkChange s older than a certain time (24 hours by default) Access to a Device View through a link","title":"Dashboard View"},{"location":"onos-gui/docs/config-gui/#device-view","text":"Device View is a graphical layout that shows the entire configuration of the device in a tree view. It contains a panel that lists all of the DeviceChanges that have happened to the device. Each of these can be hidden or displayed (like a layer) that can be used to see the history of config changes. An additional layer shows the Snapshot for that device Another layer shows the Operational State (from the OpState cache) when connected to a real device Another layer shows all of the configurable (Read Write) paths possible for the device. Zoom and Pan functions are also available within the graphical view","title":"Device View"},{"location":"onos-gui/docs/config-gui/#model-view","text":"Model View is a tabular layout that shows the list of Model Plugins loaded in the system. A details view shows the list of YANG models for that Model Plugin.","title":"Model View"},{"location":"onos-gui/docs/config-gui/#developer-information","text":"","title":"Developer information"},{"location":"onos-gui/docs/config-gui/#implementation","text":"When the Config view dashboard is loaded: A grpc-web request is formed and sent as a POST to http://10.152.183.121/onos-config/onos.config.diags.ChangeService/ListNetworkChanges This is forwarded by a proxy_pass declaration in nginx.conf to http://localhost:8081 This is converted in to a gRPC request by Envoy Proxy server's grpc-web filter and is forwarded to https://onos-config:5150 as a gRPC request onos-config sends back the response to envoy asynchronously as a gRPC response Envoy's grpc-web service turns it in to a grpc-web response and sends it back to nginx nginx sends the response back to the browser and the callback function is called Inside the browser the callback updates the networkChanges object inside the ConfigDashboardComponent the binding in the config-dashboard.component.html page is alerted to the updated value and refreshes the display similar calls are made to load the snapshots and devices","title":"Implementation"},{"location":"onos-gui/docs/deployment/","text":"Deploying and running onos-gui with Helm This guide deploys onos-gui through it's Helm chart and assumes you have a Kubernetes cluster running with an atomix controller deployed in a namespace. onos-gui Helm chart is based on Helm 3.0 version, with no need for the Tiller pod to be present. The onos-gui deployment consists of 2 containers: onos-gui - containing an nginx web server, kubectl and the compiled GUI onos-envoy - containing a grpc-web proxy for connecting to onos-topo, onos-config etc. If you don't have a cluster running and want to try on your local machine please follow first the Kubernetes setup steps outlined in deploy with Helm . The following steps assume you have the setup outlined in that page, including the micro-onos namespace configured. Note: if deploying the GUI on top of onit that its default namespace is onos , so any mention of micro-onos below should be replaced with onos The GUI can also be installed on a test pod by referring to its cluster name Installing the Chart To install the chart in the micro-onos namespace run from the root directory of the onos-helm-charts repo the command: helm install -n micro-onos onos-gui onos-gui The output should be like: NAME: onos-gui LAST DEPLOYED: Sun Dec 8 19 :40:39 2019 NAMESPACE: micro-onos STATUS: deployed REVISION: 1 TEST SUITE: None helm install assigns a unique name to the chart and displays all the k8s resources that were created by it. To list the charts that are installed and view their statuses, run helm ls -n micro-onos : helm ls -n micro-onos NAME REVISION UPDATED STATUS CHART APP VERSION NAMESPACE ... onos-gui 1 Sun Dec 8 18 :56:39 2019 DEPLOYED onos-gui-0.1.0 0 .1.0 default Installing the chart in a different namespace. Issue the helm install command substituting micro-onos with your namespace. helm install -n <your_name_space> onos-gui onos-gui Troubleshoot If your chart does not install or the pod is not running for some reason and/or you modified values Helm offers two flags to help you debug your chart: --dry-run check the chart without actually installing the pod. --debug prints out more information about your chart helm install -n micro-onos onos-gui --debug --dry-run onos-gui Also to verify how template values are expanded, run: helm install template onos-gui Uninstalling the chart. To remove the onos-gui pod issue helm delete -n micro-onos onos-gui Pod Information To view the pods that are deployed, run kubectl -n micro-onos get pods . Running the GUI Use the terminal to find the \"GUI Service IP Address\" kubectl -n onos get services -l app.kubernetes.io/instance = onos-gui and open in your browser to access the GUI directly at: http://{GUI Service IP Address} . Accessing the GUI from outside the Kubernetes cluster machine If access is required from another computer, first find the IP address of the external interface of the Kubernetes machine, by running the following in the Kubernetes machine: ip route get <other computer ' s ip address> this might give a response like (in the case where the other machine ip address is 192.168.0.100 ): 192 .168.0.100 dev ens1 src 192 .168.0.2 uid 1000 Here the 5th field 192.168.0.2 is the address of K8s cluster that's facing the \"other computer\". To make the GUI available to the \"other computer\", run the following on the Kubernetes machine: kubectl -n micro-onos port-forward $( kubectl -n micro-onos get pods -l type = gui -o name ) --address 192 .168.0.2 8181 :80 and open in your browser to access the GUI at: http://192.168.0.2:8181 . Developer mode only To run the GUI locally on a development machine install the prerequisites as described in Prerequisites run ONIT in Kubernetes as above Forward the ports of the envoy proxy in 2 separate terminals kubectl -n micro-onos port-forward $( kubectl -n micro-onos get pods -l type = gui -o name ) 8081 Depending on the service you are developing you might want to forward a different ports (or all ports) 8081 is for onos-config 8082 is for onos-topo 8083 is for onos-ric 8084 is for ran-simulator run the Angular CLI in ng serve mode from the web/onos-gui folder browse to http://localhost:4200","title":"How to Deploy and Run with Helm?"},{"location":"onos-gui/docs/deployment/#deploying-and-running-onos-gui-with-helm","text":"This guide deploys onos-gui through it's Helm chart and assumes you have a Kubernetes cluster running with an atomix controller deployed in a namespace. onos-gui Helm chart is based on Helm 3.0 version, with no need for the Tiller pod to be present. The onos-gui deployment consists of 2 containers: onos-gui - containing an nginx web server, kubectl and the compiled GUI onos-envoy - containing a grpc-web proxy for connecting to onos-topo, onos-config etc. If you don't have a cluster running and want to try on your local machine please follow first the Kubernetes setup steps outlined in deploy with Helm . The following steps assume you have the setup outlined in that page, including the micro-onos namespace configured. Note: if deploying the GUI on top of onit that its default namespace is onos , so any mention of micro-onos below should be replaced with onos The GUI can also be installed on a test pod by referring to its cluster name","title":"Deploying and running onos-gui with Helm"},{"location":"onos-gui/docs/deployment/#installing-the-chart","text":"To install the chart in the micro-onos namespace run from the root directory of the onos-helm-charts repo the command: helm install -n micro-onos onos-gui onos-gui The output should be like: NAME: onos-gui LAST DEPLOYED: Sun Dec 8 19 :40:39 2019 NAMESPACE: micro-onos STATUS: deployed REVISION: 1 TEST SUITE: None helm install assigns a unique name to the chart and displays all the k8s resources that were created by it. To list the charts that are installed and view their statuses, run helm ls -n micro-onos : helm ls -n micro-onos NAME REVISION UPDATED STATUS CHART APP VERSION NAMESPACE ... onos-gui 1 Sun Dec 8 18 :56:39 2019 DEPLOYED onos-gui-0.1.0 0 .1.0 default","title":"Installing the Chart"},{"location":"onos-gui/docs/deployment/#installing-the-chart-in-a-different-namespace","text":"Issue the helm install command substituting micro-onos with your namespace. helm install -n <your_name_space> onos-gui onos-gui","title":"Installing the chart in a different namespace."},{"location":"onos-gui/docs/deployment/#troubleshoot","text":"If your chart does not install or the pod is not running for some reason and/or you modified values Helm offers two flags to help you debug your chart: --dry-run check the chart without actually installing the pod. --debug prints out more information about your chart helm install -n micro-onos onos-gui --debug --dry-run onos-gui Also to verify how template values are expanded, run: helm install template onos-gui","title":"Troubleshoot"},{"location":"onos-gui/docs/deployment/#uninstalling-the-chart","text":"To remove the onos-gui pod issue helm delete -n micro-onos onos-gui","title":"Uninstalling the chart."},{"location":"onos-gui/docs/deployment/#pod-information","text":"To view the pods that are deployed, run kubectl -n micro-onos get pods .","title":"Pod Information"},{"location":"onos-gui/docs/deployment/#running-the-gui","text":"Use the terminal to find the \"GUI Service IP Address\" kubectl -n onos get services -l app.kubernetes.io/instance = onos-gui and open in your browser to access the GUI directly at: http://{GUI Service IP Address} .","title":"Running the GUI"},{"location":"onos-gui/docs/deployment/#accessing-the-gui-from-outside-the-kubernetes-cluster-machine","text":"If access is required from another computer, first find the IP address of the external interface of the Kubernetes machine, by running the following in the Kubernetes machine: ip route get <other computer ' s ip address> this might give a response like (in the case where the other machine ip address is 192.168.0.100 ): 192 .168.0.100 dev ens1 src 192 .168.0.2 uid 1000 Here the 5th field 192.168.0.2 is the address of K8s cluster that's facing the \"other computer\". To make the GUI available to the \"other computer\", run the following on the Kubernetes machine: kubectl -n micro-onos port-forward $( kubectl -n micro-onos get pods -l type = gui -o name ) --address 192 .168.0.2 8181 :80 and open in your browser to access the GUI at: http://192.168.0.2:8181 .","title":"Accessing the GUI from outside the Kubernetes cluster machine"},{"location":"onos-gui/docs/deployment/#developer-mode-only","text":"To run the GUI locally on a development machine install the prerequisites as described in Prerequisites run ONIT in Kubernetes as above Forward the ports of the envoy proxy in 2 separate terminals kubectl -n micro-onos port-forward $( kubectl -n micro-onos get pods -l type = gui -o name ) 8081 Depending on the service you are developing you might want to forward a different ports (or all ports) 8081 is for onos-config 8082 is for onos-topo 8083 is for onos-ric 8084 is for ran-simulator run the Angular CLI in ng serve mode from the web/onos-gui folder browse to http://localhost:4200","title":"Developer mode only"},{"location":"onos-gui/docs/prerequisites/","text":"GUI Development Prerequisites This document provides an overview of the tools and packages needed to work on and to build onos-gui. Developers are expected to have these tools installed on the machine where the project is built. Reusing tools from an existing ONOS installation If you already have the legacy ONOS project code checked out and built using Bazel on your system, then you already have all the tools you need. Add the following 2 entries to your $PATH environment variable to give access to the npm and the ng command respectively [bazel output_base]/external/nodejs_linux_amd64/bin/nodejs/bin ~/onos/web/gui2/node_modules/@angular/cli/bin where [bazel output_base] above can be found from running the command: bazel info output_base After setting the PATH it should be possible to see the version of node and npm : node -v npm -v which ng NodeJS If legacy ONOS is not available install the latest Long Term Support version of NodeJS on your system. Downloads are available from https://nodejs.org/en/download/ Please use v10.16.0 or greater Instructions for installing on Linux are at https://github.com/nodejs/help/wiki/Installation After installing it should be possible to see the version of node and npm (which is bundled with it) that you installed with: node -v npm -v Angular CLI If legacy ONOS is not available install Angular CLI to provide the ng tools. Installation instructions are at https://angular.io/guide/setup-local The following command can be run from any folder: npm install -g @angular/cli Checkout the onos-gui code from Git Using a process described contributing.md the Git repo should be forked in your own name on github.com/onosproject/onos-gui . git clone https://github.com/ $GIT_USER /onos-gui.git # or: git clone git@github.com: $GIT_USER /onos-gui.git cd $ONOS_ROOT /onos-gui git remote add upstream https://github.com/onosproject/onos-gui.git # or: git remote add upstream git@github.com:onosproject/onos-gui.git # Never push to upstream master git remote set-url --push upstream no_push # Confirm that your remotes make sense: git remote -v Set up Angular for local development After this install (and after changing to the web/onos-gui folder) it should be possible to see the Angular CLI version: cd web/onos-gui ng version This should give a result like: _ _ ____ _ ___ / \\ _ __ __ _ _ _ | | __ _ _ __ / ___ | | | _ _ | / \u25b3 \\ | '_ \\ / _` | | | | |/ _` | ' __ | | | | | | | / ___ \\| | | | ( _ | | | _ | | | ( _ | | | | | ___ | | ___ | | /_/ \\_\\_ | | _ | \\_ _, | \\_ _,_ | _ | \\_ _,_ | _ | \\_ ___ | _____ | ___ | | ___/ Angular CLI: 8 .3.20 Node: 10 .16.0 OS: linux x64 Angular: 8 .2.14 ... animations, common, compiler, compiler-cli, core, forms ... language-service, platform-browser, platform-browser-dynamic ... router ... Angular dependencies Staying inside the web/onos-gui folder, the Angular dependencies must be installed. This is as simple as running npm install in the folder. This takes the dependencies listed in package.json and installs them in the temporary folder node_modules : npm install Docker Docker is required to build the project Docker images and also to compile *.proto files into TypeScript source files. Local kubernetes environment Some form of local kubernetes development environment is also needed. The core team uses Kind , but there are other options such as Minikube and Microk8s for Ubuntu. The onit (ONOS Integration Test tool) should be used to set up the cluster, or deploy gives more details on a Helm installation. IDE Some form of an integrated development environment that supports Web Development with TypeScript is also recommended. The core team uses the Intellij WebStorm IDE from JetBrains, but there are many other options. The Atom editor is a lightweight solution supporting TypeScript and Git integration. Visual Studio Code is another option that supports TypeScript. License The project requires that all Typescript source files are properly annotated using the Apache 2.0 License. Since this requirement is enforced by the CI process, it is strongly recommended that developers setup their IDE to include the license text automatically.","title":"GUI Development Prerequisites"},{"location":"onos-gui/docs/prerequisites/#gui-development-prerequisites","text":"This document provides an overview of the tools and packages needed to work on and to build onos-gui. Developers are expected to have these tools installed on the machine where the project is built.","title":"GUI Development Prerequisites"},{"location":"onos-gui/docs/prerequisites/#reusing-tools-from-an-existing-onos-installation","text":"If you already have the legacy ONOS project code checked out and built using Bazel on your system, then you already have all the tools you need. Add the following 2 entries to your $PATH environment variable to give access to the npm and the ng command respectively [bazel output_base]/external/nodejs_linux_amd64/bin/nodejs/bin ~/onos/web/gui2/node_modules/@angular/cli/bin where [bazel output_base] above can be found from running the command: bazel info output_base After setting the PATH it should be possible to see the version of node and npm : node -v npm -v which ng","title":"Reusing tools from an existing ONOS installation"},{"location":"onos-gui/docs/prerequisites/#nodejs","text":"If legacy ONOS is not available install the latest Long Term Support version of NodeJS on your system. Downloads are available from https://nodejs.org/en/download/ Please use v10.16.0 or greater Instructions for installing on Linux are at https://github.com/nodejs/help/wiki/Installation After installing it should be possible to see the version of node and npm (which is bundled with it) that you installed with: node -v npm -v","title":"NodeJS"},{"location":"onos-gui/docs/prerequisites/#angular-cli","text":"If legacy ONOS is not available install Angular CLI to provide the ng tools. Installation instructions are at https://angular.io/guide/setup-local The following command can be run from any folder: npm install -g @angular/cli","title":"Angular CLI"},{"location":"onos-gui/docs/prerequisites/#checkout-the-onos-gui-code-from-git","text":"Using a process described contributing.md the Git repo should be forked in your own name on github.com/onosproject/onos-gui . git clone https://github.com/ $GIT_USER /onos-gui.git # or: git clone git@github.com: $GIT_USER /onos-gui.git cd $ONOS_ROOT /onos-gui git remote add upstream https://github.com/onosproject/onos-gui.git # or: git remote add upstream git@github.com:onosproject/onos-gui.git # Never push to upstream master git remote set-url --push upstream no_push # Confirm that your remotes make sense: git remote -v","title":"Checkout the onos-gui code from Git"},{"location":"onos-gui/docs/prerequisites/#set-up-angular-for-local-development","text":"After this install (and after changing to the web/onos-gui folder) it should be possible to see the Angular CLI version: cd web/onos-gui ng version This should give a result like: _ _ ____ _ ___ / \\ _ __ __ _ _ _ | | __ _ _ __ / ___ | | | _ _ | / \u25b3 \\ | '_ \\ / _` | | | | |/ _` | ' __ | | | | | | | / ___ \\| | | | ( _ | | | _ | | | ( _ | | | | | ___ | | ___ | | /_/ \\_\\_ | | _ | \\_ _, | \\_ _,_ | _ | \\_ _,_ | _ | \\_ ___ | _____ | ___ | | ___/ Angular CLI: 8 .3.20 Node: 10 .16.0 OS: linux x64 Angular: 8 .2.14 ... animations, common, compiler, compiler-cli, core, forms ... language-service, platform-browser, platform-browser-dynamic ... router ...","title":"Set up Angular for local development"},{"location":"onos-gui/docs/prerequisites/#angular-dependencies","text":"Staying inside the web/onos-gui folder, the Angular dependencies must be installed. This is as simple as running npm install in the folder. This takes the dependencies listed in package.json and installs them in the temporary folder node_modules : npm install","title":"Angular dependencies"},{"location":"onos-gui/docs/prerequisites/#docker","text":"Docker is required to build the project Docker images and also to compile *.proto files into TypeScript source files.","title":"Docker"},{"location":"onos-gui/docs/prerequisites/#local-kubernetes-environment","text":"Some form of local kubernetes development environment is also needed. The core team uses Kind , but there are other options such as Minikube and Microk8s for Ubuntu. The onit (ONOS Integration Test tool) should be used to set up the cluster, or deploy gives more details on a Helm installation.","title":"Local kubernetes environment"},{"location":"onos-gui/docs/prerequisites/#ide","text":"Some form of an integrated development environment that supports Web Development with TypeScript is also recommended. The core team uses the Intellij WebStorm IDE from JetBrains, but there are many other options. The Atom editor is a lightweight solution supporting TypeScript and Git integration. Visual Studio Code is another option that supports TypeScript.","title":"IDE"},{"location":"onos-gui/docs/prerequisites/#license","text":"The project requires that all Typescript source files are properly annotated using the Apache 2.0 License. Since this requirement is enforced by the CI process, it is strongly recommended that developers setup their IDE to include the license text automatically.","title":"License"},{"location":"onos-gui/docs/ran-gui/","text":"RAN GUI The RAN GUI demonstrates the onos-ric micro-service and the accompanying ran-simulator . UELinks View The UELinks view shows the affinity of a User Equipment device (mobile phone) to cell towers in the network. It presents a tabular layout with Cell Towers across the top and UEs in the rows. The values shown are Call Quality Indicators (CQIs) and vary as the UE's move around between towers. Map view The Map view shows all of the towers and UEs in teh simulator located on a Map. Each tower has a circle around it indicating its power setting. This too can be turned on or off. Each tower has a different color circle. The UE travels along a route, and the color of the UE matches the tower it is connected to. If a UE is handed over to a different tower, it increases momentarily in size and changes to the color of the new serving tower. The routes that the UEs can take can be seen as dashed lines (and can be turned on and off). The color of the route matched the UE. A line connects each UE to its serving tower . The color of the line changes depending on the tower. The number of UEs can be varied by clicking the radio buttons at the top. The minimum and maximum values are set through the startup parameters of the ran-simulator - see ran-simulator/docs/README.md Normally the MapView connects to the ran-simulator microservice and constantly listens to streaming gRPC messages updating the towers and UE's. This can be disconnected however by clicking on the \"Connected\" checkbox. This removes the burden of streaming from the ran-simulator while not connected. While making latency measurements all GUIs should be disconnected Single updates of the current state can be had by clicking the \"Refresh\" button. This can be useful to get a visual snapshot of UE counts and positions","title":"SD-RAN GUI"},{"location":"onos-gui/docs/ran-gui/#ran-gui","text":"The RAN GUI demonstrates the onos-ric micro-service and the accompanying ran-simulator .","title":"RAN GUI"},{"location":"onos-gui/docs/ran-gui/#uelinks-view","text":"The UELinks view shows the affinity of a User Equipment device (mobile phone) to cell towers in the network. It presents a tabular layout with Cell Towers across the top and UEs in the rows. The values shown are Call Quality Indicators (CQIs) and vary as the UE's move around between towers.","title":"UELinks View"},{"location":"onos-gui/docs/ran-gui/#map-view","text":"The Map view shows all of the towers and UEs in teh simulator located on a Map. Each tower has a circle around it indicating its power setting. This too can be turned on or off. Each tower has a different color circle. The UE travels along a route, and the color of the UE matches the tower it is connected to. If a UE is handed over to a different tower, it increases momentarily in size and changes to the color of the new serving tower. The routes that the UEs can take can be seen as dashed lines (and can be turned on and off). The color of the route matched the UE. A line connects each UE to its serving tower . The color of the line changes depending on the tower. The number of UEs can be varied by clicking the radio buttons at the top. The minimum and maximum values are set through the startup parameters of the ran-simulator - see ran-simulator/docs/README.md Normally the MapView connects to the ran-simulator microservice and constantly listens to streaming gRPC messages updating the towers and UE's. This can be disconnected however by clicking on the \"Connected\" checkbox. This removes the burden of streaming from the ran-simulator while not connected. While making latency measurements all GUIs should be disconnected Single updates of the current state can be had by clicking the \"Refresh\" button. This can be useful to get a visual snapshot of UE counts and positions","title":"Map view"},{"location":"onos-lib-go/docs/logging/logging/","text":"Hierarchical Logging Library Package Package logging implements a hierarchical logging package using Zap logging library that is designed for fast, structured, leveled logging but it does not support hierarchical logging by default. The main objectives are: Provide a named hierarchical leveled logger. Minimize the required search time of finding a logger in the list of loggers. Provide ability to change log level during runtime and propagate the change to all of children of a logger. Overview To implement a named hierarchical leveled logger, we need to store the loggers in appropriate date structure that we can utilize the hierarchical names in finding and updating of a logger at runtime. This package uses Adaptive Radix Tree data structure to implement a hierarchical logger using Zap . The library provides a logger interface that implements Zap SugaredLogger but the standard Zap Logger functions are also accessible by default. Usage There are two methods that a user can use to add a logger to a package or go program: Create a logger using the default configuration as follows: log, : = logging.GetLogger ( \"controller\" , \"device\" ) Create a logger using a custom configuration as follows: cfg : = logging.Configuration {} cfg.SetEncoding ( \"json\" ) . SetLevel ( logging.WarnLevel ) . SetOutputPaths ([] string { \"stdout\" }) . SetName ( \"controller\" , \"device\" , \"change\" ) . SetErrorOutputPaths ([] string { \"stderr\" }) . SetECMsgKey ( \"Msg\" ) . SetECLevelKey ( \"Level\" ) . SetECTimeKey ( \"Ts\" ) . SetECTimeEncoder ( zc.ISO8601TimeEncoder ) . SetECEncodeLevel ( zc.CapitalLevelEncoder ) . Build () log : = cfg.GetLogger () Change Log Level at Runtime There are two different ways to change log level of a logger at runtime: 1- By providing the new log level and the name of a logger to the SetLevel function in the logging package, e.g.: newLogger : = logging.SetLevel ( logging.FatalLevel, \"controller\" ) 2- Using SetLevel function of each logger, e.g. log.SetLevel ( logging.WarnLevel )","title":"Overview of Logging"},{"location":"onos-lib-go/docs/logging/logging/#hierarchical-logging-library-package","text":"Package logging implements a hierarchical logging package using Zap logging library that is designed for fast, structured, leveled logging but it does not support hierarchical logging by default. The main objectives are: Provide a named hierarchical leveled logger. Minimize the required search time of finding a logger in the list of loggers. Provide ability to change log level during runtime and propagate the change to all of children of a logger.","title":"Hierarchical Logging Library Package"},{"location":"onos-lib-go/docs/logging/logging/#overview","text":"To implement a named hierarchical leveled logger, we need to store the loggers in appropriate date structure that we can utilize the hierarchical names in finding and updating of a logger at runtime. This package uses Adaptive Radix Tree data structure to implement a hierarchical logger using Zap . The library provides a logger interface that implements Zap SugaredLogger but the standard Zap Logger functions are also accessible by default.","title":"Overview"},{"location":"onos-lib-go/docs/logging/logging/#usage","text":"There are two methods that a user can use to add a logger to a package or go program: Create a logger using the default configuration as follows: log, : = logging.GetLogger ( \"controller\" , \"device\" ) Create a logger using a custom configuration as follows: cfg : = logging.Configuration {} cfg.SetEncoding ( \"json\" ) . SetLevel ( logging.WarnLevel ) . SetOutputPaths ([] string { \"stdout\" }) . SetName ( \"controller\" , \"device\" , \"change\" ) . SetErrorOutputPaths ([] string { \"stderr\" }) . SetECMsgKey ( \"Msg\" ) . SetECLevelKey ( \"Level\" ) . SetECTimeKey ( \"Ts\" ) . SetECTimeEncoder ( zc.ISO8601TimeEncoder ) . SetECEncodeLevel ( zc.CapitalLevelEncoder ) . Build () log : = cfg.GetLogger ()","title":"Usage"},{"location":"onos-lib-go/docs/logging/logging/#change-log-level-at-runtime","text":"There are two different ways to change log level of a logger at runtime: 1- By providing the new log level and the name of a logger to the SetLevel function in the logging package, e.g.: newLogger : = logging.SetLevel ( logging.FatalLevel, \"controller\" ) 2- Using SetLevel function of each logger, e.g. log.SetLevel ( logging.WarnLevel )","title":"Change Log Level at Runtime"},{"location":"onos-lib-go/docs/logging/api/logging/","text":"Protocol Documentation Table of Contents api/logging/logging.proto SetDebugModeRequest SetDebugModeResponse SetLevelRequest SetLevelResponse Level ResponseStatus logger Scalar Value Types Top api/logging/logging.proto SetDebugModeRequest SetDebugModeRequest enable/disable debug mode of the logger Field Type Label Description debug bool SetDebugModeResponse SetDebugModeResponse response for setting debug mode of a logger Field Type Label Description response_status ResponseStatus SetLevelRequest SetLevelRequest request for setting a logger level Field Type Label Description logger_name string logger name level Level logger level SetLevelResponse SetLevelResponse response for setting a logger level Field Type Label Description response_status ResponseStatus Level Logger level Name Number Description DEBUG 0 Debug log level INFO 1 Info log level WARN 2 Warn log level ERROR 3 Error log level DPANIC 4 DPanic log level PANIC 5 Panic log level FATAL 6 Fatal log level ResponseStatus Name Number Description OK 0 FAILED 1 PRECONDITION_FAILED 2 logger logger service provides rpc functions to controller a logger remotely Method Name Request Type Response Type Description SetLevel SetLevelRequest SetLevelResponse Sets a logger level SetDebug SetDebugModeRequest SetDebugModeResponse Sets debug mode to debug logging package Scalar Value Types .proto Type Notes C++ Java Python Go C# PHP Ruby double double double float float64 double float Float float float float float float32 float float Float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required) int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required) uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required) sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required) sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required) fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required) sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum bool bool boolean boolean bool bool boolean TrueClass/FalseClass string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8) bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)","title":"Logging API"},{"location":"onos-lib-go/docs/logging/api/logging/#protocol-documentation","text":"","title":"Protocol Documentation"},{"location":"onos-lib-go/docs/logging/api/logging/#table-of-contents","text":"api/logging/logging.proto SetDebugModeRequest SetDebugModeResponse SetLevelRequest SetLevelResponse Level ResponseStatus logger Scalar Value Types Top","title":"Table of Contents"},{"location":"onos-lib-go/docs/logging/api/logging/#apiloggingloggingproto","text":"","title":"api/logging/logging.proto"},{"location":"onos-lib-go/docs/logging/api/logging/#setdebugmoderequest","text":"SetDebugModeRequest enable/disable debug mode of the logger Field Type Label Description debug bool","title":"SetDebugModeRequest"},{"location":"onos-lib-go/docs/logging/api/logging/#setdebugmoderesponse","text":"SetDebugModeResponse response for setting debug mode of a logger Field Type Label Description response_status ResponseStatus","title":"SetDebugModeResponse"},{"location":"onos-lib-go/docs/logging/api/logging/#setlevelrequest","text":"SetLevelRequest request for setting a logger level Field Type Label Description logger_name string logger name level Level logger level","title":"SetLevelRequest"},{"location":"onos-lib-go/docs/logging/api/logging/#setlevelresponse","text":"SetLevelResponse response for setting a logger level Field Type Label Description response_status ResponseStatus","title":"SetLevelResponse"},{"location":"onos-lib-go/docs/logging/api/logging/#level","text":"Logger level Name Number Description DEBUG 0 Debug log level INFO 1 Info log level WARN 2 Warn log level ERROR 3 Error log level DPANIC 4 DPanic log level PANIC 5 Panic log level FATAL 6 Fatal log level","title":"Level"},{"location":"onos-lib-go/docs/logging/api/logging/#responsestatus","text":"Name Number Description OK 0 FAILED 1 PRECONDITION_FAILED 2","title":"ResponseStatus"},{"location":"onos-lib-go/docs/logging/api/logging/#logger","text":"logger service provides rpc functions to controller a logger remotely Method Name Request Type Response Type Description SetLevel SetLevelRequest SetLevelResponse Sets a logger level SetDebug SetDebugModeRequest SetDebugModeResponse Sets debug mode to debug logging package","title":"logger"},{"location":"onos-lib-go/docs/logging/api/logging/#scalar-value-types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby double double double float float64 double float Float float float float float float32 float float Float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required) int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required) uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required) sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required) sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required) fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required) sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum bool bool boolean boolean bool bool boolean TrueClass/FalseClass string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8) bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)","title":"Scalar Value Types"},{"location":"onos-test/docs/debugging/","text":"Debugging with ONIT Setting up a cluster To set up a test cluster, use the onit create cluster command: > onit create cluster \u2023 2019 -12-10T11:00:01-05:00 onit-better-dolphin Starting job \u2023 2019 -12-10T11:00:01-05:00 onit-better-dolphin Deploy job coordinator \u2713 2019 -12-10T11:00:01-05:00 onit-better-dolphin Deploy job coordinator \u2713 2019 -12-10T11:00:03-05:00 onit-better-dolphin Starting job \u2023 2019 -12-10T11:00:03-05:00 onit-better-dolphin Run job \u2023 2019 -12-10T16:00:03Z onos Setup namespace \u2713 2019 -12-10T16:00:03Z onos Setup namespace \u2023 2019 -12-10T16:00:03Z onos Set up RBAC \u2713 2019 -12-10T16:00:03Z onos Set up RBAC \u2023 2019 -12-10T16:00:03Z onos Setup Atomix controller \u2713 2019 -12-10T16:00:05Z onos Setup Atomix controller \u2023 2019 -12-10T16:00:05Z onos Setup Raft partitions \u2023 2019 -12-10T16:00:05Z onos Setup onos-topo \u2023 2019 -12-10T16:00:05Z onos Setup onos-config \u2713 2019 -12-10T16:00:13Z onos Setup Raft partitions \u2713 2019 -12-10T16:00:23Z onos Setup onos-topo \u2713 2019 -12-10T16:00:24Z onos Setup onos-config \u2713 2019 -12-10T11:00:25-05:00 onit-better-dolphin Run job When a cluster is created, onit creates a new namespace in Kubernetes and deploys the default \u03bcONOS services in that namespace. By default, ONIT will use the onos namespace, but the namespace can be overwritten by specifying a cluster name: > onit -c my-cluster create cluster ... Deploying a test network The \u03bcONOS cluster is deployed with each of its subsystems but no devices or applications. The onit add and onit remove subcommands can be used to add and remove resources respectively. To add a device simulator to the cluster, use the onit add simulator command: > onit -c my-cluster add simulator -n device-1 \u2023 2019 -12-10T11:12:07-05:00 onit-optimal-snake Starting job \u2023 2019 -12-10T11:12:07-05:00 onit-optimal-snake Deploy job coordinator \u2713 2019 -12-10T11:12:07-05:00 onit-optimal-snake Deploy job coordinator \u2713 2019 -12-10T11:12:08-05:00 onit-optimal-snake Starting job \u2023 2019 -12-10T11:12:08-05:00 onit-optimal-snake Run job \u2023 2019 -12-10T16:12:08Z onos Add simulator device-1 \u2713 2019 -12-10T16:12:11Z onos Add simulator device-1 \u2713 2019 -12-10T11:12:12-05:00 onit-optimal-snake Run job Simulators can be removed with the onit remove simulator command: > onit -c my-cluster remove simulator -n device-1 ONIT also supports Mininet networks. To add a Mininet network, use the onit add network command: > onit add network -n my-network --topo linear,2 --devices 2 The onit add network command requires two flags: * --topo defines the Mininet topology * --devices informs onit of the number of devices created in the topology By default, ONIT will deploy the opennetworking/mn-stratum image, but as with all subsystems the image can be overridden by the --image flag. Managing applications Applications are arbitrary deployments that can be added to the \u03bcONOS cluster via onit . To add an application, use the onit add app command: > onit -c my-cluster add app -n my-app --image onosproject/my-app:latest When adding an application to the cluster you must specify an image to deploy. The application may be assigned a name, and if no name is assigned a random human-readable name will be generated. Additional flags are provided for exposing ports, supplying and mounting secrets, configuring the environment, overriding container arguments, and more. -r --replicas sets the number of replicas to deploy -i --image sets the image to deploy --image-pull-policy sets the image pull policy -p --port is a mapping of named ports to expose in the application service. Example: onit add app ... -p grpc:5150 -p debug:40000 -d --debug enables debug mode for the application -s --secret is a mapping of secret paths and values to mount to the application pods. Keys indicate the absolute path at which to mount each secret, and values may be either a local file to mount or a secret value. Example: onit add app ... --secret /credentials/password=rocks --secret /certs/tls.crt=./certs/my-app.crt --secret /certs/tls.key=./certs/my-app.key -u --user overrides the user with which to run the application containers --privileged runs the application containers in privileged mode -e --env is a mapping of environment variables. Example: onit add app ... -e APP_HOST=0.0.0.0 -e APP_PORT=5150 Additional arguments are passed to the application containers. For example, to pass -host=0.0.0.0 -port=5150 to the application: onit add app -i myproject/my-app:latest -p 5150 -- -host=0.0.0.0 -port=5150 These flags can be used to deploy secure applications with highly configurable environments. For example, to deploy the onos-ztp application use the following command: > onit add app -n onos-ztp -i onosproject/onos-ztp:latest -u 0 -p grpc = 5150 -r 2 -s /certs/onf.cacrt = configs/certs/onf.cacrt -s /certs/onos-ztp.crt = configs/certs/service.crt -s /certs/onos-ztp.key = configs/certs/service.key -- -caPath = /certs/onf.cacrt -keyPath = /certs/onos-ztp.key -certPath = /certs/onos-ztp.crt To remove an application, use the onit remove app command: > onit -c my-cluster remove app -n onos-ztp Running the onos-gui Running the \u00b5ONOS GUI is achievable on top of an 'onit' created cluster, by loading its Helm Chart in to that cluster. See onos-gui for more details.","title":"Debugging with ONIT"},{"location":"onos-test/docs/debugging/#debugging-with-onit","text":"","title":"Debugging with ONIT"},{"location":"onos-test/docs/debugging/#setting-up-a-cluster","text":"To set up a test cluster, use the onit create cluster command: > onit create cluster \u2023 2019 -12-10T11:00:01-05:00 onit-better-dolphin Starting job \u2023 2019 -12-10T11:00:01-05:00 onit-better-dolphin Deploy job coordinator \u2713 2019 -12-10T11:00:01-05:00 onit-better-dolphin Deploy job coordinator \u2713 2019 -12-10T11:00:03-05:00 onit-better-dolphin Starting job \u2023 2019 -12-10T11:00:03-05:00 onit-better-dolphin Run job \u2023 2019 -12-10T16:00:03Z onos Setup namespace \u2713 2019 -12-10T16:00:03Z onos Setup namespace \u2023 2019 -12-10T16:00:03Z onos Set up RBAC \u2713 2019 -12-10T16:00:03Z onos Set up RBAC \u2023 2019 -12-10T16:00:03Z onos Setup Atomix controller \u2713 2019 -12-10T16:00:05Z onos Setup Atomix controller \u2023 2019 -12-10T16:00:05Z onos Setup Raft partitions \u2023 2019 -12-10T16:00:05Z onos Setup onos-topo \u2023 2019 -12-10T16:00:05Z onos Setup onos-config \u2713 2019 -12-10T16:00:13Z onos Setup Raft partitions \u2713 2019 -12-10T16:00:23Z onos Setup onos-topo \u2713 2019 -12-10T16:00:24Z onos Setup onos-config \u2713 2019 -12-10T11:00:25-05:00 onit-better-dolphin Run job When a cluster is created, onit creates a new namespace in Kubernetes and deploys the default \u03bcONOS services in that namespace. By default, ONIT will use the onos namespace, but the namespace can be overwritten by specifying a cluster name: > onit -c my-cluster create cluster ...","title":"Setting up a cluster"},{"location":"onos-test/docs/debugging/#deploying-a-test-network","text":"The \u03bcONOS cluster is deployed with each of its subsystems but no devices or applications. The onit add and onit remove subcommands can be used to add and remove resources respectively. To add a device simulator to the cluster, use the onit add simulator command: > onit -c my-cluster add simulator -n device-1 \u2023 2019 -12-10T11:12:07-05:00 onit-optimal-snake Starting job \u2023 2019 -12-10T11:12:07-05:00 onit-optimal-snake Deploy job coordinator \u2713 2019 -12-10T11:12:07-05:00 onit-optimal-snake Deploy job coordinator \u2713 2019 -12-10T11:12:08-05:00 onit-optimal-snake Starting job \u2023 2019 -12-10T11:12:08-05:00 onit-optimal-snake Run job \u2023 2019 -12-10T16:12:08Z onos Add simulator device-1 \u2713 2019 -12-10T16:12:11Z onos Add simulator device-1 \u2713 2019 -12-10T11:12:12-05:00 onit-optimal-snake Run job Simulators can be removed with the onit remove simulator command: > onit -c my-cluster remove simulator -n device-1 ONIT also supports Mininet networks. To add a Mininet network, use the onit add network command: > onit add network -n my-network --topo linear,2 --devices 2 The onit add network command requires two flags: * --topo defines the Mininet topology * --devices informs onit of the number of devices created in the topology By default, ONIT will deploy the opennetworking/mn-stratum image, but as with all subsystems the image can be overridden by the --image flag.","title":"Deploying a test network"},{"location":"onos-test/docs/debugging/#managing-applications","text":"Applications are arbitrary deployments that can be added to the \u03bcONOS cluster via onit . To add an application, use the onit add app command: > onit -c my-cluster add app -n my-app --image onosproject/my-app:latest When adding an application to the cluster you must specify an image to deploy. The application may be assigned a name, and if no name is assigned a random human-readable name will be generated. Additional flags are provided for exposing ports, supplying and mounting secrets, configuring the environment, overriding container arguments, and more. -r --replicas sets the number of replicas to deploy -i --image sets the image to deploy --image-pull-policy sets the image pull policy -p --port is a mapping of named ports to expose in the application service. Example: onit add app ... -p grpc:5150 -p debug:40000 -d --debug enables debug mode for the application -s --secret is a mapping of secret paths and values to mount to the application pods. Keys indicate the absolute path at which to mount each secret, and values may be either a local file to mount or a secret value. Example: onit add app ... --secret /credentials/password=rocks --secret /certs/tls.crt=./certs/my-app.crt --secret /certs/tls.key=./certs/my-app.key -u --user overrides the user with which to run the application containers --privileged runs the application containers in privileged mode -e --env is a mapping of environment variables. Example: onit add app ... -e APP_HOST=0.0.0.0 -e APP_PORT=5150 Additional arguments are passed to the application containers. For example, to pass -host=0.0.0.0 -port=5150 to the application: onit add app -i myproject/my-app:latest -p 5150 -- -host=0.0.0.0 -port=5150 These flags can be used to deploy secure applications with highly configurable environments. For example, to deploy the onos-ztp application use the following command: > onit add app -n onos-ztp -i onosproject/onos-ztp:latest -u 0 -p grpc = 5150 -r 2 -s /certs/onf.cacrt = configs/certs/onf.cacrt -s /certs/onos-ztp.crt = configs/certs/service.crt -s /certs/onos-ztp.key = configs/certs/service.key -- -caPath = /certs/onf.cacrt -keyPath = /certs/onos-ztp.key -certPath = /certs/onos-ztp.crt To remove an application, use the onit remove app command: > onit -c my-cluster remove app -n onos-ztp","title":"Managing applications"},{"location":"onos-test/docs/debugging/#running-the-onos-gui","text":"Running the \u00b5ONOS GUI is achievable on top of an 'onit' created cluster, by loading its Helm Chart in to that cluster. See onos-gui for more details.","title":"Running the onos-gui"},{"location":"onos-test/docs/getting-started/","text":"Getting started with ONIT Prerequisites ONIT sets up test clusters and runs test jobs inside Kubernetes . For development and testing, we recommend using KIND or MicroK8s , but ONIT can run on any Kubernetes cluster. Additionally, Golang 1.12 or later is recommended for downloading/compiling the ONIT binary. Installation To install ONIT, fetch and compile the ONIT binary using go get : > GO111MODULE = on go get github.com/onosproject/onos-test/cmd/onit The onit CLI supports auto-completion of commands for bash and zsh. To enable auto-completion: bash - Run source $(onit completion bash) zsh - Run source <(onit completion zsh) You can optionally persist the output of the onit completion command to your shell profile. Usage Development Cluster To setup a cluster for development, after having pushed all the new images to kind run: onit create cluster --set onos-cli.enabled = true Integration Tests To run a suite of tests, use the onit run test command, providing a test image to run: onit test --image <test-image> For example, to run onos-config suite tests using kind cluster: onit test --image onosproject/onos-config-tests:latest --suite gnmi --image-pull-policy = \"Always\" Note: To learn about how you can create a test image, refer to testing document. Benchmarks can be run with the onit run benchmark command: onit benchmark --image <test-image> To run a suite (e.g. a suite of onos-topo tests): onit test --image onosproject/onos-topo-tests:latest --suite topo To run a specific test (e.g. an onos-config test): onit test --image onosproject/onos-config-tests:latest --suite config --test TestTransaction More usage examples are provided in debugging document.","title":"Getting started with ONIT"},{"location":"onos-test/docs/getting-started/#getting-started-with-onit","text":"","title":"Getting started with ONIT"},{"location":"onos-test/docs/getting-started/#prerequisites","text":"ONIT sets up test clusters and runs test jobs inside Kubernetes . For development and testing, we recommend using KIND or MicroK8s , but ONIT can run on any Kubernetes cluster. Additionally, Golang 1.12 or later is recommended for downloading/compiling the ONIT binary.","title":"Prerequisites"},{"location":"onos-test/docs/getting-started/#installation","text":"To install ONIT, fetch and compile the ONIT binary using go get : > GO111MODULE = on go get github.com/onosproject/onos-test/cmd/onit The onit CLI supports auto-completion of commands for bash and zsh. To enable auto-completion: bash - Run source $(onit completion bash) zsh - Run source <(onit completion zsh) You can optionally persist the output of the onit completion command to your shell profile.","title":"Installation"},{"location":"onos-test/docs/getting-started/#usage","text":"","title":"Usage"},{"location":"onos-test/docs/getting-started/#development-cluster","text":"To setup a cluster for development, after having pushed all the new images to kind run: onit create cluster --set onos-cli.enabled = true","title":"Development Cluster"},{"location":"onos-test/docs/getting-started/#integration-tests","text":"To run a suite of tests, use the onit run test command, providing a test image to run: onit test --image <test-image> For example, to run onos-config suite tests using kind cluster: onit test --image onosproject/onos-config-tests:latest --suite gnmi --image-pull-policy = \"Always\" Note: To learn about how you can create a test image, refer to testing document. Benchmarks can be run with the onit run benchmark command: onit benchmark --image <test-image> To run a suite (e.g. a suite of onos-topo tests): onit test --image onosproject/onos-topo-tests:latest --suite topo To run a specific test (e.g. an onos-config test): onit test --image onosproject/onos-config-tests:latest --suite config --test TestTransaction More usage examples are provided in debugging document.","title":"Integration Tests"},{"location":"onos-test/docs/overview/","text":"Overview of ONIT ONIT is a suite of command line tools and APIs to facilitate testing and debugging \u03bcONOS clusters in Kubernetes . At the core of ONIT is a lightweight framework for building and running integration tests on Kubernetes. On top of the integration test framework, ONIT provides a CLI tool and API for running tests and operating on test clusters. KubeTest Framework At the lowest level of ONIT is KubeTest, a lightweight command line tool and API for running parallel integration tests on Kubernetes. The framework provides two components: CLI - a command line client for running tests and benchmarks in Kubernetes API - a test suite abstraction for grouping and parallelizing tests The KubeTest framework is responsible for managing test jobs inside the Kubernetes cluster. Given a Docker image of test suites, KubeTest coordinates parallel test runs across multiple namespaces - one per suite. ONIT Test API While the KubeTest framework provides the test suite abstraction and coordinates running parallel tests inside a Kubernetes cluster, it does not provide any features for operating on \u03bcONOS clusters specifically. To facilitate \u03bcONOS integration tests, ONIT exposes additional APIs to tests for setting up, querying, and modifying \u03bcONOS clusters. The ONIT test API supports the management of \u03bcONOS clusters at both setup and run time. Test suites can implement setup methods to set up the \u03bcONOS cluster using the setup API : func ( s * MySuite ) SetupTestSuite () { setup . Database (). SetPartitions ( 3 ). SetNodesPerPartition ( 3 ) setup . Topo (). SetNodes ( 2 ) setup . Config (). SetNodes ( 2 ) setup . SetupOrDie () } And test methods themselves can use the environment API to query the cluster state, add devices and applications, kill nodes, execute CLI commands, and more: func ( s * MySuite ) TestAddDevices ( t * testing . T ) { device1 := env . NewSimulator (). SetName ( \"device-1\" ). AddOrDie () device2 := env . NewSimulator (). SetName ( \"device-2\" ). AddOrDie () } ONIT CLI ONIT can also be used for manual debugging of \u03bcONOS clusters. The onit command line tool extends the kubetest CLI to add commands for setting up and modifying clusters, adding and removing devices, and deploying applications in a \u03bcONOS cluster. > onit create cluster --set onos-cli.enabled = true \u2023 2019 -11-15T14:42:39-08:00 onos Setup ONOS cluster \u2023 2019 -11-15T14:42:39-08:00 onos Setup namespace \u2713 2019 -11-15T14:42:39-08:00 onos Setup namespace \u2023 2019 -11-15T14:42:39-08:00 onos Set up RBAC \u2713 2019 -11-15T14:42:39-08:00 onos Set up RBAC \u2713 2019 -11-15T14:42:39-08:00 onos Setup ONOS cluster \u2023 2019 -11-15T14:42:39-08:00 onos Setup Atomix controller \u2713 2019 -11-15T14:42:48-08:00 onos Setup Atomix controller \u2023 2019 -11-15T14:42:48-08:00 onos Setup onos-cli service \u2023 2019 -11-15T14:42:48-08:00 onos Setup Raft partitions \u2023 2019 -11-15T14:42:48-08:00 onos Setup onos-topo \u2023 2019 -11-15T14:42:48-08:00 onos Setup onos-config \u2713 2019 -11-15T14:42:51-08:00 onos Setup onos-cli service \u2713 2019 -11-15T14:42:58-08:00 onos Setup Raft partitions \u2713 2019 -11-15T14:43:10-08:00 onos Setup onos-topo \u2713 2019 -11-15T14:43:13-08:00 onos Setup onos-config > onit add simulator -n device-1 \u2023 2019 -11-15T14:43:49-08:00 onos Add simulator device-1 \u2713 2019 -11-15T14:44:05-08:00 onos Add simulator device-1 > onit add simulator -n device-2 \u2023 2019 -11-15T14:44:08-08:00 onos Add simulator device-2 \u2713 2019 -11-15T14:44:23-08:00 onos Add simulator device-2 > onit exec -- onos topo get devices ID ADDRESS VERSION STATE device-1 device-1:11161 1 .0.0 GNMI: { Connectivity: REACHABLE, Channel: CONNECTED, Service: AVAILABLE } device-2 device-2:11161 1 .0.0 GNMI: { Connectivity: REACHABLE, Channel: CONNECTED, Service: AVAILABLE } ONIT will deploy each cluster inside of its own namespace in Kubernetes (the default namespace is 'onos'), so the cluster can easily be accessed via standard k8s tools for debugging: > kubectl get pods -n onos NAME READY STATUS RESTARTS AGE atomix-controller-6fb99d7545-6xnrh 1 /1 Running 0 3m45s device-1 1 /1 Running 0 2m35s device-2 1 /1 Running 0 2m16s onos-cli-8fddbd77f-pprkl 1 /1 Running 0 3m36s onos-config-567d957775-d25p8 1 /1 Running 0 3m35s onos-topo-84dc5568f5-v8dfh 1 /1 Running 0 3m36s raft-1-0 1 /1 Running 0 3m35s For instance to follow the logs on the onos-config pod run: kubectl -n onos logs --follow $( kubectl -n onos get pods -l type = config -o name ) or if a shell on the onos-cli pod is required (useful for running gnmi_cli commands): kubectl -n onos exec -it $( kubectl -n onos get pods -l type = cli -o name ) -- /bin/sh","title":"Overview Of ONIT"},{"location":"onos-test/docs/overview/#overview-of-onit","text":"ONIT is a suite of command line tools and APIs to facilitate testing and debugging \u03bcONOS clusters in Kubernetes . At the core of ONIT is a lightweight framework for building and running integration tests on Kubernetes. On top of the integration test framework, ONIT provides a CLI tool and API for running tests and operating on test clusters.","title":"Overview of ONIT"},{"location":"onos-test/docs/overview/#kubetest-framework","text":"At the lowest level of ONIT is KubeTest, a lightweight command line tool and API for running parallel integration tests on Kubernetes. The framework provides two components: CLI - a command line client for running tests and benchmarks in Kubernetes API - a test suite abstraction for grouping and parallelizing tests The KubeTest framework is responsible for managing test jobs inside the Kubernetes cluster. Given a Docker image of test suites, KubeTest coordinates parallel test runs across multiple namespaces - one per suite.","title":"KubeTest Framework"},{"location":"onos-test/docs/overview/#onit-test-api","text":"While the KubeTest framework provides the test suite abstraction and coordinates running parallel tests inside a Kubernetes cluster, it does not provide any features for operating on \u03bcONOS clusters specifically. To facilitate \u03bcONOS integration tests, ONIT exposes additional APIs to tests for setting up, querying, and modifying \u03bcONOS clusters. The ONIT test API supports the management of \u03bcONOS clusters at both setup and run time. Test suites can implement setup methods to set up the \u03bcONOS cluster using the setup API : func ( s * MySuite ) SetupTestSuite () { setup . Database (). SetPartitions ( 3 ). SetNodesPerPartition ( 3 ) setup . Topo (). SetNodes ( 2 ) setup . Config (). SetNodes ( 2 ) setup . SetupOrDie () } And test methods themselves can use the environment API to query the cluster state, add devices and applications, kill nodes, execute CLI commands, and more: func ( s * MySuite ) TestAddDevices ( t * testing . T ) { device1 := env . NewSimulator (). SetName ( \"device-1\" ). AddOrDie () device2 := env . NewSimulator (). SetName ( \"device-2\" ). AddOrDie () }","title":"ONIT Test API"},{"location":"onos-test/docs/overview/#onit-cli","text":"ONIT can also be used for manual debugging of \u03bcONOS clusters. The onit command line tool extends the kubetest CLI to add commands for setting up and modifying clusters, adding and removing devices, and deploying applications in a \u03bcONOS cluster. > onit create cluster --set onos-cli.enabled = true \u2023 2019 -11-15T14:42:39-08:00 onos Setup ONOS cluster \u2023 2019 -11-15T14:42:39-08:00 onos Setup namespace \u2713 2019 -11-15T14:42:39-08:00 onos Setup namespace \u2023 2019 -11-15T14:42:39-08:00 onos Set up RBAC \u2713 2019 -11-15T14:42:39-08:00 onos Set up RBAC \u2713 2019 -11-15T14:42:39-08:00 onos Setup ONOS cluster \u2023 2019 -11-15T14:42:39-08:00 onos Setup Atomix controller \u2713 2019 -11-15T14:42:48-08:00 onos Setup Atomix controller \u2023 2019 -11-15T14:42:48-08:00 onos Setup onos-cli service \u2023 2019 -11-15T14:42:48-08:00 onos Setup Raft partitions \u2023 2019 -11-15T14:42:48-08:00 onos Setup onos-topo \u2023 2019 -11-15T14:42:48-08:00 onos Setup onos-config \u2713 2019 -11-15T14:42:51-08:00 onos Setup onos-cli service \u2713 2019 -11-15T14:42:58-08:00 onos Setup Raft partitions \u2713 2019 -11-15T14:43:10-08:00 onos Setup onos-topo \u2713 2019 -11-15T14:43:13-08:00 onos Setup onos-config > onit add simulator -n device-1 \u2023 2019 -11-15T14:43:49-08:00 onos Add simulator device-1 \u2713 2019 -11-15T14:44:05-08:00 onos Add simulator device-1 > onit add simulator -n device-2 \u2023 2019 -11-15T14:44:08-08:00 onos Add simulator device-2 \u2713 2019 -11-15T14:44:23-08:00 onos Add simulator device-2 > onit exec -- onos topo get devices ID ADDRESS VERSION STATE device-1 device-1:11161 1 .0.0 GNMI: { Connectivity: REACHABLE, Channel: CONNECTED, Service: AVAILABLE } device-2 device-2:11161 1 .0.0 GNMI: { Connectivity: REACHABLE, Channel: CONNECTED, Service: AVAILABLE } ONIT will deploy each cluster inside of its own namespace in Kubernetes (the default namespace is 'onos'), so the cluster can easily be accessed via standard k8s tools for debugging: > kubectl get pods -n onos NAME READY STATUS RESTARTS AGE atomix-controller-6fb99d7545-6xnrh 1 /1 Running 0 3m45s device-1 1 /1 Running 0 2m35s device-2 1 /1 Running 0 2m16s onos-cli-8fddbd77f-pprkl 1 /1 Running 0 3m36s onos-config-567d957775-d25p8 1 /1 Running 0 3m35s onos-topo-84dc5568f5-v8dfh 1 /1 Running 0 3m36s raft-1-0 1 /1 Running 0 3m35s For instance to follow the logs on the onos-config pod run: kubectl -n onos logs --follow $( kubectl -n onos get pods -l type = config -o name ) or if a shell on the onos-cli pod is required (useful for running gnmi_cli commands): kubectl -n onos exec -it $( kubectl -n onos get pods -l type = cli -o name ) -- /bin/sh","title":"ONIT CLI"},{"location":"onos-test/docs/testing/","text":"Testing with ONIT ONIT provides a rich API for setting up and operating on \u03bcONOS clusters in tests. Creating a test image Tests are deployed as standalone Docker images. Each test image may contain one or more test or benchmark suites, and test commands may filter test suites and tests via command line arguments. To create a test image, create a main function for the tests and call the onit.Main() function: package main import ( \"github.com/onosproject/onos-test/pkg/onit\" ) func main () { onit . Main () } The onit.Main() function will run tests based on the arguments provided via the onit CLI. If no test suites are registered (as in the example above), no tests will be run. To register test and benchmark suites, call onit.RegisterTests or onit.RegisterBenchmarks respectively: package main import ( \"github.com/onosproject/onos-test/pkg/onit\" \"github.com/onosproject/onos-test/test/atomix\" ) func main () { // Register Atomix tests onit . RegisterTests ( raft , & atomix . SmokeTestSuite {}) onit . RegisterTests ( raft , & atomix . HATestSuite {}) // Register Atomix benchmarks onit . RegisterBenchmarks ( raft , & atomix . BenchmarkSuite {}) onit . Main () } Each test suite should be assigned a unique name which can be used to filter suites in the same image when running tests via the CLI: > onit test --image onosproject/onos-tests:latest --suite atomix-ha Writing a test suite Tests are grouped into suites, and suites are defined by Golang structs. All tests within a suite are run sequentially within a shared environment, but multiple suites within a test image may be run in parallel, each in their own Kubernetes namespace. To create a test suite, extend onit.TestSuite : type MyTestSuite struct { onit . TestSuite } Tests in a suite must follow the Test* naming pattern and take a *testing.T as the sole argument: func ( s * MyTestSuite ) TestStuff ( t * testing . T ) { ... } Test suites can also implement a variety of interfaces for setting up and tearing down the suite and individual tests: * SetupTestSuite - Run once before all tests to set up the test suite * TearDownTestSuite - Run once after all tests to tear down the test suite * SetupTest - Run before each test method to set up the test * TearDownTest - Run after each test method to tear down the test Setup API When a test is deployed it is run in a namespace that is virtually empty. Test suites are responsible for setting up the systems required by the tests. To assist test suites in setting up \u03bcONOS clusters, ONIT provides a setup API that allows test suites to configure every component of the \u03bcONOS cluster. The setup API is typically only used once in the setup method of a test suite: func ( s * MyTestSuite ) SetupTestSuite () { } Setting up the cluster To facilitate setting up test clusters, the setup API provides configuration interfaces for each \u03bcONOS subsystem: * Atomix - Configure the Atomix controller * Database - Configure database partitions used by \u03bcONOS services * Topo - Configure the \u03bcONOS topology service * Config - Configure the \u03bcONOS config service * CLI - Configure the \u03bcONOS command line client func ( s * MyTestSuite ) SetupTestSuite () { setup . Database (). SetPartitions ( 3 ). SetReplicasPerPartition ( 3 ) setup . Topo (). SetReplicas ( 2 ) setup . Config (). SetReplicas ( 1 ) ... } Once the desired subsystems have been configured, set up the cluster by calling SetupOrDie : func ( s * MyTestSuite ) SetupTestSuite () { setup . Database (). SetPartitions ( 3 ). SetReplicasPerPartition ( 3 ) setup . Topo (). SetReplicas ( 2 ) setup . Config (). SetReplicas ( 1 ) setup . SetupOrDie () } Runtime API The setup API only provides for the deployment of the basic services required by a \u03bcONOS cluster. Most tests also require network devices, applications, and other components. ONIT provides a runtime API called env for adding devices to the cluster, deploying and redeploying applications, killing nodes, and much more. To prevent tests from polluting each other, the env API should only be used within the test methods themselves. Each test is responsible for adding and removing the resources it requires. func ( s * MyTestSuite ) TestDevices ( t * testing . T ) { device1 := env . NewSimulator (). SetName ( \"device-1\" ). AddOrDie () device2 := env . NewSimulator (). SetName ( \"device-2\" ). AddOrDie () } Testing core services The env API provides information about each of the services running within the \u03bcONOS test cluster. The APIs for each service can be used to list nodes, kill nodes, execute commands on any node, and connect to northbound APIs for relevant services. To list the nodes in the topo service: nodes := env . Topo (). Nodes () To kill a node in the topo service: nodes [ 0 ]. Kill () To wait for the topo service to recover after a failure: env . Topo (). AwaitReady () To execute a command on the CLI: env . CLI (). Execute ( \"onos topo get devices\" ) To connect the the topo service's northbound API: conn , err := env . Topo (). Connect () Managing applications To add an application to the cluster, call env.NewApp() : func ( s * MyTestSuite ) TestZTP ( t * testing . T ) { ztp := env . NewApp (). SetName ( \"ztp\" ). SetImage ( \"onosproject/onos-ztp:latest\" ). SetReplicas ( 2 ). AddOrDie () } Applications must be configured with an image and may specify the number of nodes to deploy. Additionally, application configurations can be used to expose ports, add secrets, specify container arguments, and set other options: SetReplicas sets the number of replicas to deploy SetImage sets the image to deploy SetPullPolicy sets the image pull policy AddPort adds a named port to the application deployment. Note: the first port added to the application will be used for health checking. SetPorts sets the named ports to expose for the application SetDebug sets whether to enable debug mode. When debug mode is enabled, containers will be deployed with the SYS_PTRACE ability enabled AddSecret adds a secret to the application deployment. The path is the path at which the secret will be mounted inside the app pods. The value is the value of the secret to add. SetSecrets sets the secrets to attach to the application deployment SetUser overrides the user with which to run the application containers SetPrivileged sets whether to run the application in privileged mode AddEnv adds an environment variable to the application SetEnv sets the environment variables to pass to the containers SetArgs sets the arguments to pass to the containers func ( s * MyTestSuite ) TestZTP ( t * testing . T ) { ztp := env . NewApp (). SetName ( \"ztp\" ). SetImage ( \"onosproject/onos-ztp:latest\" ). SetReplicas ( 2 ). AddPort ( \"grpc\" , 5150 ). AddSecret ( \"/certs/onf.cacrt\" , caCert ). AddSecret ( \"/certs/onos-ztp.cert\" , ztpCert ). AddSecret ( \"/certs/onos-ztp.key\" , ztpKey ). SetArgs ( \"-caPath=/certs/onf.cacrt\" , \"-certPath=/certs/onos-ztp.cert\" , \"-keyPath=/certs/onos-ztp.key\" ). AddOrDie () } Once an application has been deployed, tests can query the application nodes, execute commands within the application's pod, kill nodes, and more: func ( s * MyTestSuite ) TestZTP ( t * testing . T ) { ztp := env . NewApp (). SetName ( \"ztp\" ). SetImage ( \"onosproject/onos-ztp:latest\" ). AddPort ( \"grpc\" , 5150 ). SetUser ( 0 ). SetReplicas ( 2 ). AddOrDie () // Execute a command on a ztp node to add a role ztp . Execute ( \"onos ztp add role foo\" ) // Kill a ztp node ztp . Nodes ()[ 0 ]. Kill () } Managing device simulators To add a device simulator to the cluster, use env.NewSimulator() and add the device with AddOrDie() : func ( s * MyTestSuite ) TestGNMI ( t * testing . T ) { device1 := env . NewSimulator (). SetName ( \"device-1\" ). AddOrDie () device2 := env . NewSimulator (). SetName ( \"device-2\" ). AddOrDie () doGnmiSet ( device1 ) doGnmiSet ( device2 ) } When a device simulator is added to the cluster, it will automatically be added to the \u03bcONOS topology. To improve performance when setting up multiple device simulators, simulators can be deployed concurrently using AddSimulators() : func ( s * MyTestSuite ) TestGNMI ( t * testing . T ) { devices := env . AddSimulators (). With ( env . NewSimulator (). SetName ( \"device-1\" )). With ( env . NewSimulator (). SetName ( \"device-2\" )). AddAllOrDie () doGnmiSet ( device1 ) doGnmiSet ( device2 ) } Simulators can be removed by simply calling Remove() or RemoveOrDie() : env . Simulator ( \"device-1\" ). RemoveOrDie () Managing Mininet networks To add a Mininet network to the cluster, use env.NewNetwork() : func ( s * MyTestSuite ) TestNetwork ( t * testing . T ) { network := env . NewNetwork (). SetTopo ( \"linear,2\" , 2 ). AddOrDie () } When a network is added to the cluster, ONIT will create a service per device and add each device to the \u03bcONOS topology. Devices can then be accessed via the network API: for _ , device := range network . Devices () { doGnmiSet ( device ) } To remove a network and all its devices, simply call Remove() or RemoveOrDie() : network . RemoveOrDie ()","title":"How To Write and Run Tests?"},{"location":"onos-test/docs/testing/#testing-with-onit","text":"ONIT provides a rich API for setting up and operating on \u03bcONOS clusters in tests.","title":"Testing with ONIT"},{"location":"onos-test/docs/testing/#creating-a-test-image","text":"Tests are deployed as standalone Docker images. Each test image may contain one or more test or benchmark suites, and test commands may filter test suites and tests via command line arguments. To create a test image, create a main function for the tests and call the onit.Main() function: package main import ( \"github.com/onosproject/onos-test/pkg/onit\" ) func main () { onit . Main () } The onit.Main() function will run tests based on the arguments provided via the onit CLI. If no test suites are registered (as in the example above), no tests will be run. To register test and benchmark suites, call onit.RegisterTests or onit.RegisterBenchmarks respectively: package main import ( \"github.com/onosproject/onos-test/pkg/onit\" \"github.com/onosproject/onos-test/test/atomix\" ) func main () { // Register Atomix tests onit . RegisterTests ( raft , & atomix . SmokeTestSuite {}) onit . RegisterTests ( raft , & atomix . HATestSuite {}) // Register Atomix benchmarks onit . RegisterBenchmarks ( raft , & atomix . BenchmarkSuite {}) onit . Main () } Each test suite should be assigned a unique name which can be used to filter suites in the same image when running tests via the CLI: > onit test --image onosproject/onos-tests:latest --suite atomix-ha","title":"Creating a test image"},{"location":"onos-test/docs/testing/#writing-a-test-suite","text":"Tests are grouped into suites, and suites are defined by Golang structs. All tests within a suite are run sequentially within a shared environment, but multiple suites within a test image may be run in parallel, each in their own Kubernetes namespace. To create a test suite, extend onit.TestSuite : type MyTestSuite struct { onit . TestSuite } Tests in a suite must follow the Test* naming pattern and take a *testing.T as the sole argument: func ( s * MyTestSuite ) TestStuff ( t * testing . T ) { ... } Test suites can also implement a variety of interfaces for setting up and tearing down the suite and individual tests: * SetupTestSuite - Run once before all tests to set up the test suite * TearDownTestSuite - Run once after all tests to tear down the test suite * SetupTest - Run before each test method to set up the test * TearDownTest - Run after each test method to tear down the test","title":"Writing a test suite"},{"location":"onos-test/docs/testing/#setup-api","text":"When a test is deployed it is run in a namespace that is virtually empty. Test suites are responsible for setting up the systems required by the tests. To assist test suites in setting up \u03bcONOS clusters, ONIT provides a setup API that allows test suites to configure every component of the \u03bcONOS cluster. The setup API is typically only used once in the setup method of a test suite: func ( s * MyTestSuite ) SetupTestSuite () { }","title":"Setup API"},{"location":"onos-test/docs/testing/#setting-up-the-cluster","text":"To facilitate setting up test clusters, the setup API provides configuration interfaces for each \u03bcONOS subsystem: * Atomix - Configure the Atomix controller * Database - Configure database partitions used by \u03bcONOS services * Topo - Configure the \u03bcONOS topology service * Config - Configure the \u03bcONOS config service * CLI - Configure the \u03bcONOS command line client func ( s * MyTestSuite ) SetupTestSuite () { setup . Database (). SetPartitions ( 3 ). SetReplicasPerPartition ( 3 ) setup . Topo (). SetReplicas ( 2 ) setup . Config (). SetReplicas ( 1 ) ... } Once the desired subsystems have been configured, set up the cluster by calling SetupOrDie : func ( s * MyTestSuite ) SetupTestSuite () { setup . Database (). SetPartitions ( 3 ). SetReplicasPerPartition ( 3 ) setup . Topo (). SetReplicas ( 2 ) setup . Config (). SetReplicas ( 1 ) setup . SetupOrDie () }","title":"Setting up the cluster"},{"location":"onos-test/docs/testing/#runtime-api","text":"The setup API only provides for the deployment of the basic services required by a \u03bcONOS cluster. Most tests also require network devices, applications, and other components. ONIT provides a runtime API called env for adding devices to the cluster, deploying and redeploying applications, killing nodes, and much more. To prevent tests from polluting each other, the env API should only be used within the test methods themselves. Each test is responsible for adding and removing the resources it requires. func ( s * MyTestSuite ) TestDevices ( t * testing . T ) { device1 := env . NewSimulator (). SetName ( \"device-1\" ). AddOrDie () device2 := env . NewSimulator (). SetName ( \"device-2\" ). AddOrDie () }","title":"Runtime API"},{"location":"onos-test/docs/testing/#testing-core-services","text":"The env API provides information about each of the services running within the \u03bcONOS test cluster. The APIs for each service can be used to list nodes, kill nodes, execute commands on any node, and connect to northbound APIs for relevant services. To list the nodes in the topo service: nodes := env . Topo (). Nodes () To kill a node in the topo service: nodes [ 0 ]. Kill () To wait for the topo service to recover after a failure: env . Topo (). AwaitReady () To execute a command on the CLI: env . CLI (). Execute ( \"onos topo get devices\" ) To connect the the topo service's northbound API: conn , err := env . Topo (). Connect ()","title":"Testing core services"},{"location":"onos-test/docs/testing/#managing-applications","text":"To add an application to the cluster, call env.NewApp() : func ( s * MyTestSuite ) TestZTP ( t * testing . T ) { ztp := env . NewApp (). SetName ( \"ztp\" ). SetImage ( \"onosproject/onos-ztp:latest\" ). SetReplicas ( 2 ). AddOrDie () } Applications must be configured with an image and may specify the number of nodes to deploy. Additionally, application configurations can be used to expose ports, add secrets, specify container arguments, and set other options: SetReplicas sets the number of replicas to deploy SetImage sets the image to deploy SetPullPolicy sets the image pull policy AddPort adds a named port to the application deployment. Note: the first port added to the application will be used for health checking. SetPorts sets the named ports to expose for the application SetDebug sets whether to enable debug mode. When debug mode is enabled, containers will be deployed with the SYS_PTRACE ability enabled AddSecret adds a secret to the application deployment. The path is the path at which the secret will be mounted inside the app pods. The value is the value of the secret to add. SetSecrets sets the secrets to attach to the application deployment SetUser overrides the user with which to run the application containers SetPrivileged sets whether to run the application in privileged mode AddEnv adds an environment variable to the application SetEnv sets the environment variables to pass to the containers SetArgs sets the arguments to pass to the containers func ( s * MyTestSuite ) TestZTP ( t * testing . T ) { ztp := env . NewApp (). SetName ( \"ztp\" ). SetImage ( \"onosproject/onos-ztp:latest\" ). SetReplicas ( 2 ). AddPort ( \"grpc\" , 5150 ). AddSecret ( \"/certs/onf.cacrt\" , caCert ). AddSecret ( \"/certs/onos-ztp.cert\" , ztpCert ). AddSecret ( \"/certs/onos-ztp.key\" , ztpKey ). SetArgs ( \"-caPath=/certs/onf.cacrt\" , \"-certPath=/certs/onos-ztp.cert\" , \"-keyPath=/certs/onos-ztp.key\" ). AddOrDie () } Once an application has been deployed, tests can query the application nodes, execute commands within the application's pod, kill nodes, and more: func ( s * MyTestSuite ) TestZTP ( t * testing . T ) { ztp := env . NewApp (). SetName ( \"ztp\" ). SetImage ( \"onosproject/onos-ztp:latest\" ). AddPort ( \"grpc\" , 5150 ). SetUser ( 0 ). SetReplicas ( 2 ). AddOrDie () // Execute a command on a ztp node to add a role ztp . Execute ( \"onos ztp add role foo\" ) // Kill a ztp node ztp . Nodes ()[ 0 ]. Kill () }","title":"Managing applications"},{"location":"onos-test/docs/testing/#managing-device-simulators","text":"To add a device simulator to the cluster, use env.NewSimulator() and add the device with AddOrDie() : func ( s * MyTestSuite ) TestGNMI ( t * testing . T ) { device1 := env . NewSimulator (). SetName ( \"device-1\" ). AddOrDie () device2 := env . NewSimulator (). SetName ( \"device-2\" ). AddOrDie () doGnmiSet ( device1 ) doGnmiSet ( device2 ) } When a device simulator is added to the cluster, it will automatically be added to the \u03bcONOS topology. To improve performance when setting up multiple device simulators, simulators can be deployed concurrently using AddSimulators() : func ( s * MyTestSuite ) TestGNMI ( t * testing . T ) { devices := env . AddSimulators (). With ( env . NewSimulator (). SetName ( \"device-1\" )). With ( env . NewSimulator (). SetName ( \"device-2\" )). AddAllOrDie () doGnmiSet ( device1 ) doGnmiSet ( device2 ) } Simulators can be removed by simply calling Remove() or RemoveOrDie() : env . Simulator ( \"device-1\" ). RemoveOrDie ()","title":"Managing device simulators"},{"location":"onos-test/docs/testing/#managing-mininet-networks","text":"To add a Mininet network to the cluster, use env.NewNetwork() : func ( s * MyTestSuite ) TestNetwork ( t * testing . T ) { network := env . NewNetwork (). SetTopo ( \"linear,2\" , 2 ). AddOrDie () } When a network is added to the cluster, ONIT will create a service per device and add each device to the \u03bcONOS topology. Devices can then be accessed via the network API: for _ , device := range network . Devices () { doGnmiSet ( device ) } To remove a network and all its devices, simply call Remove() or RemoveOrDie() : network . RemoveOrDie ()","title":"Managing Mininet networks"},{"location":"onos-test/docs/cli/onit/","text":"onit Setup test clusters and run integration tests on Kubernetes Synopsis Setup test clusters and run integration tests on Kubernetes Options -c, --cluster string the cluster on which to execute the command -h, --help help for onit -v, --verbose Enable verbose output SEE ALSO onit add - Add resources to the cluster onit benchmark - Run benchmarks on Kubernetes onit completion - Generated bash or zsh auto-completion script onit create - Setup a test resource on Kubernetes onit delete - Delete Kubernetes test resources onit exec - Execute an ONOS CLI command onit get - Get test configurations onit remove - Remove resources from the cluster onit test - Run tests on Kubernetes Auto generated by spf13/cobra on 11-Dec-2019","title":"ONIT CLI Commands"},{"location":"onos-test/docs/cli/onit/#onit","text":"Setup test clusters and run integration tests on Kubernetes","title":"onit"},{"location":"onos-test/docs/cli/onit/#synopsis","text":"Setup test clusters and run integration tests on Kubernetes","title":"Synopsis"},{"location":"onos-test/docs/cli/onit/#options","text":"-c, --cluster string the cluster on which to execute the command -h, --help help for onit -v, --verbose Enable verbose output","title":"Options"},{"location":"onos-test/docs/cli/onit/#see-also","text":"onit add - Add resources to the cluster onit benchmark - Run benchmarks on Kubernetes onit completion - Generated bash or zsh auto-completion script onit create - Setup a test resource on Kubernetes onit delete - Delete Kubernetes test resources onit exec - Execute an ONOS CLI command onit get - Get test configurations onit remove - Remove resources from the cluster onit test - Run tests on Kubernetes","title":"SEE ALSO"},{"location":"onos-test/docs/cli/onit/#auto-generated-by-spf13cobra-on-11-dec-2019","text":"","title":"Auto generated by spf13/cobra on 11-Dec-2019"},{"location":"onos-test/docs/cli/onit_add/","text":"onit add Add resources to the cluster Synopsis Add resources to the cluster Examples # Add a simulator with a given name to \"onos\" cluster onit add simulator - n simulator - 1 # Add a simulator with a random name to a specific cluster onit add simulator - c my - cluster # Add a network of stratum switches that emulates a linear network topology with two nodes onit add network - n stratum - linear --topo linear --devices 2 # Add latest version of an application onit add app - n onos - ztp - i onosproject / onos - ztp : latest - u 0 - p grpc = 5150 - r 2 - s / certs / onf . cacrt = configs / certs / onf . cacrt - s / certs / onos - ztp . crt = configs / certs / service . crt - s / certs / onos - ztp . key = configs / certs / service . key -- -caPath=/certs/onf.cacrt -keyPath=/certs/onos-ztp.key -certPath=/certs/onos-ztp.crt --image-pull-policy \"Always\" Options -h, --help help for add Options inherited from parent commands -c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output SEE ALSO onit - Setup test clusters and run integration tests on Kubernetes onit add app - Add an app to the test cluster onit add network - Add a stratum network to the test cluster onit add simulator - Add a device simulator to the test cluster Auto generated by spf13/cobra on 11-Dec-2019","title":"Onit add"},{"location":"onos-test/docs/cli/onit_add/#onit-add","text":"Add resources to the cluster","title":"onit add"},{"location":"onos-test/docs/cli/onit_add/#synopsis","text":"Add resources to the cluster","title":"Synopsis"},{"location":"onos-test/docs/cli/onit_add/#examples","text":"# Add a simulator with a given name to \"onos\" cluster onit add simulator - n simulator - 1 # Add a simulator with a random name to a specific cluster onit add simulator - c my - cluster # Add a network of stratum switches that emulates a linear network topology with two nodes onit add network - n stratum - linear --topo linear --devices 2 # Add latest version of an application onit add app - n onos - ztp - i onosproject / onos - ztp : latest - u 0 - p grpc = 5150 - r 2 - s / certs / onf . cacrt = configs / certs / onf . cacrt - s / certs / onos - ztp . crt = configs / certs / service . crt - s / certs / onos - ztp . key = configs / certs / service . key -- -caPath=/certs/onf.cacrt -keyPath=/certs/onos-ztp.key -certPath=/certs/onos-ztp.crt --image-pull-policy \"Always\"","title":"Examples"},{"location":"onos-test/docs/cli/onit_add/#options","text":"-h, --help help for add","title":"Options"},{"location":"onos-test/docs/cli/onit_add/#options-inherited-from-parent-commands","text":"-c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output","title":"Options inherited from parent commands"},{"location":"onos-test/docs/cli/onit_add/#see-also","text":"onit - Setup test clusters and run integration tests on Kubernetes onit add app - Add an app to the test cluster onit add network - Add a stratum network to the test cluster onit add simulator - Add a device simulator to the test cluster","title":"SEE ALSO"},{"location":"onos-test/docs/cli/onit_add/#auto-generated-by-spf13cobra-on-11-dec-2019","text":"","title":"Auto generated by spf13/cobra on 11-Dec-2019"},{"location":"onos-test/docs/cli/onit_add_app/","text":"onit add app Add an app to the test cluster Synopsis Add an app to the test cluster onit add app [ args ] [ flags ] Options -d, --debug enable debug mode -e, --env stringToString set environment variables (default []) -h, --help help for app -i, --image string the image to deploy --image-pull-policy string the Docker image pull policy (default \"IfNotPresent\") -n, --name string the name of the app to add -p, --port stringToInt ports to expose (default []) --privileged run the application in privileged mode -r, --replicas int the number of replicas to deploy (default 1) -s, --secret stringToString secrets to add to the application (default []) -u, --user int set the user with which to run the application (default -1) Options inherited from parent commands -c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output SEE ALSO onit add - Add resources to the cluster Auto generated by spf13/cobra on 11-Dec-2019","title":"Onit add app"},{"location":"onos-test/docs/cli/onit_add_app/#onit-add-app","text":"Add an app to the test cluster","title":"onit add app"},{"location":"onos-test/docs/cli/onit_add_app/#synopsis","text":"Add an app to the test cluster onit add app [ args ] [ flags ]","title":"Synopsis"},{"location":"onos-test/docs/cli/onit_add_app/#options","text":"-d, --debug enable debug mode -e, --env stringToString set environment variables (default []) -h, --help help for app -i, --image string the image to deploy --image-pull-policy string the Docker image pull policy (default \"IfNotPresent\") -n, --name string the name of the app to add -p, --port stringToInt ports to expose (default []) --privileged run the application in privileged mode -r, --replicas int the number of replicas to deploy (default 1) -s, --secret stringToString secrets to add to the application (default []) -u, --user int set the user with which to run the application (default -1)","title":"Options"},{"location":"onos-test/docs/cli/onit_add_app/#options-inherited-from-parent-commands","text":"-c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output","title":"Options inherited from parent commands"},{"location":"onos-test/docs/cli/onit_add_app/#see-also","text":"onit add - Add resources to the cluster","title":"SEE ALSO"},{"location":"onos-test/docs/cli/onit_add_app/#auto-generated-by-spf13cobra-on-11-dec-2019","text":"","title":"Auto generated by spf13/cobra on 11-Dec-2019"},{"location":"onos-test/docs/cli/onit_add_network/","text":"onit add network Add a stratum network to the test cluster Synopsis Add a stratum network to the test cluster onit add network [ args ] [ flags ] Options -d, --devices int the number of devices in the topology -h, --help help for network -i, --image string the image to deploy (default \"opennetworking/mn-stratum:latest\") --image-pull-policy string the Docker image pull policy (default \"IfNotPresent\") -n, --name string the name of the network to add -t, --topo string the topology to create Options inherited from parent commands -c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output SEE ALSO onit add - Add resources to the cluster Auto generated by spf13/cobra on 11-Dec-2019","title":"Onit add network"},{"location":"onos-test/docs/cli/onit_add_network/#onit-add-network","text":"Add a stratum network to the test cluster","title":"onit add network"},{"location":"onos-test/docs/cli/onit_add_network/#synopsis","text":"Add a stratum network to the test cluster onit add network [ args ] [ flags ]","title":"Synopsis"},{"location":"onos-test/docs/cli/onit_add_network/#options","text":"-d, --devices int the number of devices in the topology -h, --help help for network -i, --image string the image to deploy (default \"opennetworking/mn-stratum:latest\") --image-pull-policy string the Docker image pull policy (default \"IfNotPresent\") -n, --name string the name of the network to add -t, --topo string the topology to create","title":"Options"},{"location":"onos-test/docs/cli/onit_add_network/#options-inherited-from-parent-commands","text":"-c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output","title":"Options inherited from parent commands"},{"location":"onos-test/docs/cli/onit_add_network/#see-also","text":"onit add - Add resources to the cluster","title":"SEE ALSO"},{"location":"onos-test/docs/cli/onit_add_network/#auto-generated-by-spf13cobra-on-11-dec-2019","text":"","title":"Auto generated by spf13/cobra on 11-Dec-2019"},{"location":"onos-test/docs/cli/onit_add_simulator/","text":"onit add simulator Add a device simulator to the test cluster Synopsis Add a device simulator to the test cluster onit add simulator [ args ] [ flags ] Options -h, --help help for simulator -i, --image string the image to deploy (default \"onosproject/device-simulator:latest\") --image-pull-policy string the Docker image pull policy (default \"IfNotPresent\") -n, --name string the name to assign to the device simulator Options inherited from parent commands -c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output SEE ALSO onit add - Add resources to the cluster Auto generated by spf13/cobra on 11-Dec-2019","title":"Onit add simulator"},{"location":"onos-test/docs/cli/onit_add_simulator/#onit-add-simulator","text":"Add a device simulator to the test cluster","title":"onit add simulator"},{"location":"onos-test/docs/cli/onit_add_simulator/#synopsis","text":"Add a device simulator to the test cluster onit add simulator [ args ] [ flags ]","title":"Synopsis"},{"location":"onos-test/docs/cli/onit_add_simulator/#options","text":"-h, --help help for simulator -i, --image string the image to deploy (default \"onosproject/device-simulator:latest\") --image-pull-policy string the Docker image pull policy (default \"IfNotPresent\") -n, --name string the name to assign to the device simulator","title":"Options"},{"location":"onos-test/docs/cli/onit_add_simulator/#options-inherited-from-parent-commands","text":"-c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output","title":"Options inherited from parent commands"},{"location":"onos-test/docs/cli/onit_add_simulator/#see-also","text":"onit add - Add resources to the cluster","title":"SEE ALSO"},{"location":"onos-test/docs/cli/onit_add_simulator/#auto-generated-by-spf13cobra-on-11-dec-2019","text":"","title":"Auto generated by spf13/cobra on 11-Dec-2019"},{"location":"onos-test/docs/cli/onit_benchmark/","text":"onit benchmark Run benchmarks on Kubernetes Synopsis Run benchmarks on Kubernetes onit benchmark [ flags ] Options -a, --arg stringToString a mapping of named benchmark arguments (default []) -b, --benchmark string the name of the benchmark to run -h, --help help for benchmark -i, --image string the benchmark image to run --image-pull-policy string the Docker image pull policy (default \"IfNotPresent\") --no-teardown do not tear down clusters following tests -p, --parallel int the number of concurrent goroutines per client (default 1) -n, --requests int the number of requests to run (default 1) --set stringToString cluster argument overrides (default []) -s, --suite string the benchmark suite to run --timeout duration benchmark timeout (default 10m0s) -w, --workers int the number of workers to run (default 1) Options inherited from parent commands -c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output SEE ALSO onit - Setup test clusters and run integration tests on Kubernetes Auto generated by spf13/cobra on 11-Dec-2019","title":"Onit benchmark"},{"location":"onos-test/docs/cli/onit_benchmark/#onit-benchmark","text":"Run benchmarks on Kubernetes","title":"onit benchmark"},{"location":"onos-test/docs/cli/onit_benchmark/#synopsis","text":"Run benchmarks on Kubernetes onit benchmark [ flags ]","title":"Synopsis"},{"location":"onos-test/docs/cli/onit_benchmark/#options","text":"-a, --arg stringToString a mapping of named benchmark arguments (default []) -b, --benchmark string the name of the benchmark to run -h, --help help for benchmark -i, --image string the benchmark image to run --image-pull-policy string the Docker image pull policy (default \"IfNotPresent\") --no-teardown do not tear down clusters following tests -p, --parallel int the number of concurrent goroutines per client (default 1) -n, --requests int the number of requests to run (default 1) --set stringToString cluster argument overrides (default []) -s, --suite string the benchmark suite to run --timeout duration benchmark timeout (default 10m0s) -w, --workers int the number of workers to run (default 1)","title":"Options"},{"location":"onos-test/docs/cli/onit_benchmark/#options-inherited-from-parent-commands","text":"-c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output","title":"Options inherited from parent commands"},{"location":"onos-test/docs/cli/onit_benchmark/#see-also","text":"onit - Setup test clusters and run integration tests on Kubernetes","title":"SEE ALSO"},{"location":"onos-test/docs/cli/onit_benchmark/#auto-generated-by-spf13cobra-on-11-dec-2019","text":"","title":"Auto generated by spf13/cobra on 11-Dec-2019"},{"location":"onos-test/docs/cli/onit_completion/","text":"onit completion Generated bash or zsh auto-completion script Synopsis Generated bash or zsh auto-completion script onit completion < shell > [ flags ] Examples For bash run the following command from the shell: eval $(onit completion bash). For zsh run the following command from the shell: source <(onit completion zsh). Options -h, --help help for completion Options inherited from parent commands -c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output SEE ALSO onit - Setup test clusters and run integration tests on Kubernetes Auto generated by spf13/cobra on 11-Dec-2019","title":"Onit completion"},{"location":"onos-test/docs/cli/onit_completion/#onit-completion","text":"Generated bash or zsh auto-completion script","title":"onit completion"},{"location":"onos-test/docs/cli/onit_completion/#synopsis","text":"Generated bash or zsh auto-completion script onit completion < shell > [ flags ]","title":"Synopsis"},{"location":"onos-test/docs/cli/onit_completion/#examples","text":"For bash run the following command from the shell: eval $(onit completion bash). For zsh run the following command from the shell: source <(onit completion zsh).","title":"Examples"},{"location":"onos-test/docs/cli/onit_completion/#options","text":"-h, --help help for completion","title":"Options"},{"location":"onos-test/docs/cli/onit_completion/#options-inherited-from-parent-commands","text":"-c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output","title":"Options inherited from parent commands"},{"location":"onos-test/docs/cli/onit_completion/#see-also","text":"onit - Setup test clusters and run integration tests on Kubernetes","title":"SEE ALSO"},{"location":"onos-test/docs/cli/onit_completion/#auto-generated-by-spf13cobra-on-11-dec-2019","text":"","title":"Auto generated by spf13/cobra on 11-Dec-2019"},{"location":"onos-test/docs/cli/onit_create/","text":"onit create Setup a test resource on Kubernetes Synopsis Setup a test resource on Kubernetes Examples # Setup a cluster with a given name that contains one instance of each subsystem ( e . g . onos - config , onos - topo ) onit create cluster - c my - cluster # Setup a cluster with default name ( onos ) and enale onos - cli onit create cluster --set onos-cli.enabled=true # Setup a cluster that contains two instances of onos - config subsystem and two instances of onos - topo subsystem onit create cluster --set onos-topo.replicas=2 --set onos-config.replicas=2 # Setup a cluster that has two database partitions onit create cluster --set database.partitions=2 # Setup a cluster to deploy topo and config subsystems using the images with custom tags onit create cluster --set onos-topo.image=onosproject/onos-topo:mytag --set onos-config.image=onosproject/onos-config:latest Options -h, --help help for create Options inherited from parent commands -c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output SEE ALSO onit - Setup test clusters and run integration tests on Kubernetes onit create cluster - Setup a test cluster on Kubernetes Auto generated by spf13/cobra on 11-Dec-2019","title":"Onit create"},{"location":"onos-test/docs/cli/onit_create/#onit-create","text":"Setup a test resource on Kubernetes","title":"onit create"},{"location":"onos-test/docs/cli/onit_create/#synopsis","text":"Setup a test resource on Kubernetes","title":"Synopsis"},{"location":"onos-test/docs/cli/onit_create/#examples","text":"# Setup a cluster with a given name that contains one instance of each subsystem ( e . g . onos - config , onos - topo ) onit create cluster - c my - cluster # Setup a cluster with default name ( onos ) and enale onos - cli onit create cluster --set onos-cli.enabled=true # Setup a cluster that contains two instances of onos - config subsystem and two instances of onos - topo subsystem onit create cluster --set onos-topo.replicas=2 --set onos-config.replicas=2 # Setup a cluster that has two database partitions onit create cluster --set database.partitions=2 # Setup a cluster to deploy topo and config subsystems using the images with custom tags onit create cluster --set onos-topo.image=onosproject/onos-topo:mytag --set onos-config.image=onosproject/onos-config:latest","title":"Examples"},{"location":"onos-test/docs/cli/onit_create/#options","text":"-h, --help help for create","title":"Options"},{"location":"onos-test/docs/cli/onit_create/#options-inherited-from-parent-commands","text":"-c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output","title":"Options inherited from parent commands"},{"location":"onos-test/docs/cli/onit_create/#see-also","text":"onit - Setup test clusters and run integration tests on Kubernetes onit create cluster - Setup a test cluster on Kubernetes","title":"SEE ALSO"},{"location":"onos-test/docs/cli/onit_create/#auto-generated-by-spf13cobra-on-11-dec-2019","text":"","title":"Auto generated by spf13/cobra on 11-Dec-2019"},{"location":"onos-test/docs/cli/onit_create_cluster/","text":"onit create cluster Setup a test cluster on Kubernetes Synopsis Setup a test cluster on Kubernetes onit create cluster [ args ] [ flags ] Options -h, --help help for cluster --set stringToString set a cluster argument (default []) Options inherited from parent commands -c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output SEE ALSO onit create - Setup a test resource on Kubernetes Auto generated by spf13/cobra on 11-Dec-2019","title":"Onit create cluster"},{"location":"onos-test/docs/cli/onit_create_cluster/#onit-create-cluster","text":"Setup a test cluster on Kubernetes","title":"onit create cluster"},{"location":"onos-test/docs/cli/onit_create_cluster/#synopsis","text":"Setup a test cluster on Kubernetes onit create cluster [ args ] [ flags ]","title":"Synopsis"},{"location":"onos-test/docs/cli/onit_create_cluster/#options","text":"-h, --help help for cluster --set stringToString set a cluster argument (default [])","title":"Options"},{"location":"onos-test/docs/cli/onit_create_cluster/#options-inherited-from-parent-commands","text":"-c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output","title":"Options inherited from parent commands"},{"location":"onos-test/docs/cli/onit_create_cluster/#see-also","text":"onit create - Setup a test resource on Kubernetes","title":"SEE ALSO"},{"location":"onos-test/docs/cli/onit_create_cluster/#auto-generated-by-spf13cobra-on-11-dec-2019","text":"","title":"Auto generated by spf13/cobra on 11-Dec-2019"},{"location":"onos-test/docs/cli/onit_delete/","text":"onit delete Delete Kubernetes test resources Synopsis Delete Kubernetes test resources Examples # Delete a cluster with a given name onit delete cluster - c < name of cluster > # Delete the \"onos\" cluster onit delete cluster Options -h, --help help for delete Options inherited from parent commands -c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output SEE ALSO onit - Setup test clusters and run integration tests on Kubernetes onit delete cluster - Delete a test cluster on Kubernetes Auto generated by spf13/cobra on 11-Dec-2019","title":"Onit delete"},{"location":"onos-test/docs/cli/onit_delete/#onit-delete","text":"Delete Kubernetes test resources","title":"onit delete"},{"location":"onos-test/docs/cli/onit_delete/#synopsis","text":"Delete Kubernetes test resources","title":"Synopsis"},{"location":"onos-test/docs/cli/onit_delete/#examples","text":"# Delete a cluster with a given name onit delete cluster - c < name of cluster > # Delete the \"onos\" cluster onit delete cluster","title":"Examples"},{"location":"onos-test/docs/cli/onit_delete/#options","text":"-h, --help help for delete","title":"Options"},{"location":"onos-test/docs/cli/onit_delete/#options-inherited-from-parent-commands","text":"-c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output","title":"Options inherited from parent commands"},{"location":"onos-test/docs/cli/onit_delete/#see-also","text":"onit - Setup test clusters and run integration tests on Kubernetes onit delete cluster - Delete a test cluster on Kubernetes","title":"SEE ALSO"},{"location":"onos-test/docs/cli/onit_delete/#auto-generated-by-spf13cobra-on-11-dec-2019","text":"","title":"Auto generated by spf13/cobra on 11-Dec-2019"},{"location":"onos-test/docs/cli/onit_delete_cluster/","text":"onit delete cluster Delete a test cluster on Kubernetes Synopsis Delete a test cluster on Kubernetes onit delete cluster [ args ] [ flags ] Options -h, --help help for cluster Options inherited from parent commands -c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output SEE ALSO onit delete - Delete Kubernetes test resources Auto generated by spf13/cobra on 11-Dec-2019","title":"Onit delete cluster"},{"location":"onos-test/docs/cli/onit_delete_cluster/#onit-delete-cluster","text":"Delete a test cluster on Kubernetes","title":"onit delete cluster"},{"location":"onos-test/docs/cli/onit_delete_cluster/#synopsis","text":"Delete a test cluster on Kubernetes onit delete cluster [ args ] [ flags ]","title":"Synopsis"},{"location":"onos-test/docs/cli/onit_delete_cluster/#options","text":"-h, --help help for cluster","title":"Options"},{"location":"onos-test/docs/cli/onit_delete_cluster/#options-inherited-from-parent-commands","text":"-c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output","title":"Options inherited from parent commands"},{"location":"onos-test/docs/cli/onit_delete_cluster/#see-also","text":"onit delete - Delete Kubernetes test resources","title":"SEE ALSO"},{"location":"onos-test/docs/cli/onit_delete_cluster/#auto-generated-by-spf13cobra-on-11-dec-2019","text":"","title":"Auto generated by spf13/cobra on 11-Dec-2019"},{"location":"onos-test/docs/cli/onit_exec/","text":"onit exec Execute an ONOS CLI command Synopsis Execute an ONOS CLI command onit exec { command } [ flags ] Examples # Execute a command on the ONOS CLI onit exec -- onos topo get devices Options -h, --help help for exec Options inherited from parent commands -c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output SEE ALSO onit - Setup test clusters and run integration tests on Kubernetes Auto generated by spf13/cobra on 11-Dec-2019","title":"Onit exec"},{"location":"onos-test/docs/cli/onit_exec/#onit-exec","text":"Execute an ONOS CLI command","title":"onit exec"},{"location":"onos-test/docs/cli/onit_exec/#synopsis","text":"Execute an ONOS CLI command onit exec { command } [ flags ]","title":"Synopsis"},{"location":"onos-test/docs/cli/onit_exec/#examples","text":"# Execute a command on the ONOS CLI onit exec -- onos topo get devices","title":"Examples"},{"location":"onos-test/docs/cli/onit_exec/#options","text":"-h, --help help for exec","title":"Options"},{"location":"onos-test/docs/cli/onit_exec/#options-inherited-from-parent-commands","text":"-c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output","title":"Options inherited from parent commands"},{"location":"onos-test/docs/cli/onit_exec/#see-also","text":"onit - Setup test clusters and run integration tests on Kubernetes","title":"SEE ALSO"},{"location":"onos-test/docs/cli/onit_exec/#auto-generated-by-spf13cobra-on-11-dec-2019","text":"","title":"Auto generated by spf13/cobra on 11-Dec-2019"},{"location":"onos-test/docs/cli/onit_get/","text":"onit get Get test configurations Synopsis Get test configurations Examples # Get a list of clusters onit get clusters # Get the list of installed apps onit get apps # Get a list of simulators onit get simulators # Get a list of networks onit get networks Options -h, --help help for get Options inherited from parent commands -c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output SEE ALSO onit - Setup test clusters and run integration tests on Kubernetes onit get apps - Get the currently configured cluster's apps onit get clusters - Get a list of all deployed clusters onit get networks - Get the currently configured cluster's networks onit get simulators - Get the currently configured cluster's simulators Auto generated by spf13/cobra on 11-Dec-2019","title":"Onit get"},{"location":"onos-test/docs/cli/onit_get/#onit-get","text":"Get test configurations","title":"onit get"},{"location":"onos-test/docs/cli/onit_get/#synopsis","text":"Get test configurations","title":"Synopsis"},{"location":"onos-test/docs/cli/onit_get/#examples","text":"# Get a list of clusters onit get clusters # Get the list of installed apps onit get apps # Get a list of simulators onit get simulators # Get a list of networks onit get networks","title":"Examples"},{"location":"onos-test/docs/cli/onit_get/#options","text":"-h, --help help for get","title":"Options"},{"location":"onos-test/docs/cli/onit_get/#options-inherited-from-parent-commands","text":"-c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output","title":"Options inherited from parent commands"},{"location":"onos-test/docs/cli/onit_get/#see-also","text":"onit - Setup test clusters and run integration tests on Kubernetes onit get apps - Get the currently configured cluster's apps onit get clusters - Get a list of all deployed clusters onit get networks - Get the currently configured cluster's networks onit get simulators - Get the currently configured cluster's simulators","title":"SEE ALSO"},{"location":"onos-test/docs/cli/onit_get/#auto-generated-by-spf13cobra-on-11-dec-2019","text":"","title":"Auto generated by spf13/cobra on 11-Dec-2019"},{"location":"onos-test/docs/cli/onit_get_apps/","text":"onit get apps Get the currently configured cluster's apps Synopsis Get the currently configured cluster's apps onit get apps [ flags ] Options -h, --help help for apps Options inherited from parent commands -c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output SEE ALSO onit get - Get test configurations Auto generated by spf13/cobra on 11-Dec-2019","title":"Onit get apps"},{"location":"onos-test/docs/cli/onit_get_apps/#onit-get-apps","text":"Get the currently configured cluster's apps","title":"onit get apps"},{"location":"onos-test/docs/cli/onit_get_apps/#synopsis","text":"Get the currently configured cluster's apps onit get apps [ flags ]","title":"Synopsis"},{"location":"onos-test/docs/cli/onit_get_apps/#options","text":"-h, --help help for apps","title":"Options"},{"location":"onos-test/docs/cli/onit_get_apps/#options-inherited-from-parent-commands","text":"-c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output","title":"Options inherited from parent commands"},{"location":"onos-test/docs/cli/onit_get_apps/#see-also","text":"onit get - Get test configurations","title":"SEE ALSO"},{"location":"onos-test/docs/cli/onit_get_apps/#auto-generated-by-spf13cobra-on-11-dec-2019","text":"","title":"Auto generated by spf13/cobra on 11-Dec-2019"},{"location":"onos-test/docs/cli/onit_get_clusters/","text":"onit get clusters Get a list of all deployed clusters Synopsis Get a list of all deployed clusters onit get clusters [ flags ] Options -h, --help help for clusters Options inherited from parent commands -c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output SEE ALSO onit get - Get test configurations Auto generated by spf13/cobra on 11-Dec-2019","title":"Onit get clusters"},{"location":"onos-test/docs/cli/onit_get_clusters/#onit-get-clusters","text":"Get a list of all deployed clusters","title":"onit get clusters"},{"location":"onos-test/docs/cli/onit_get_clusters/#synopsis","text":"Get a list of all deployed clusters onit get clusters [ flags ]","title":"Synopsis"},{"location":"onos-test/docs/cli/onit_get_clusters/#options","text":"-h, --help help for clusters","title":"Options"},{"location":"onos-test/docs/cli/onit_get_clusters/#options-inherited-from-parent-commands","text":"-c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output","title":"Options inherited from parent commands"},{"location":"onos-test/docs/cli/onit_get_clusters/#see-also","text":"onit get - Get test configurations","title":"SEE ALSO"},{"location":"onos-test/docs/cli/onit_get_clusters/#auto-generated-by-spf13cobra-on-11-dec-2019","text":"","title":"Auto generated by spf13/cobra on 11-Dec-2019"},{"location":"onos-test/docs/cli/onit_get_networks/","text":"onit get networks Get the currently configured cluster's networks Synopsis Get the currently configured cluster's networks onit get networks [ flags ] Options -h, --help help for networks Options inherited from parent commands -c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output SEE ALSO onit get - Get test configurations Auto generated by spf13/cobra on 11-Dec-2019","title":"Onit get networks"},{"location":"onos-test/docs/cli/onit_get_networks/#onit-get-networks","text":"Get the currently configured cluster's networks","title":"onit get networks"},{"location":"onos-test/docs/cli/onit_get_networks/#synopsis","text":"Get the currently configured cluster's networks onit get networks [ flags ]","title":"Synopsis"},{"location":"onos-test/docs/cli/onit_get_networks/#options","text":"-h, --help help for networks","title":"Options"},{"location":"onos-test/docs/cli/onit_get_networks/#options-inherited-from-parent-commands","text":"-c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output","title":"Options inherited from parent commands"},{"location":"onos-test/docs/cli/onit_get_networks/#see-also","text":"onit get - Get test configurations","title":"SEE ALSO"},{"location":"onos-test/docs/cli/onit_get_networks/#auto-generated-by-spf13cobra-on-11-dec-2019","text":"","title":"Auto generated by spf13/cobra on 11-Dec-2019"},{"location":"onos-test/docs/cli/onit_get_simulators/","text":"onit get simulators Get the currently configured cluster's simulators Synopsis Get the currently configured cluster's simulators onit get simulators [ flags ] Options -h, --help help for simulators Options inherited from parent commands -c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output SEE ALSO onit get - Get test configurations Auto generated by spf13/cobra on 11-Dec-2019","title":"Onit get simulators"},{"location":"onos-test/docs/cli/onit_get_simulators/#onit-get-simulators","text":"Get the currently configured cluster's simulators","title":"onit get simulators"},{"location":"onos-test/docs/cli/onit_get_simulators/#synopsis","text":"Get the currently configured cluster's simulators onit get simulators [ flags ]","title":"Synopsis"},{"location":"onos-test/docs/cli/onit_get_simulators/#options","text":"-h, --help help for simulators","title":"Options"},{"location":"onos-test/docs/cli/onit_get_simulators/#options-inherited-from-parent-commands","text":"-c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output","title":"Options inherited from parent commands"},{"location":"onos-test/docs/cli/onit_get_simulators/#see-also","text":"onit get - Get test configurations","title":"SEE ALSO"},{"location":"onos-test/docs/cli/onit_get_simulators/#auto-generated-by-spf13cobra-on-11-dec-2019","text":"","title":"Auto generated by spf13/cobra on 11-Dec-2019"},{"location":"onos-test/docs/cli/onit_remove/","text":"onit remove Remove resources from the cluster Synopsis Remove resources from the cluster Examples # Remove a simulator with a given name running on a specific cluster onit remove simulator - n < simulator - name > - c my - cluster # Remove a network with a given name onit remove network - n < network - name > - c my - cluster # Remove an app onit remove app - n < app - name > - c my - cluster Options -h, --help help for remove Options inherited from parent commands -c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output SEE ALSO onit - Setup test clusters and run integration tests on Kubernetes onit remove app - Remove an app from the cluster onit remove network - Remove a stratum network from the cluster onit remove simulator - Remove a device simulator from the cluster Auto generated by spf13/cobra on 11-Dec-2019","title":"Onit remove"},{"location":"onos-test/docs/cli/onit_remove/#onit-remove","text":"Remove resources from the cluster","title":"onit remove"},{"location":"onos-test/docs/cli/onit_remove/#synopsis","text":"Remove resources from the cluster","title":"Synopsis"},{"location":"onos-test/docs/cli/onit_remove/#examples","text":"# Remove a simulator with a given name running on a specific cluster onit remove simulator - n < simulator - name > - c my - cluster # Remove a network with a given name onit remove network - n < network - name > - c my - cluster # Remove an app onit remove app - n < app - name > - c my - cluster","title":"Examples"},{"location":"onos-test/docs/cli/onit_remove/#options","text":"-h, --help help for remove","title":"Options"},{"location":"onos-test/docs/cli/onit_remove/#options-inherited-from-parent-commands","text":"-c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output","title":"Options inherited from parent commands"},{"location":"onos-test/docs/cli/onit_remove/#see-also","text":"onit - Setup test clusters and run integration tests on Kubernetes onit remove app - Remove an app from the cluster onit remove network - Remove a stratum network from the cluster onit remove simulator - Remove a device simulator from the cluster","title":"SEE ALSO"},{"location":"onos-test/docs/cli/onit_remove/#auto-generated-by-spf13cobra-on-11-dec-2019","text":"","title":"Auto generated by spf13/cobra on 11-Dec-2019"},{"location":"onos-test/docs/cli/onit_remove_app/","text":"onit remove app Remove an app from the cluster Synopsis Remove an app from the cluster onit remove app [ args ] [ flags ] Options -h, --help help for app -n, --name string the name of the app to remove Options inherited from parent commands -c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output SEE ALSO onit remove - Remove resources from the cluster Auto generated by spf13/cobra on 11-Dec-2019","title":"Onit remove app"},{"location":"onos-test/docs/cli/onit_remove_app/#onit-remove-app","text":"Remove an app from the cluster","title":"onit remove app"},{"location":"onos-test/docs/cli/onit_remove_app/#synopsis","text":"Remove an app from the cluster onit remove app [ args ] [ flags ]","title":"Synopsis"},{"location":"onos-test/docs/cli/onit_remove_app/#options","text":"-h, --help help for app -n, --name string the name of the app to remove","title":"Options"},{"location":"onos-test/docs/cli/onit_remove_app/#options-inherited-from-parent-commands","text":"-c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output","title":"Options inherited from parent commands"},{"location":"onos-test/docs/cli/onit_remove_app/#see-also","text":"onit remove - Remove resources from the cluster","title":"SEE ALSO"},{"location":"onos-test/docs/cli/onit_remove_app/#auto-generated-by-spf13cobra-on-11-dec-2019","text":"","title":"Auto generated by spf13/cobra on 11-Dec-2019"},{"location":"onos-test/docs/cli/onit_remove_network/","text":"onit remove network Remove a stratum network from the cluster Synopsis Remove a stratum network from the cluster onit remove network [ args ] [ flags ] Options -h, --help help for network -n, --name string the name of the network to remove Options inherited from parent commands -c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output SEE ALSO onit remove - Remove resources from the cluster Auto generated by spf13/cobra on 11-Dec-2019","title":"Onit remove network"},{"location":"onos-test/docs/cli/onit_remove_network/#onit-remove-network","text":"Remove a stratum network from the cluster","title":"onit remove network"},{"location":"onos-test/docs/cli/onit_remove_network/#synopsis","text":"Remove a stratum network from the cluster onit remove network [ args ] [ flags ]","title":"Synopsis"},{"location":"onos-test/docs/cli/onit_remove_network/#options","text":"-h, --help help for network -n, --name string the name of the network to remove","title":"Options"},{"location":"onos-test/docs/cli/onit_remove_network/#options-inherited-from-parent-commands","text":"-c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output","title":"Options inherited from parent commands"},{"location":"onos-test/docs/cli/onit_remove_network/#see-also","text":"onit remove - Remove resources from the cluster","title":"SEE ALSO"},{"location":"onos-test/docs/cli/onit_remove_network/#auto-generated-by-spf13cobra-on-11-dec-2019","text":"","title":"Auto generated by spf13/cobra on 11-Dec-2019"},{"location":"onos-test/docs/cli/onit_remove_simulator/","text":"onit remove simulator Remove a device simulator from the cluster Synopsis Remove a device simulator from the cluster onit remove simulator [ args ] [ flags ] Options -h, --help help for simulator -n, --name string the name of the simulator to remove Options inherited from parent commands -c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output SEE ALSO onit remove - Remove resources from the cluster Auto generated by spf13/cobra on 11-Dec-2019","title":"Onit remove simulator"},{"location":"onos-test/docs/cli/onit_remove_simulator/#onit-remove-simulator","text":"Remove a device simulator from the cluster","title":"onit remove simulator"},{"location":"onos-test/docs/cli/onit_remove_simulator/#synopsis","text":"Remove a device simulator from the cluster onit remove simulator [ args ] [ flags ]","title":"Synopsis"},{"location":"onos-test/docs/cli/onit_remove_simulator/#options","text":"-h, --help help for simulator -n, --name string the name of the simulator to remove","title":"Options"},{"location":"onos-test/docs/cli/onit_remove_simulator/#options-inherited-from-parent-commands","text":"-c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output","title":"Options inherited from parent commands"},{"location":"onos-test/docs/cli/onit_remove_simulator/#see-also","text":"onit remove - Remove resources from the cluster","title":"SEE ALSO"},{"location":"onos-test/docs/cli/onit_remove_simulator/#auto-generated-by-spf13cobra-on-11-dec-2019","text":"","title":"Auto generated by spf13/cobra on 11-Dec-2019"},{"location":"onos-test/docs/cli/onit_test/","text":"onit test Run tests on Kubernetes Synopsis Run tests on Kubernetes onit test [ flags ] Options -h, --help help for test -i, --image string the test image to run --image-pull-policy string the Docker image pull policy (default \"IfNotPresent\") --no-teardown do not tear down clusters following tests --set stringToString cluster argument overrides (default []) -s, --suite string the test suite to run -t, --test string the name of the test method to run --timeout duration test timeout (default 10m0s) Options inherited from parent commands -c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output SEE ALSO onit - Setup test clusters and run integration tests on Kubernetes Auto generated by spf13/cobra on 11-Dec-2019","title":"Onit test"},{"location":"onos-test/docs/cli/onit_test/#onit-test","text":"Run tests on Kubernetes","title":"onit test"},{"location":"onos-test/docs/cli/onit_test/#synopsis","text":"Run tests on Kubernetes onit test [ flags ]","title":"Synopsis"},{"location":"onos-test/docs/cli/onit_test/#options","text":"-h, --help help for test -i, --image string the test image to run --image-pull-policy string the Docker image pull policy (default \"IfNotPresent\") --no-teardown do not tear down clusters following tests --set stringToString cluster argument overrides (default []) -s, --suite string the test suite to run -t, --test string the name of the test method to run --timeout duration test timeout (default 10m0s)","title":"Options"},{"location":"onos-test/docs/cli/onit_test/#options-inherited-from-parent-commands","text":"-c, --cluster string the cluster on which to execute the command -v, --verbose Enable verbose output","title":"Options inherited from parent commands"},{"location":"onos-test/docs/cli/onit_test/#see-also","text":"onit - Setup test clusters and run integration tests on Kubernetes","title":"SEE ALSO"},{"location":"onos-test/docs/cli/onit_test/#auto-generated-by-spf13cobra-on-11-dec-2019","text":"","title":"Auto generated by spf13/cobra on 11-Dec-2019"},{"location":"onos-topo/docs/cli/","text":"Command-Line Interface The project provides a command-line facilities for remotely interacting with the topology subsystem. The commands are available at run-time using the consolidated onos client hosted in the onos-cli repository, but their implementation is hosted and built here. The documentation about building and deploying the consolidate onos client or its Docker container is available in the onos-cli GitHub repository. Usage > onos topo --help ... Global Flags Since the onos command is a client, it requires the address of the server as well as the paths to the key and the certificate to establish secure connection to the server. These options are global to all commands and can be persisted to avoid having to specify them for each command. For example, you can set the default server address as follows: > onos topo config set address onos-topo-server:5150 Subsequent usages of the onos command can then abstain from using the --address option to indicate the server address, resulting in easier usage. Example Commands Adding, Removing and Listing Devices Until the full topology subsystem is available, there is a provisional administrative interface that allows devices to be added, removed and listed via gRPC. A command has been provided to allow manipulating the device inventory from the command line using this gRPC service. To add a new device, specify the device information protobuf encoding as the value of the addDevice option. The id , address and version fields are required at the minimum. For example: > onos topo add device device-4 --address localhost:10164 --version 1 .0.0 Added device device-4 TODO: We will have to add type and role fields to the device. In order to remove a device, specify its ID as follows: > onos topo remove device device-2 Removed device device-2 If you do not specify any options, the command will list all the devices currently in the inventory: > onos topo get devices -v NAME ADDRESS VERSION localhost-3 localhost:10163 1 .0.0 USER PASSWORD TIMEOUT PLAIN INSECURE 5 false false stratum-sim-1 localhost:50001 1 .0.0 USER PASSWORD TIMEOUT PLAIN INSECURE 5 true false localhost-1 localhost:10161 1 .0.0 USER PASSWORD TIMEOUT PLAIN INSECURE devicesim notused 5 false false localhost-2 localhost:10162 1 .0.0 USER PASSWORD TIMEOUT PLAIN INSECURE 5 false false","title":"How To Use Topology Subsystem CLI?"},{"location":"onos-topo/docs/cli/#command-line-interface","text":"The project provides a command-line facilities for remotely interacting with the topology subsystem. The commands are available at run-time using the consolidated onos client hosted in the onos-cli repository, but their implementation is hosted and built here. The documentation about building and deploying the consolidate onos client or its Docker container is available in the onos-cli GitHub repository.","title":"Command-Line Interface"},{"location":"onos-topo/docs/cli/#usage","text":"> onos topo --help ...","title":"Usage"},{"location":"onos-topo/docs/cli/#global-flags","text":"Since the onos command is a client, it requires the address of the server as well as the paths to the key and the certificate to establish secure connection to the server. These options are global to all commands and can be persisted to avoid having to specify them for each command. For example, you can set the default server address as follows: > onos topo config set address onos-topo-server:5150 Subsequent usages of the onos command can then abstain from using the --address option to indicate the server address, resulting in easier usage.","title":"Global Flags"},{"location":"onos-topo/docs/cli/#example-commands","text":"","title":"Example Commands"},{"location":"onos-topo/docs/cli/#adding-removing-and-listing-devices","text":"Until the full topology subsystem is available, there is a provisional administrative interface that allows devices to be added, removed and listed via gRPC. A command has been provided to allow manipulating the device inventory from the command line using this gRPC service. To add a new device, specify the device information protobuf encoding as the value of the addDevice option. The id , address and version fields are required at the minimum. For example: > onos topo add device device-4 --address localhost:10164 --version 1 .0.0 Added device device-4 TODO: We will have to add type and role fields to the device. In order to remove a device, specify its ID as follows: > onos topo remove device device-2 Removed device device-2 If you do not specify any options, the command will list all the devices currently in the inventory: > onos topo get devices -v NAME ADDRESS VERSION localhost-3 localhost:10163 1 .0.0 USER PASSWORD TIMEOUT PLAIN INSECURE 5 false false stratum-sim-1 localhost:50001 1 .0.0 USER PASSWORD TIMEOUT PLAIN INSECURE 5 true false localhost-1 localhost:10161 1 .0.0 USER PASSWORD TIMEOUT PLAIN INSECURE devicesim notused 5 false false localhost-2 localhost:10162 1 .0.0 USER PASSWORD TIMEOUT PLAIN INSECURE 5 false false","title":"Adding, Removing and Listing Devices"},{"location":"onos-topo/docs/deployment/","text":"Deploying onos-topo This guide deploys onos-topo through it's Helm chart assumes you have a Kubernetes cluster running with an atomix controller deployed in a namespace. onos-topo Helm chart is based on Helm 3.0 version, with no need for the Tiller pod to be present. If you don't have a cluster running and want to try on your local machine please follow first the Kubernetes setup steps outlined in deploy with Helm . The following steps assume you have the setup outlined in that page, including the micro-onos namespace configured. Installing the Chart To install the chart in the micro-onos namespace run from the root directory of the onos-helm-charts repo the command: helm install -n micro-onos onos-topo onos-topo The output should be: NAME: onos-topo LAST DEPLOYED: Tue Nov 26 13 :31:42 2019 NAMESPACE: default STATUS: deployed REVISION: 1 TEST SUITE: None helm install assigns a unique name to the chart and displays all the k8s resources that were created by it. To list the charts that are installed and view their statuses, run helm ls : helm ls NAME REVISION UPDATED STATUS CHART APP VERSION NAMESPACE ... onos-topo 1 Tue May 14 18 :56:39 2019 DEPLOYED onos-topo-0.0.1 0 .0.1 default Onos Topo Partition Set The onos-topo chart also deployes a PartitionSet custom Atomix resource to store all the configuration in a replicated and fail safe manner. In the following example there is only one partition set deployed onos-topo-1-0 . NAMESPACE NAME READY STATUS RESTARTS AGE default atomix-controller-b579b9f48-lgvxf 1 /1 Running 0 63m default onos-topo-1-0 1 /1 Running 0 61m default onos-topo-77765c9dc4-vsjjn 1 /1 Running 0 61m One can customize the number of partitions and replicas by modifying, in values.yaml , under store/raft the values of partitions: 1 partitionSize: 1 Installing the chart in a different namespace. Issue the helm install command substituting micro-onos with your namespace. helm install -n <your_name_space> onos-topo onos-topo Installing the chart with debug. onos-topo offers the capability to open a debug port (4000) to the image. To enable the debug capabilities please set the debug flag to true in values.yaml or pass it to helm install helm install -n micro-onos onos-topo onos-topo --set debug = true Also to verify how template values are expanded, run: helm install template onos-gui Troubleshoot If your chart does not install or the pod is not running for some reason and/or you modified values Helm offers two flags to help you debug your chart: --dry-run check the chart without actually installing the pod. --debug prints out more information about your chart helm install -n micro-onos onos-topo --debug --dry-run onos-topo/ Uninstalling the chart. To remove the onos-topo pod issue helm delete -n micro-onos onos-topo Pod Information To view the pods that are deployed, run kubectl -n micro-onos get pods .","title":"How To Deploy with Helm"},{"location":"onos-topo/docs/deployment/#deploying-onos-topo","text":"This guide deploys onos-topo through it's Helm chart assumes you have a Kubernetes cluster running with an atomix controller deployed in a namespace. onos-topo Helm chart is based on Helm 3.0 version, with no need for the Tiller pod to be present. If you don't have a cluster running and want to try on your local machine please follow first the Kubernetes setup steps outlined in deploy with Helm . The following steps assume you have the setup outlined in that page, including the micro-onos namespace configured.","title":"Deploying onos-topo"},{"location":"onos-topo/docs/deployment/#installing-the-chart","text":"To install the chart in the micro-onos namespace run from the root directory of the onos-helm-charts repo the command: helm install -n micro-onos onos-topo onos-topo The output should be: NAME: onos-topo LAST DEPLOYED: Tue Nov 26 13 :31:42 2019 NAMESPACE: default STATUS: deployed REVISION: 1 TEST SUITE: None helm install assigns a unique name to the chart and displays all the k8s resources that were created by it. To list the charts that are installed and view their statuses, run helm ls : helm ls NAME REVISION UPDATED STATUS CHART APP VERSION NAMESPACE ... onos-topo 1 Tue May 14 18 :56:39 2019 DEPLOYED onos-topo-0.0.1 0 .0.1 default","title":"Installing the Chart"},{"location":"onos-topo/docs/deployment/#onos-topo-partition-set","text":"The onos-topo chart also deployes a PartitionSet custom Atomix resource to store all the configuration in a replicated and fail safe manner. In the following example there is only one partition set deployed onos-topo-1-0 . NAMESPACE NAME READY STATUS RESTARTS AGE default atomix-controller-b579b9f48-lgvxf 1 /1 Running 0 63m default onos-topo-1-0 1 /1 Running 0 61m default onos-topo-77765c9dc4-vsjjn 1 /1 Running 0 61m One can customize the number of partitions and replicas by modifying, in values.yaml , under store/raft the values of partitions: 1 partitionSize: 1","title":"Onos Topo Partition Set"},{"location":"onos-topo/docs/deployment/#installing-the-chart-in-a-different-namespace","text":"Issue the helm install command substituting micro-onos with your namespace. helm install -n <your_name_space> onos-topo onos-topo","title":"Installing the chart in a different namespace."},{"location":"onos-topo/docs/deployment/#installing-the-chart-with-debug","text":"onos-topo offers the capability to open a debug port (4000) to the image. To enable the debug capabilities please set the debug flag to true in values.yaml or pass it to helm install helm install -n micro-onos onos-topo onos-topo --set debug = true Also to verify how template values are expanded, run: helm install template onos-gui","title":"Installing the chart with debug."},{"location":"onos-topo/docs/deployment/#troubleshoot","text":"If your chart does not install or the pod is not running for some reason and/or you modified values Helm offers two flags to help you debug your chart: --dry-run check the chart without actually installing the pod. --debug prints out more information about your chart helm install -n micro-onos onos-topo --debug --dry-run onos-topo/","title":"Troubleshoot"},{"location":"onos-topo/docs/deployment/#uninstalling-the-chart","text":"To remove the onos-topo pod issue helm delete -n micro-onos onos-topo","title":"Uninstalling the chart."},{"location":"onos-topo/docs/deployment/#pod-information","text":"To view the pods that are deployed, run kubectl -n micro-onos get pods .","title":"Pod Information"},{"location":"onos-topo/docs/api/admin/","text":"Protocol Documentation Table of Contents api/admin/admin.proto TopoAdminService Scalar Value Types Top api/admin/admin.proto TopoAdminService TopoAdminService provides means for interactions with the topology subsystem. Method Name Request Type Response Type Description Scalar Value Types .proto Type Notes C++ Java Python Go C# PHP Ruby double double double float float64 double float Float float float float float float32 float float Float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required) int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required) uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required) sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required) sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required) fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required) sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum bool bool boolean boolean bool bool boolean TrueClass/FalseClass string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8) bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)","title":"Admin API"},{"location":"onos-topo/docs/api/admin/#protocol-documentation","text":"","title":"Protocol Documentation"},{"location":"onos-topo/docs/api/admin/#table-of-contents","text":"api/admin/admin.proto TopoAdminService Scalar Value Types Top","title":"Table of Contents"},{"location":"onos-topo/docs/api/admin/#apiadminadminproto","text":"","title":"api/admin/admin.proto"},{"location":"onos-topo/docs/api/admin/#topoadminservice","text":"TopoAdminService provides means for interactions with the topology subsystem. Method Name Request Type Response Type Description","title":"TopoAdminService"},{"location":"onos-topo/docs/api/admin/#scalar-value-types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby double double double float float64 double float Float float float float float float32 float float Float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required) int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required) uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required) sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required) sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required) fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required) sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum bool bool boolean boolean bool bool boolean TrueClass/FalseClass string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8) bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)","title":"Scalar Value Types"},{"location":"onos-topo/docs/api/device/","text":"Protocol Documentation Table of Contents api/device/device.proto AddRequest AddResponse Credentials Device Device.AttributesEntry GetRequest GetResponse ListRequest ListResponse ProtocolState RemoveRequest RemoveResponse TlsConfig UpdateRequest UpdateResponse ChannelState ConnectivityState ListResponse.Type Protocol ServiceState DeviceService Scalar Value Types Top api/device/device.proto AddRequest AddRequest adds a device to the topology Field Type Label Description device Device device is the device to add AddResponse AddResponse is sent in response to an AddDeviceRequest Field Type Label Description device Device device is the device with a revision number Credentials Credentials is the device credentials Field Type Label Description user string user is the user with which to connect to the device password string password is the password for connecting to the device Device Device contains information about a device Field Type Label Description id string id is a globally unique device identifier revision uint64 revision is the revision of the device address string address is the host:port of the device target string target is the device target version string version is the device software version timeout google.protobuf.Duration timeout indicates the device request timeout credentials Credentials credentials contains the credentials for connecting to the device tls TlsConfig tls is the device TLS configuration type string type is the type of the device role string role is a role for the device attributes Device.AttributesEntry repeated attributes is an arbitrary mapping of attribute keys/values protocols ProtocolState repeated Device.AttributesEntry Field Type Label Description key string value string GetRequest GetRequest gets a device by ID Field Type Label Description id string id is the unique device ID with which to lookup the device GetResponse GetResponse carries a device Field Type Label Description device Device device is the device object ListRequest ListRequest requests a stream of devices and changes By default, the request requests a stream of all devices that are present in the topology when the request is received by the service. However, if subscribe is true , the stream will remain open after all devices have been sent and events that occur following the last device will be streamed to the client until the stream is closed. Field Type Label Description subscribe bool subscribe indicates whether to subscribe to events (e.g. ADD, UPDATE, and REMOVE) that occur after all devices have been streamed to the client ListResponse ListResponse carries a single device event Field Type Label Description type ListResponse.Type type is the type of the event device Device device is the device on which the event occurred ProtocolState ProtocolState contains information related to service and connectivity to a device Field Type Label Description protocol Protocol The protocol to which state relates connectivityState ConnectivityState ConnectivityState contains the L3 connectivity information channelState ChannelState ChannelState relates to the availability of the gRPC channel serviceState ServiceState ServiceState indicates the availability of the gRPC servic on top of the channel RemoveRequest RemoveRequest removes a device by ID Field Type Label Description device Device device is the device to remove RemoveResponse RemoveResponse is sent in response to a RemoveDeviceRequest TlsConfig Device TLS configuration Field Type Label Description caCert string caCert is the name of the device's CA certificate cert string cert is the name of the device's certificate key string key is the name of the device's TLS key plain bool plain indicates whether to connect to the device over plaintext insecure bool insecure indicates whether to connect to the device with insecure communication UpdateRequest UpdateRequest updates a device Field Type Label Description device Device device is the updated device UpdateResponse UpdateResponse is sent in response to an UpdateDeviceRequest Field Type Label Description device Device device is the device with updated revision ChannelState ConnectivityState represents the state of a gRPC channel to the device from the service container Name Number Description UNKNOWN_CHANNEL_STATE 0 UNKNOWN_CHANNEL_STATE constant needed to go around proto3 nullifying the 0 values CONNECTED 1 CONNECTED indicates the corresponding grpc channel is connected on this device DISCONNECTED 2 DISCONNECTED indicates the corresponding grpc channel is not connected on this device ConnectivityState ConnectivityState represents the L3 reachability of a device from the service container (e.g. enos-config), independently of gRPC or the service itself (e.g. gNMI) Name Number Description UNKNOWN_CONNECTIVITY_STATE 0 UNKNOWN_CONNECTIVITY_STATE constant needed to go around proto3 nullifying the 0 values REACHABLE 1 REACHABLE indicates the the service can reach the device at L3 UNREACHABLE 2 UNREACHABLE indicates the the service can't reach the device at L3 ListResponse.Type Device event type Name Number Description NONE 0 NONE indicates this response does not represent a state change ADDED 1 ADDED is an event which occurs when a device is added to the topology UPDATED 2 UPDATED is an event which occurs when a device is updated REMOVED 3 REMOVED is an event which occurs when a device is removed from the topology Protocol Protocol to interact with a device Name Number Description UNKNOWN_PROTOCOL 0 UNKNOWN_PROTOCOL constant needed to go around proto3 nullifying the 0 values GNMI 1 GNMI protocol reference P4RUNTIME 2 P4RUNTIME protocol reference GNOI 3 GNOI protocol reference E2AP 4 E2 Control Plane Protocol ServiceState ServiceState represents the state of the gRPC service (e.g. gNMI) to the device from the service container Name Number Description UNKNOWN_SERVICE_STATE 0 UNKNOWN_SERVICE_STATE constant needed to go around proto3 nullifying the 0 values AVAILABLE 1 AVAILABLE indicates the corresponding grpc service is available UNAVAILABLE 2 UNAVAILABLE indicates the corresponding grpc service is not available CONNECTING 3 CONNECTING indicates the corresponding protocol is in the connecting phase on this device DeviceService DeviceService provides an API for managing devices. Method Name Request Type Response Type Description Add AddRequest AddResponse Add adds a device to the topology Update UpdateRequest UpdateResponse Update updates a device Get GetRequest GetResponse Get gets a device by ID List ListRequest ListResponse stream List gets a stream of device add/update/remove events Remove RemoveRequest RemoveResponse Remove removes a device from the topology Scalar Value Types .proto Type Notes C++ Java Python Go C# PHP Ruby double double double float float64 double float Float float float float float float32 float float Float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required) int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required) uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required) sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required) sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required) fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required) sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum bool bool boolean boolean bool bool boolean TrueClass/FalseClass string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8) bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)","title":"Device API"},{"location":"onos-topo/docs/api/device/#protocol-documentation","text":"","title":"Protocol Documentation"},{"location":"onos-topo/docs/api/device/#table-of-contents","text":"api/device/device.proto AddRequest AddResponse Credentials Device Device.AttributesEntry GetRequest GetResponse ListRequest ListResponse ProtocolState RemoveRequest RemoveResponse TlsConfig UpdateRequest UpdateResponse ChannelState ConnectivityState ListResponse.Type Protocol ServiceState DeviceService Scalar Value Types Top","title":"Table of Contents"},{"location":"onos-topo/docs/api/device/#apidevicedeviceproto","text":"","title":"api/device/device.proto"},{"location":"onos-topo/docs/api/device/#addrequest","text":"AddRequest adds a device to the topology Field Type Label Description device Device device is the device to add","title":"AddRequest"},{"location":"onos-topo/docs/api/device/#addresponse","text":"AddResponse is sent in response to an AddDeviceRequest Field Type Label Description device Device device is the device with a revision number","title":"AddResponse"},{"location":"onos-topo/docs/api/device/#credentials","text":"Credentials is the device credentials Field Type Label Description user string user is the user with which to connect to the device password string password is the password for connecting to the device","title":"Credentials"},{"location":"onos-topo/docs/api/device/#device","text":"Device contains information about a device Field Type Label Description id string id is a globally unique device identifier revision uint64 revision is the revision of the device address string address is the host:port of the device target string target is the device target version string version is the device software version timeout google.protobuf.Duration timeout indicates the device request timeout credentials Credentials credentials contains the credentials for connecting to the device tls TlsConfig tls is the device TLS configuration type string type is the type of the device role string role is a role for the device attributes Device.AttributesEntry repeated attributes is an arbitrary mapping of attribute keys/values protocols ProtocolState repeated","title":"Device"},{"location":"onos-topo/docs/api/device/#deviceattributesentry","text":"Field Type Label Description key string value string","title":"Device.AttributesEntry"},{"location":"onos-topo/docs/api/device/#getrequest","text":"GetRequest gets a device by ID Field Type Label Description id string id is the unique device ID with which to lookup the device","title":"GetRequest"},{"location":"onos-topo/docs/api/device/#getresponse","text":"GetResponse carries a device Field Type Label Description device Device device is the device object","title":"GetResponse"},{"location":"onos-topo/docs/api/device/#listrequest","text":"ListRequest requests a stream of devices and changes By default, the request requests a stream of all devices that are present in the topology when the request is received by the service. However, if subscribe is true , the stream will remain open after all devices have been sent and events that occur following the last device will be streamed to the client until the stream is closed. Field Type Label Description subscribe bool subscribe indicates whether to subscribe to events (e.g. ADD, UPDATE, and REMOVE) that occur after all devices have been streamed to the client","title":"ListRequest"},{"location":"onos-topo/docs/api/device/#listresponse","text":"ListResponse carries a single device event Field Type Label Description type ListResponse.Type type is the type of the event device Device device is the device on which the event occurred","title":"ListResponse"},{"location":"onos-topo/docs/api/device/#protocolstate","text":"ProtocolState contains information related to service and connectivity to a device Field Type Label Description protocol Protocol The protocol to which state relates connectivityState ConnectivityState ConnectivityState contains the L3 connectivity information channelState ChannelState ChannelState relates to the availability of the gRPC channel serviceState ServiceState ServiceState indicates the availability of the gRPC servic on top of the channel","title":"ProtocolState"},{"location":"onos-topo/docs/api/device/#removerequest","text":"RemoveRequest removes a device by ID Field Type Label Description device Device device is the device to remove","title":"RemoveRequest"},{"location":"onos-topo/docs/api/device/#removeresponse","text":"RemoveResponse is sent in response to a RemoveDeviceRequest","title":"RemoveResponse"},{"location":"onos-topo/docs/api/device/#tlsconfig","text":"Device TLS configuration Field Type Label Description caCert string caCert is the name of the device's CA certificate cert string cert is the name of the device's certificate key string key is the name of the device's TLS key plain bool plain indicates whether to connect to the device over plaintext insecure bool insecure indicates whether to connect to the device with insecure communication","title":"TlsConfig"},{"location":"onos-topo/docs/api/device/#updaterequest","text":"UpdateRequest updates a device Field Type Label Description device Device device is the updated device","title":"UpdateRequest"},{"location":"onos-topo/docs/api/device/#updateresponse","text":"UpdateResponse is sent in response to an UpdateDeviceRequest Field Type Label Description device Device device is the device with updated revision","title":"UpdateResponse"},{"location":"onos-topo/docs/api/device/#channelstate","text":"ConnectivityState represents the state of a gRPC channel to the device from the service container Name Number Description UNKNOWN_CHANNEL_STATE 0 UNKNOWN_CHANNEL_STATE constant needed to go around proto3 nullifying the 0 values CONNECTED 1 CONNECTED indicates the corresponding grpc channel is connected on this device DISCONNECTED 2 DISCONNECTED indicates the corresponding grpc channel is not connected on this device","title":"ChannelState"},{"location":"onos-topo/docs/api/device/#connectivitystate","text":"ConnectivityState represents the L3 reachability of a device from the service container (e.g. enos-config), independently of gRPC or the service itself (e.g. gNMI) Name Number Description UNKNOWN_CONNECTIVITY_STATE 0 UNKNOWN_CONNECTIVITY_STATE constant needed to go around proto3 nullifying the 0 values REACHABLE 1 REACHABLE indicates the the service can reach the device at L3 UNREACHABLE 2 UNREACHABLE indicates the the service can't reach the device at L3","title":"ConnectivityState"},{"location":"onos-topo/docs/api/device/#listresponsetype","text":"Device event type Name Number Description NONE 0 NONE indicates this response does not represent a state change ADDED 1 ADDED is an event which occurs when a device is added to the topology UPDATED 2 UPDATED is an event which occurs when a device is updated REMOVED 3 REMOVED is an event which occurs when a device is removed from the topology","title":"ListResponse.Type"},{"location":"onos-topo/docs/api/device/#protocol","text":"Protocol to interact with a device Name Number Description UNKNOWN_PROTOCOL 0 UNKNOWN_PROTOCOL constant needed to go around proto3 nullifying the 0 values GNMI 1 GNMI protocol reference P4RUNTIME 2 P4RUNTIME protocol reference GNOI 3 GNOI protocol reference E2AP 4 E2 Control Plane Protocol","title":"Protocol"},{"location":"onos-topo/docs/api/device/#servicestate","text":"ServiceState represents the state of the gRPC service (e.g. gNMI) to the device from the service container Name Number Description UNKNOWN_SERVICE_STATE 0 UNKNOWN_SERVICE_STATE constant needed to go around proto3 nullifying the 0 values AVAILABLE 1 AVAILABLE indicates the corresponding grpc service is available UNAVAILABLE 2 UNAVAILABLE indicates the corresponding grpc service is not available CONNECTING 3 CONNECTING indicates the corresponding protocol is in the connecting phase on this device","title":"ServiceState"},{"location":"onos-topo/docs/api/device/#deviceservice","text":"DeviceService provides an API for managing devices. Method Name Request Type Response Type Description Add AddRequest AddResponse Add adds a device to the topology Update UpdateRequest UpdateResponse Update updates a device Get GetRequest GetResponse Get gets a device by ID List ListRequest ListResponse stream List gets a stream of device add/update/remove events Remove RemoveRequest RemoveResponse Remove removes a device from the topology","title":"DeviceService"},{"location":"onos-topo/docs/api/device/#scalar-value-types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby double double double float float64 double float Float float float float float float32 float float Float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required) int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required) uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required) sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required) sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required) fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required) sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum bool bool boolean boolean bool bool boolean TrueClass/FalseClass string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8) bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)","title":"Scalar Value Types"},{"location":"onos-topo/docs/api/diags/","text":"Protocol Documentation Table of Contents api/diags/diags.proto TopoDiags Scalar Value Types Top api/diags/diags.proto TopoDiags TopoDiags provides means for obtaining diagnostic information about internal system state. Method Name Request Type Response Type Description Scalar Value Types .proto Type Notes C++ Java Python Go C# PHP Ruby double double double float float64 double float Float float float float float float32 float float Float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required) int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required) uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required) sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required) sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required) fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required) sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum bool bool boolean boolean bool bool boolean TrueClass/FalseClass string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8) bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)","title":"Diagnostic API"},{"location":"onos-topo/docs/api/diags/#protocol-documentation","text":"","title":"Protocol Documentation"},{"location":"onos-topo/docs/api/diags/#table-of-contents","text":"api/diags/diags.proto TopoDiags Scalar Value Types Top","title":"Table of Contents"},{"location":"onos-topo/docs/api/diags/#apidiagsdiagsproto","text":"","title":"api/diags/diags.proto"},{"location":"onos-topo/docs/api/diags/#topodiags","text":"TopoDiags provides means for obtaining diagnostic information about internal system state. Method Name Request Type Response Type Description","title":"TopoDiags"},{"location":"onos-topo/docs/api/diags/#scalar-value-types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby double double double float float64 double float Float float float float float float32 float float Float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required) int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required) uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required) sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required) sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required) fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required) sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum bool bool boolean boolean bool bool boolean TrueClass/FalseClass string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8) bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)","title":"Scalar Value Types"},{"location":"onos-ztp/docs/setup/","text":"How to install and run onos-ztp? The current implementation of the ZTP subsystem uses local file system storage for the role configuration; this is only temporary. To start the server simply run: > go run github.com/onosproject/onos-ztp/cmd/onos-ztp You may then use the ONOS CLI ztp commands from the consolidated ONOS CLI program, e.g. > onos ztp get roles > onos ztp add role test/samplejson/leaf.json > onos ztp add role test/samplejson/spine.json > onos ztp get role leaf > onos ztp remove role spine More documentation to be added.","title":"How To Install And Run ZTP?"},{"location":"onos-ztp/docs/setup/#how-to-install-and-run-onos-ztp","text":"The current implementation of the ZTP subsystem uses local file system storage for the role configuration; this is only temporary. To start the server simply run: > go run github.com/onosproject/onos-ztp/cmd/onos-ztp You may then use the ONOS CLI ztp commands from the consolidated ONOS CLI program, e.g. > onos ztp get roles > onos ztp add role test/samplejson/leaf.json > onos ztp add role test/samplejson/spine.json > onos ztp get role leaf > onos ztp remove role spine More documentation to be added.","title":"How to install and run onos-ztp?"},{"location":"onos-ztp/docs/api/admin/","text":"Protocol Documentation Table of Contents api/admin/admin.proto ZtpAdminService api/admin/roles.proto DeviceConfig DevicePipeline DeviceProperty DeviceRoleChange DeviceRoleChangeRequest DeviceRoleChangeResponse DeviceRoleConfig DeviceRoleRequest DeviceRoleChange.ChangeType DeviceRoleChangeRequest.ChangeType DeviceRoleService Scalar Value Types Top api/admin/admin.proto ZtpAdminService ZtpAdminService provides means for enhanced interactions with the zero-touch-provisioning subsystem. Method Name Request Type Response Type Description Top api/admin/roles.proto DeviceConfig DeviceConfig is a set of initial configuration properties to be applied to a device. Field Type Label Description softwareVersion string properties DeviceProperty repeated DevicePipeline DevicePipeline carries information about the P4 pipeline configuration Field Type Label Description pipeconf string driver string DeviceProperty DeviceProperty is a path/type/value tuple Field Type Label Description path string type string value string DeviceRoleChange DeviceRoleChange is an event describing a change to a device role configuration. Field Type Label Description change DeviceRoleChange.ChangeType config DeviceRoleConfig DeviceRoleChangeRequest DeviceRoleChangeRequest is a request for a change to a device role configuration Field Type Label Description change DeviceRoleChangeRequest.ChangeType config DeviceRoleConfig DeviceRoleChangeResponse DeviceRoleChangeResponse is a response for a change to a device role configuration Field Type Label Description change DeviceRoleChange DeviceRoleConfig DeviceRoleConfig carries the template configuration associated with a device role Field Type Label Description role string config DeviceConfig pipeline DevicePipeline DeviceRoleRequest DeviceRoleRequest is a request for device role configuration. Field Type Label Description role string DeviceRoleChange.ChangeType Name Number Description UPDATED 0 ADDED 1 DELETED 2 DeviceRoleChangeRequest.ChangeType Name Number Description UPDATE 0 ADD 1 DELETE 2 DeviceRoleService DeviceRoleService provides means for setting up device role configurations in support of zero-touch provisioning activities. Method Name Request Type Response Type Description Set DeviceRoleChangeRequest DeviceRoleChangeResponse Set provides means to add, update or delete device role configuration. Get DeviceRoleRequest DeviceRoleConfig stream Get provides means to query device role configuration. Subscribe DeviceRoleRequest DeviceRoleChange stream Subscribe provides means to monitor changes in the device role configuration. Scalar Value Types .proto Type Notes C++ Type Java Type Python Type double double double float float float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long uint32 Uses variable-length encoding. uint32 int int/long uint64 Uses variable-length encoding. uint64 long int/long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long sfixed32 Always four bytes. int32 int int sfixed64 Always eight bytes. int64 long int/long bool bool boolean boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode bytes May contain any arbitrary sequence of bytes. string ByteString str","title":"Admin API"},{"location":"onos-ztp/docs/api/admin/#protocol-documentation","text":"","title":"Protocol Documentation"},{"location":"onos-ztp/docs/api/admin/#table-of-contents","text":"api/admin/admin.proto ZtpAdminService api/admin/roles.proto DeviceConfig DevicePipeline DeviceProperty DeviceRoleChange DeviceRoleChangeRequest DeviceRoleChangeResponse DeviceRoleConfig DeviceRoleRequest DeviceRoleChange.ChangeType DeviceRoleChangeRequest.ChangeType DeviceRoleService Scalar Value Types Top","title":"Table of Contents"},{"location":"onos-ztp/docs/api/admin/#apiadminadminproto","text":"","title":"api/admin/admin.proto"},{"location":"onos-ztp/docs/api/admin/#ztpadminservice","text":"ZtpAdminService provides means for enhanced interactions with the zero-touch-provisioning subsystem. Method Name Request Type Response Type Description Top","title":"ZtpAdminService"},{"location":"onos-ztp/docs/api/admin/#apiadminrolesproto","text":"","title":"api/admin/roles.proto"},{"location":"onos-ztp/docs/api/admin/#deviceconfig","text":"DeviceConfig is a set of initial configuration properties to be applied to a device. Field Type Label Description softwareVersion string properties DeviceProperty repeated","title":"DeviceConfig"},{"location":"onos-ztp/docs/api/admin/#devicepipeline","text":"DevicePipeline carries information about the P4 pipeline configuration Field Type Label Description pipeconf string driver string","title":"DevicePipeline"},{"location":"onos-ztp/docs/api/admin/#deviceproperty","text":"DeviceProperty is a path/type/value tuple Field Type Label Description path string type string value string","title":"DeviceProperty"},{"location":"onos-ztp/docs/api/admin/#devicerolechange","text":"DeviceRoleChange is an event describing a change to a device role configuration. Field Type Label Description change DeviceRoleChange.ChangeType config DeviceRoleConfig","title":"DeviceRoleChange"},{"location":"onos-ztp/docs/api/admin/#devicerolechangerequest","text":"DeviceRoleChangeRequest is a request for a change to a device role configuration Field Type Label Description change DeviceRoleChangeRequest.ChangeType config DeviceRoleConfig","title":"DeviceRoleChangeRequest"},{"location":"onos-ztp/docs/api/admin/#devicerolechangeresponse","text":"DeviceRoleChangeResponse is a response for a change to a device role configuration Field Type Label Description change DeviceRoleChange","title":"DeviceRoleChangeResponse"},{"location":"onos-ztp/docs/api/admin/#deviceroleconfig","text":"DeviceRoleConfig carries the template configuration associated with a device role Field Type Label Description role string config DeviceConfig pipeline DevicePipeline","title":"DeviceRoleConfig"},{"location":"onos-ztp/docs/api/admin/#devicerolerequest","text":"DeviceRoleRequest is a request for device role configuration. Field Type Label Description role string","title":"DeviceRoleRequest"},{"location":"onos-ztp/docs/api/admin/#devicerolechangechangetype","text":"Name Number Description UPDATED 0 ADDED 1 DELETED 2","title":"DeviceRoleChange.ChangeType"},{"location":"onos-ztp/docs/api/admin/#devicerolechangerequestchangetype","text":"Name Number Description UPDATE 0 ADD 1 DELETE 2","title":"DeviceRoleChangeRequest.ChangeType"},{"location":"onos-ztp/docs/api/admin/#deviceroleservice","text":"DeviceRoleService provides means for setting up device role configurations in support of zero-touch provisioning activities. Method Name Request Type Response Type Description Set DeviceRoleChangeRequest DeviceRoleChangeResponse Set provides means to add, update or delete device role configuration. Get DeviceRoleRequest DeviceRoleConfig stream Get provides means to query device role configuration. Subscribe DeviceRoleRequest DeviceRoleChange stream Subscribe provides means to monitor changes in the device role configuration.","title":"DeviceRoleService"},{"location":"onos-ztp/docs/api/admin/#scalar-value-types","text":".proto Type Notes C++ Type Java Type Python Type double double double float float float float float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long uint32 Uses variable-length encoding. uint32 int int/long uint64 Uses variable-length encoding. uint64 long int/long sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long sfixed32 Always four bytes. int32 int int sfixed64 Always eight bytes. int64 long int/long bool bool boolean boolean string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode bytes May contain any arbitrary sequence of bytes. string ByteString str","title":"Scalar Value Types"},{"location":"tlaplus-monitor/docs/","text":"Conformance Monitoring with TLA+ Distributed systems like \u00b5ONOS can be difficult to design and even harder to implement. When systems don't strictly conform to their intended properties, unpredictable behaviors can emerge. Even with good design and coding practices in place, building confidence in a distributed system can require extensive testing and evaluation. To aid in the identification of concurrency bugs and help build confidence \u00b5ONOS services adhere to their specifications, \u00b5ONOS supports a special form of monitoring designed to detect violations of the system's properties. Conformance monitoring in \u00b5ONOS uses formal modelling techniques to specify and verify system properties in near-real time. Deployment When performance conformance monitoring on a \u00b5ONOS cluster, users must use Helm to deploy a single monitor pod per TLA+ specification. Prerequisites The conformance monitor currently requires Kafka to stream traces to TLC. To deploy Kafka using Helm, first add the incubator repository to your Helm configuration: $ helm repo add incubator http://storage.googleapis.com/kubernetes-charts-incubator Define a values.yaml file for your Kafka cluster, configuring the topics to be used by the conformance monitor to consume traces and produce alerts: replicas : 1 zookeeper : replicaCount : 1 topics : - name : traces partitions : 3 replicationFactor : 1 - name : alerts partitions : 1 replicationFactor : 1 Then, install the incubator/kafka chart with the desired configuration overrides: $ helm install kafka incubator/kafka --values values.yaml The successful completion of the kafka-config pod indicates the Kafka brokers have completed startup and configured topics have been created. Installation Once the Kafka cluster has been configured, this chart can be deployed to perform near real-time conformance monitoring on Kafka streams. The monitor uses TLA+ specifications to evaluate traces received from Kafka, and invariants specified in the chart configuration can detect safety violations in the trace stream. Several artifacts are required to by the chart: model - the name of the module to evaluate modules - an array of TLA+ module files to mount to the monitor pod spec - the specification to evaluate init - the state initialization predicate (required if spec is not configured) next - the next state relation (required if spec is not configured) Additional options can be used to specify invariants and other constraints on the model checker: invariants - an array of invariants to check for each trace constants - a mapping of constant values to assign to the model constraints - an array of state constraints properties - an array of model properties $ helm install my-monitor --set modules ={ Cache.tla,CacheHistory.tla } --set model = Cache.tla --set config.spec = Spec --set config.invariants ={ TypeOK } Specifications The role of the conformance monitor is to track the system state over time and detect violations of safety guarantees by analyzing the system state. To do so, TLA+ specifications are used to provide a formal model for state transitions and specify the invariants to which the system must conform. TLA+ specifications consist of one or more modules defined in .tla files. A module defines a set of formulas for evaluating the state of the system. The specification provides a formula describing the initial system state and its transitions: ---------------------------- MODULE MonotonicTrace -------------------------- EXTENDS Naturals , Sequences \\ * A list of variables in the spec vars == << ... >> \\ * The init predicate describing the initial state of the system Init == ... \\ * The next state relation describing possible state transitions Next == ... \\ * The system specification describes the initial system state and next state relations Spec == Init / \\ [] [ Next ] _ << vars >> ============================================================================= Typically, the TLA+ model checker, TLC, computes and evaluates every state that can be reached by the spec according to its initial state and next state relation. Conformance monitoring specs operate on an infinite stream of traces, using the NextTrace operator to consume and check traces in near-real time: INSTANCE Traces \\ * The previous trace version VARIABLE prevVersion \\ * The current trace version VARIABLE nextVersion \\ * A list of variables in the spec vars == << prevVersion , nextVersion >> \\ * Read a trace record from the stream and update the previous and next versions Read == LET record == NextTrace IN / \\ PrintT ( record ) / \\ prevVersion ' = nextVersion /\\ nextVersion' = record . version \\ * The init predicate describing the initial state of the system Init == / \\ prevVersion = 0 / \\ nextVersion = 0 \\ * The next state relation describing possible state transitions Next == \\ / Read \\ / UNCHANGED << vars >> The final component of a conformance spec is the invariant(s). Invariants are predicates that describe the properties of a well behaved (conforming) system. After each trace is consumed and processed from the traces stream, TLC will evaluate invariants to determine whether the system's state conforms to its safety properties: \\* An invariant verifying that the trace version is monotonically increasing TypeOK == nextVersion # 0 => nextVersion < prevVersion In the event the invariant is violated by the system traces, the PublishAlert operator can be used to publish an alert. INSTANCE Alerts \\ * An invariant verifying that the trace version is monotonically increasing TypeOK == \\ / nextVersion # 0 => nextVersion < prevVersion \\ / PublishAlert ([ msg |-> \"Invariant violated\" , prevVersion |-> prevVersion , nextVersion |-> nextVersion ]) With the initial state predicate, the next state relation, and the type invariants, a complete conformance monitoring spec can be compiled: ---------------------------- MODULE MonotonicTrace -------------------------- EXTENDS Naturals , Sequences INSTANCE Traces INSTANCE Alerts \\ * The previous trace version VARIABLE prevVersion \\ * The current trace version VARIABLE nextVersion \\ * A list of variables in the spec vars == << prevVersion , nextVersion >> \\ * An invariant verifying that the trace version is monotonically increasing TypeOK == \\ / nextVersion # 0 => nextVersion < prevVersion \\ / PublishAlert ( [ msg |-> \"Invariant violated\", prevVersion |-> prevVersion, nextVersion |-> nextVersion ] ) \\ * Read a trace record from the traces stream and update the previous and next versions Read == LET record == NextTrace IN / \\ PrintT ( record ) / \\ prevVersion ' = nextVersion /\\ nextVersion' = record . version \\ * The init predicate describing the initial state of the system Init == / \\ prevVersion = 0 / \\ nextVersion = 0 \\ * The next state relation describing possible state transitions Next == \\ / Read \\ / UNCHANGED << vars >> \\ * The system specification describes the initial system state and next state relations Spec == Init / \\ [] [ Next ] _ << vars >> ============================================================================= To deploy the specification for conformance monitoring, the chart must be configured to identify the specification Spec and its invariant TypeOK : $ helm install my-monitor --set modules ={ MonotonicTrace.tla } --set model = MonotonicTrace.tla --set config.spec = Spec --set config.invariants ={ TypeOK } The model will be initialized with the prevVersion and nextVersion set to 0 . As traces are pushed onto the traces stream, the model checker will Read the trace records, update the model state, and evaluate the invariant TypeOK .","title":"Conformance Monitoring with TLA+"},{"location":"tlaplus-monitor/docs/#conformance-monitoring-with-tla","text":"Distributed systems like \u00b5ONOS can be difficult to design and even harder to implement. When systems don't strictly conform to their intended properties, unpredictable behaviors can emerge. Even with good design and coding practices in place, building confidence in a distributed system can require extensive testing and evaluation. To aid in the identification of concurrency bugs and help build confidence \u00b5ONOS services adhere to their specifications, \u00b5ONOS supports a special form of monitoring designed to detect violations of the system's properties. Conformance monitoring in \u00b5ONOS uses formal modelling techniques to specify and verify system properties in near-real time.","title":"Conformance Monitoring with TLA+"},{"location":"tlaplus-monitor/docs/#deployment","text":"When performance conformance monitoring on a \u00b5ONOS cluster, users must use Helm to deploy a single monitor pod per TLA+ specification.","title":"Deployment"},{"location":"tlaplus-monitor/docs/#prerequisites","text":"The conformance monitor currently requires Kafka to stream traces to TLC. To deploy Kafka using Helm, first add the incubator repository to your Helm configuration: $ helm repo add incubator http://storage.googleapis.com/kubernetes-charts-incubator Define a values.yaml file for your Kafka cluster, configuring the topics to be used by the conformance monitor to consume traces and produce alerts: replicas : 1 zookeeper : replicaCount : 1 topics : - name : traces partitions : 3 replicationFactor : 1 - name : alerts partitions : 1 replicationFactor : 1 Then, install the incubator/kafka chart with the desired configuration overrides: $ helm install kafka incubator/kafka --values values.yaml The successful completion of the kafka-config pod indicates the Kafka brokers have completed startup and configured topics have been created.","title":"Prerequisites"},{"location":"tlaplus-monitor/docs/#installation","text":"Once the Kafka cluster has been configured, this chart can be deployed to perform near real-time conformance monitoring on Kafka streams. The monitor uses TLA+ specifications to evaluate traces received from Kafka, and invariants specified in the chart configuration can detect safety violations in the trace stream. Several artifacts are required to by the chart: model - the name of the module to evaluate modules - an array of TLA+ module files to mount to the monitor pod spec - the specification to evaluate init - the state initialization predicate (required if spec is not configured) next - the next state relation (required if spec is not configured) Additional options can be used to specify invariants and other constraints on the model checker: invariants - an array of invariants to check for each trace constants - a mapping of constant values to assign to the model constraints - an array of state constraints properties - an array of model properties $ helm install my-monitor --set modules ={ Cache.tla,CacheHistory.tla } --set model = Cache.tla --set config.spec = Spec --set config.invariants ={ TypeOK }","title":"Installation"},{"location":"tlaplus-monitor/docs/#specifications","text":"The role of the conformance monitor is to track the system state over time and detect violations of safety guarantees by analyzing the system state. To do so, TLA+ specifications are used to provide a formal model for state transitions and specify the invariants to which the system must conform. TLA+ specifications consist of one or more modules defined in .tla files. A module defines a set of formulas for evaluating the state of the system. The specification provides a formula describing the initial system state and its transitions: ---------------------------- MODULE MonotonicTrace -------------------------- EXTENDS Naturals , Sequences \\ * A list of variables in the spec vars == << ... >> \\ * The init predicate describing the initial state of the system Init == ... \\ * The next state relation describing possible state transitions Next == ... \\ * The system specification describes the initial system state and next state relations Spec == Init / \\ [] [ Next ] _ << vars >> ============================================================================= Typically, the TLA+ model checker, TLC, computes and evaluates every state that can be reached by the spec according to its initial state and next state relation. Conformance monitoring specs operate on an infinite stream of traces, using the NextTrace operator to consume and check traces in near-real time: INSTANCE Traces \\ * The previous trace version VARIABLE prevVersion \\ * The current trace version VARIABLE nextVersion \\ * A list of variables in the spec vars == << prevVersion , nextVersion >> \\ * Read a trace record from the stream and update the previous and next versions Read == LET record == NextTrace IN / \\ PrintT ( record ) / \\ prevVersion ' = nextVersion /\\ nextVersion' = record . version \\ * The init predicate describing the initial state of the system Init == / \\ prevVersion = 0 / \\ nextVersion = 0 \\ * The next state relation describing possible state transitions Next == \\ / Read \\ / UNCHANGED << vars >> The final component of a conformance spec is the invariant(s). Invariants are predicates that describe the properties of a well behaved (conforming) system. After each trace is consumed and processed from the traces stream, TLC will evaluate invariants to determine whether the system's state conforms to its safety properties: \\* An invariant verifying that the trace version is monotonically increasing TypeOK == nextVersion # 0 => nextVersion < prevVersion In the event the invariant is violated by the system traces, the PublishAlert operator can be used to publish an alert. INSTANCE Alerts \\ * An invariant verifying that the trace version is monotonically increasing TypeOK == \\ / nextVersion # 0 => nextVersion < prevVersion \\ / PublishAlert ([ msg |-> \"Invariant violated\" , prevVersion |-> prevVersion , nextVersion |-> nextVersion ]) With the initial state predicate, the next state relation, and the type invariants, a complete conformance monitoring spec can be compiled: ---------------------------- MODULE MonotonicTrace -------------------------- EXTENDS Naturals , Sequences INSTANCE Traces INSTANCE Alerts \\ * The previous trace version VARIABLE prevVersion \\ * The current trace version VARIABLE nextVersion \\ * A list of variables in the spec vars == << prevVersion , nextVersion >> \\ * An invariant verifying that the trace version is monotonically increasing TypeOK == \\ / nextVersion # 0 => nextVersion < prevVersion \\ / PublishAlert ( [ msg |-> \"Invariant violated\", prevVersion |-> prevVersion, nextVersion |-> nextVersion ] ) \\ * Read a trace record from the traces stream and update the previous and next versions Read == LET record == NextTrace IN / \\ PrintT ( record ) / \\ prevVersion ' = nextVersion /\\ nextVersion' = record . version \\ * The init predicate describing the initial state of the system Init == / \\ prevVersion = 0 / \\ nextVersion = 0 \\ * The next state relation describing possible state transitions Next == \\ / Read \\ / UNCHANGED << vars >> \\ * The system specification describes the initial system state and next state relations Spec == Init / \\ [] [ Next ] _ << vars >> ============================================================================= To deploy the specification for conformance monitoring, the chart must be configured to identify the specification Spec and its invariant TypeOK : $ helm install my-monitor --set modules ={ MonotonicTrace.tla } --set model = MonotonicTrace.tla --set config.spec = Spec --set config.invariants ={ TypeOK } The model will be initialized with the prevVersion and nextVersion set to 0 . As traces are pushed onto the traces stream, the model checker will Read the trace records, update the model state, and evaluate the invariant TypeOK .","title":"Specifications"}]}